{"componentChunkName":"component---src-templates-post-js","path":"/coding-speed/","result":{"data":{"wordpressPost":{"id":"eb8a307e-2446-5c96-bcae-37e03757b6f1","title":"コーディングのスピードを上げるための７+２の方法！","slug":"coding-speed","content":"<p><strong class=\"marker\">Webコーダーとしての指標の1つに「コーディングの速さ」</strong>があるかと思います。わたしは1年前にコーダーをメインの職にしようと決意してから、速さという指標を伸ばすために色々と取り入れて試してきました。</p>\n<p>この記事では、Webサイトを作成する上のでコーディング速度を上げるために行っている（取り入れている）7つの方法をご紹介いたします。ぜひ、できそうなところから試していただけると嬉しいです！</p>\n<p>※ エディタはVSCodeを使っています。もしかすると他のエディタでは使い方が違う説明になっているかもしれませんが、あらかじめご理解いただけますと幸いです。</p>\n<div class=\"chat\"><figure class=\"chat-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"><figcaption>はにわまん</figcaption></figure><div class=\"chat-content\">まだまだ試行錯誤中です、、コーディングスピードの向上に終わりはありません！</div></div>\n<blockquote class=\"twitter-tweet\" data-lang=\"ja\">\n<p lang=\"ja\" dir=\"ltr\">&#x1f4dd; コーディングのスピードアップに使いたいツール？など</p>\n<p>&#x2705; スニペット<br />&#x2705; Sass（CSS設計）<br />&#x2705; Gulp<br />&#x2705; Emmet<br />&#x2705; 正規表現<br />&#x2705; 自動整形（Lint + Prettier）</p>\n<p>ここ数ヶ月でコーディングスピードが上がったように思います。<br />↑のツールを取り入れて、慣れてきたのがよかったのかと&#8230;！</p>\n<p>&mdash; はにわまん (@haniwa008) <a href=\"https://twitter.com/haniwa008/status/1035718821049319424?ref_src=twsrc%5Etfw\">2018年9月1日</a></p></blockquote>\n<p><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p>\n<div id=\"toc_container\" class=\"no_bullets\"><p class=\"toc_title\">目次</p><ul class=\"toc_list\"><li><a href=\"#7\"><span class=\"toc_number toc_depth_1\">1</span> コーディング速度（スピード）を上げる7つの方法</a><ul><li><a href=\"#i\"><span class=\"toc_number toc_depth_2\">1.1</span> テンプレート化</a></li><li><a href=\"#Emmet\"><span class=\"toc_number toc_depth_2\">1.2</span> Emmet</a></li><li><a href=\"#i-2\"><span class=\"toc_number toc_depth_2\">1.3</span> スニペット</a></li><li><a href=\"#SassCSS\"><span class=\"toc_number toc_depth_2\">1.4</span> Sass（CSS設計）</a></li><li><a href=\"#Gulp\"><span class=\"toc_number toc_depth_2\">1.5</span> Gulp</a></li><li><a href=\"#i-3\"><span class=\"toc_number toc_depth_2\">1.6</span> 正規表現</a></li><li><a href=\"#Lint_Prettier\"><span class=\"toc_number toc_depth_2\">1.7</span> 自動整形（Lint + Prettier）</a></li></ul></li><li><a href=\"#i-4\"><span class=\"toc_number toc_depth_1\">2</span> コーディング速度の前に大事なこと</a><ul><li><a href=\"#i-5\"><span class=\"toc_number toc_depth_2\">2.1</span> タイピング速度を上げる</a></li><li><a href=\"#i-6\"><span class=\"toc_number toc_depth_2\">2.2</span> パソコンを使いこなす</a></li></ul></li><li><a href=\"#i-7\"><span class=\"toc_number toc_depth_1\">3</span> おわり</a></li></ul></div>\n<h2><span id=\"7\">コーディング速度（スピード）を上げる7つの方法</span></h2>\n<p>自分が1年間いろいろ取り入れてきた中でコーディングスピードの向上に役立っていると思うツールや考え方をまとめています。</p>\n<h3><span id=\"i\">テンプレート化</span></h3>\n<p>コーディングは「型」がだいたい決まっていますよね。</p>\n<p>例えば以下のような感じです。</p>\n<ul>\n<li>ヘッダー</li>\n<li>メインビジュアル</li>\n<li>メインコンテンツ</li>\n<li>サイドメニュー</li>\n<li>フッター</li>\n</ul>\n<p>こういうのはあらかじめ自分用のテンプレートとして作っておくと最初の準備が楽になります。「このデザインのヘッダーならこれ使おう」「LP風ならこのテンプレート」「ブログ系ならこのテンプレート」みたいな感じです。</p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"D0u9K3ymBN\"><p><a href=\"https://haniwaman.com/zero-coding/\">仕事で0から静的サイトのHTMLコーディングする時の流れ（主に準備部分）</a></p></blockquote>\n<p><iframe title=\"&#8220;仕事で0から静的サイトのHTMLコーディングする時の流れ（主に準備部分）&#8221; &#8212; HPcode\" class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" src=\"https://haniwaman.com/zero-coding/embed/#?secret=D0u9K3ymBN\" data-secret=\"D0u9K3ymBN\" width=\"500\" height=\"282\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></p>\n<p>コーディング案件を対応していく中で、<strong class=\"marker\">自分がコーディングしやすい「型」</strong>ができてくると思います。1度使ったコードをそれっきりにするのではなく、今後のためにテンプレート化して残して使い回せるようにしておくと、未来の自分が楽できたりします。</p>\n<p>これはHTML、CSS、JavaScript、WordPressのすべてにおいて同様のことが言えます！</p>\n<h3><span id=\"Emmet\">Emmet</span></h3>\n<p><code>display: block;</code>の15文字を<code>db</code>の2文字で入力できるようになるのがEmmetです。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/06/emmet.gif\" alt=\"\" /></p>\n<p>HTML、CSSともに補助が付いていて、めちゃくちゃ使いますね・・・。たぶん今はEmmetがないとコーディングできません。それくらい便利な機能です。</p>\n<p>ほとんどのエディタに導入できると思いますので、お使いのエディタで調べて触ってみてください！</p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"3ttzLcvwl2\"><p><a href=\"https://haniwaman.com/emmet/\">「はじめて」でも簡単！Emmetの使い方とよく使うパターン集</a></p></blockquote>\n<p><iframe title=\"&#8220;「はじめて」でも簡単！Emmetの使い方とよく使うパターン集&#8221; &#8212; HPcode\" class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" src=\"https://haniwaman.com/emmet/embed/#?secret=3ttzLcvwl2\" data-secret=\"3ttzLcvwl2\" width=\"500\" height=\"282\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></p>\n<h3><span id=\"i-2\">スニペット</span></h3>\n<p>スニペットとは、エディターツールの中に保存しておけるパーツ部分のテンプレートだとイメージしていただければと思います。よく使うコーディングの書き方ってあると思います。</p>\n<p>例えば、わたしだと以下のようなCSSとか&#8230;。スニペットを使えば、例えば「<code>abv</code>」→ <span class=\"key\">Enter</span>とタイピングすれば以下のコードが展開されるようにすることができます。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-0\">コピー</span><code id=\"code-0\" class=\"css\">position: absolute;\r\ntop: 50%;\r\nleft: 8px;\r\ntransform: translateY(-50%);</code></pre>\n<p>このケースだと、3文字で66文字分の出力ができるわけで、こういった少しずつの積み重ねが時短に繋がるのかなと思います。</p>\n<p>ちなみにVSCodeのスニペットだと以下のように登録できます。</p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"6OG5msJE8c\"><p><a href=\"https://haniwaman.com/vscode-snipet/\">VSCodeにコードスニペットを登録して効率的にコーディング！</a></p></blockquote>\n<p><iframe title=\"&#8220;VSCodeにコードスニペットを登録して効率的にコーディング！&#8221; &#8212; HPcode\" class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" src=\"https://haniwaman.com/vscode-snipet/embed/#?secret=6OG5msJE8c\" data-secret=\"6OG5msJE8c\" width=\"500\" height=\"282\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></p>\n<h3><span id=\"SassCSS\">Sass（CSS設計）</span></h3>\n<p>Sassは<strong class=\"marker\">CSSを管理しやすくしたもの</strong>という認識でいいかと思います。</p>\n<p>個人的には以下のようなメリットが大きいと感じています。</p>\n<ul>\n<li>変数が使える</li>\n<li>入れ子の構造で見やすい</li>\n<li>機能ごとのまとまりで管理しやすい</li>\n</ul>\n<p>ページごとでファイル分けしたり、機能ごとでファイル分けしたりとすることで、CSSファイル自体がごちゃごちゃになるってことがまずありません。修正や加筆したい時はどのファイルに書かれているかはすぐに分かります。</p>\n<p><strong class=\"marker\">Sassを使うメリットはとにかく管理しやすくなること</strong>です。</p>\n<p>SassファイルからCSSに出力するための、コンパイルの知識（わたしはGulpを使っています）が必要になるので、導入の敷居がちょっと高いですが、、、覚えると手放せなくなるので、ぜひ取り入れてみてほしいと思います！</p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"c64qNpdSG9\"><p><a href=\"https://haniwaman.com/gulp-sass/\">Sassから完璧なCSSファイルを出力するために通したいGulpのタスク【WordPress編】</a></p></blockquote>\n<p><iframe title=\"&#8220;Sassから完璧なCSSファイルを出力するために通したいGulpのタスク【WordPress編】&#8221; &#8212; HPcode\" class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" src=\"https://haniwaman.com/gulp-sass/embed/#?secret=c64qNpdSG9\" data-secret=\"c64qNpdSG9\" width=\"500\" height=\"282\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></p>\n<p>Sassの書籍は圧倒的に以下がおすすめです。</p>\n<div class=\"cstmreba\">\n<div class=\"booklink-box\">\n<div class=\"booklink-image\"><a href=\"https://www.amazon.co.jp/exec/obidos/asin/4844334662/haniwaman-22/\" target=\"_blank\" ><img src=\"https://images-fe.ssl-images-amazon.com/images/I/51uHxc179CL._SL160_.jpg\" style=\"border: none;\" /></a></div>\n<div class=\"booklink-info\">\n<div class=\"booklink-name\"><a href=\"https://www.amazon.co.jp/exec/obidos/asin/4844334662/haniwaman-22/\" target=\"_blank\" >Web制作者のためのSassの教科書 これからのWebデザインの現場で必須のCSSメタ言語</a></p>\n<div class=\"booklink-powered-date\">posted with <a href=\"https://yomereba.com\" rel=\"nofollow\" target=\"_blank\">ヨメレバ</a></div>\n</div>\n<div class=\"booklink-detail\">平澤 隆,森田 壮 インプレス 2013-09-13    </div>\n<div class=\"booklink-link2\">\n<div class=\"shoplinkamazon\"><a href=\"https://www.amazon.co.jp/exec/obidos/asin/4844334662/haniwaman-22/\" target=\"_blank\" >Amazon</a></div>\n<div class=\"shoplinkkindle\"><a href=\"https://www.amazon.co.jp/exec/obidos/ASIN/B00FMLD7UC/haniwaman-22/\" target=\"_blank\" >Kindle</a></div>\n<div class=\"shoplinkrakuten\"><a href=\"https://hb.afl.rakuten.co.jp/hgc/117225c0.b43e75d1.117225c1.f4ba597a/yomereba_main_201812201549038979?pc=http%3A%2F%2Fbooks.rakuten.co.jp%2Frb%2F12451132%2F%3Fscid%3Daf_ich_link_urltxt%26m%3Dhttp%3A%2F%2Fm.rakuten.co.jp%2Fev%2Fbook%2F\" target=\"_blank\" >楽天ブックス</a></div>\n</p></div>\n</div>\n<div class=\"booklink-footer\"></div>\n</div>\n</div>\n<h3><span id=\"Gulp\">Gulp</span></h3>\n<p>Gulpは、<strong class=\"marker\">コーディングのあらゆる面で補助的な役割を<span class=\"font-l\">（ほぼ）自動</span>で行ってくれます</strong>。</p>\n<ul>\n<li>Sassを自動でコンパイル</li>\n<li>ベンダープレフィックの付与</li>\n<li>ファイルを保存したタイミングでブラウザも更新</li>\n<li>画像を圧縮</li>\n<li>ファイルの圧縮</li>\n</ul>\n<p>こちらも1度使えるようになると手放せなくなるツールですが、Sass以上に導入のハードルが高いです笑</p>\n<p>ただ、間違いなく便利でコーディングが楽になるので、環境構築にチャレンジしてみる価値は大いにあります。</p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"6EAd35YbuC\"><p><a href=\"https://haniwaman.com/gulp/\">静的HTMLサイト制作を楽にするGulpの基本的な使い方【Webコーダー向け】</a></p></blockquote>\n<p><iframe title=\"&#8220;静的HTMLサイト制作を楽にするGulpの基本的な使い方【Webコーダー向け】&#8221; &#8212; HPcode\" class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" src=\"https://haniwaman.com/gulp/embed/#?secret=6EAd35YbuC\" data-secret=\"6EAd35YbuC\" width=\"500\" height=\"282\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></p>\n<p>画像の圧縮に関しては以下で大いに勉強させていただきました。</p>\n<div class=\"cstmreba\">\n<div class=\"booklink-box\">\n<div class=\"booklink-image\"><a href=\"https://www.amazon.co.jp/exec/obidos/asin/4863542402/haniwaman-22/\" target=\"_blank\" ><img src=\"https://images-fe.ssl-images-amazon.com/images/I/51jofSf6qBL._SL160_.jpg\" style=\"border: none;\" /></a></div>\n<div class=\"booklink-info\">\n<div class=\"booklink-name\"><a href=\"https://www.amazon.co.jp/exec/obidos/asin/4863542402/haniwaman-22/\" target=\"_blank\" >Webデザイナーの仕事を楽にする! gulpではじめるWeb制作ワークフロー入門</a></p>\n<div class=\"booklink-powered-date\">posted with <a href=\"https://yomereba.com\" rel=\"nofollow\" target=\"_blank\">ヨメレバ</a></div>\n</div>\n<div class=\"booklink-detail\">中村 勇希 シーアンドアール研究所 2018-05-29    </div>\n<div class=\"booklink-link2\">\n<div class=\"shoplinkamazon\"><a href=\"https://www.amazon.co.jp/exec/obidos/asin/4863542402/haniwaman-22/\" target=\"_blank\" >Amazon</a></div>\n<div class=\"shoplinkkindle\"><a href=\"https://www.amazon.co.jp/exec/obidos/ASIN/B07D9BHXTN/haniwaman-22/\" target=\"_blank\" >Kindle</a></div>\n<div class=\"shoplinkrakuten\"><a href=\"https://hb.afl.rakuten.co.jp/hgc/117225c0.b43e75d1.117225c1.f4ba597a/yomereba_main_201812201549379734?pc=http%3A%2F%2Fbooks.rakuten.co.jp%2Frb%2F15406109%2F%3Fscid%3Daf_ich_link_urltxt%26m%3Dhttp%3A%2F%2Fm.rakuten.co.jp%2Fev%2Fbook%2F\" target=\"_blank\" >楽天ブックス</a></div>\n</p></div>\n</div>\n<div class=\"booklink-footer\"></div>\n</div>\n</div>\n<h3><span id=\"i-3\">正規表現</span></h3>\n<p>今回紹介する中では一番覚える優先順位は低いかもしれません。正規表現は主にテキストの置換で使います。</p>\n<p>イメージとしては、「型」から「型」への置換って感じでしょうか。手でポチポチ変えるよりも、一発でパッと書き換えることができるので、使えると楽になるかもしれません。</p>\n<blockquote class=\"twitter-tweet\" data-lang=\"ja\">\n<p lang=\"ja\" dir=\"ltr\">&#x1f4dd; 正規表現を使って効率的に置換</p>\n<p>正規表現が使えるようになると置換の効率がグンと上がります！</p>\n<p>例えば、タグ中身（全部が異なっていても）はそのままでタグだけ変えたいとか。 <a href=\"https://t.co/kLMvlCAWrw\">pic.twitter.com/kLMvlCAWrw</a></p>\n<p>&mdash; はにわまん (@haniwa008) <a href=\"https://twitter.com/haniwa008/status/1029579449195323392?ref_src=twsrc%5Etfw\">2018年8月15日</a></p></blockquote>\n<p><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p>\n<h3><span id=\"Lint_Prettier\">自動整形（Lint + Prettier）</span></h3>\n<p><a href=\"https://prettier.io/\" rel=\"noopener\" target=\"_blank\">Prettier</a>に出会った時はマジで感動しました。<strong class=\"marker\">ルールを指定するとコードを自動で整形してくれる</strong>のがPrettierです。</p>\n<p>しかも、整形するだけでなく、<strong class=\"marker\">ルールから逸れて間違って記述している箇所の修正もしてくれます</strong>。</p>\n<p>ルールは何で決めるかと言うと、Lintと呼ばれる文法チェックツールですね。わたしの場合はCSSとJavaScript、PHPは、保存（<span class=\"key\">Ctrl</span> + <span class=\"key\">S</span>）と同時に自動で整形されるようになっています。</p>\n<p>こんな至れり尽くせりなツールを使わない手はありません！<br />\nただし、導入ハードルは今回紹介した中では一番高いと思いますので、、頑張ってください・・・。</p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"qnkb1AInAm\"><p><a href=\"https://haniwaman.com/prettier-wordpress/\">VSCodeでPrettierを使ってWordPressのコーディング規約に沿った自動フォーマットする方法</a></p></blockquote>\n<p><iframe title=\"&#8220;VSCodeでPrettierを使ってWordPressのコーディング規約に沿った自動フォーマットする方法&#8221; &#8212; HPcode\" class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" src=\"https://haniwaman.com/prettier-wordpress/embed/#?secret=qnkb1AInAm\" data-secret=\"qnkb1AInAm\" width=\"500\" height=\"282\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></p>\n<h2><span id=\"i-4\">コーディング速度の前に大事なこと</span></h2>\n<p>コーディングではどうしてもテキストエディタだけに目がいきがちですが、実はその外側の操作スピードも大事だと思ったりしています。</p>\n<h3><span id=\"i-5\">タイピング速度を上げる</span></h3>\n<p>デスクワークにおいて、タイピングのスピードが一番時短に繋がるのかと思っています。なぜなら打つ回数が圧倒的に多いから。100文字を5秒で打てる人と60秒かかる人では、コーディングの時短うんぬんしても、それほど早くならないと思います。</p>\n<p>コーディングはEmmetやスニペットで楽できても、基本的にタイピングです&#8230;。</p>\n<p>なので、スピードの一番の下支えになるのはキードードのタイピングスピードだと思います。<br />\n（わたしはめっちゃ誤字するし、遅いので課題です・・・）</p>\n<blockquote class=\"twitter-tweet\" data-lang=\"ja\">\n<p lang=\"ja\" dir=\"ltr\">ツール（アプリケーション）の土台となっているOSがあって、繋がっているインタフェースがあって、その上に人間がいて。</p>\n<p>便利ツールを使うと作業は早くなるけど、OSを使いこなしたり、マウスやキーボードを使いこなしたりも大事。そして何より1番のベースとなるのはタイピングスピードだと思う。</p>\n<p>&mdash; はにわまん (@haniwa008) <a href=\"https://twitter.com/haniwa008/status/1028115607764398080?ref_src=twsrc%5Etfw\">2018年8月11日</a></p></blockquote>\n<p><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p>\n<h3><span id=\"i-6\">パソコンを使いこなす</span></h3>\n<p>そして、パソコン自体のスピードですね。調べ物をする時に、ブラウザのURLの欄にマウスでジリジリ持っていってクリックするのか、<span class=\"key\">Ctrl</span> + <span class=\"key\">L</span>で入力エリアに飛んで入力するのかでは、ちょっとの差かもしれませんが、早くなると思います。</p>\n<p>タブの移動をマウスでポチポチするのか、<span class=\"key\">Ctrl</span> + <span class=\"key\">Tab</span>で移動するのか、などなど。こういう少しの時短の積み重ねの連続が効率化の基本だと思います。</p>\n<p>ぜひ日頃から「もっとパソコンの操作早くできないかな」と考えながら作業すると気づかぬ間に少しづつ早くなっているはずです。</p>\n<blockquote class=\"twitter-tweet\" data-lang=\"ja\">\n<p lang=\"ja\" dir=\"ltr\">2年前はキーボードのショーカットなんて何も使えなかったわたしが、今やショートカットがないと仕事できないようになった。<br />今の会社には感謝しかない。。効率化って概念と素晴らしさを教えてくれた。</p>\n<p>&mdash; はにわまん (@haniwa008) <a href=\"https://twitter.com/haniwa008/status/1017286195770900480?ref_src=twsrc%5Etfw\">2018年7月12日</a></p></blockquote>\n<p><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p>\n<p>Windowsだと、一部ですが以下のようなショートカットなど使えるようになっていると、少し早く仕事ができるようになるかと思います。</p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"YXZ0uCiNdV\"><p><a href=\"https://haniwaman.com/windows-shortcut/\">仕事の効率が10倍に！とっておきのWindowsのショートカット9選+3つの設定</a></p></blockquote>\n<p><iframe title=\"&#8220;仕事の効率が10倍に！とっておきのWindowsのショートカット9選+3つの設定&#8221; &#8212; HPcode\" class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" src=\"https://haniwaman.com/windows-shortcut/embed/#?secret=YXZ0uCiNdV\" data-secret=\"YXZ0uCiNdV\" width=\"500\" height=\"282\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></p>\n<h2><span id=\"i-7\">おわり</span></h2><div class=\"matome\"><div class=\"matome-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"></div><div class=\"matome-twitter\"><a href=\"https://twitter.com/haniwa008?ref_src=twsrc%5Etfw\" class=\"twitter-follow-button\" data-show-screen-name=\"false\" data-size=\"large\" data-lang=\"ja\" data-show-count=\"true\">Follow @haniwa008</a><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></div></div><!-- /matome -->\n<p>コーディング速度を上げるための７+２の方法でした。</p>\n<p>おさらいすると、以下の７つになります。</p>\n<ul>\n<li>テンプレート化</li>\n<li>Emmet</li>\n<li>スニペット</li>\n<li>正規表現</li>\n<li>Sass（CSS設計）</li>\n<li>Gulp</li>\n<li>自動整形（Lint + Prettier）</li>\n</ul>\n<p>Sass以降から、環境構築のハードルが上がりますね・・・。ただし<strong class=\"marker\">使えるようになると見える景色が変わることは確実</strong>です。ぜひ、どこかのタイミングで導入を検討してみてください！</p>\n<p>そして、タイピングやパソコン操作（ショートカットキー）といったところも日頃から意識して取り組むと、気づいたら「あれ、早くなっているかも」って思える日がくるかもしれません。</p>\n<p><strong class=\"marker\">効率化は少しの時短の積み重ねの連続</strong>だと思います。日々、少しだけでも早くなっていきましょう！</p>\n","date":"December 21, 2018","categories":[{"name":"環境","slug":"setting"}],"tags":null,"author":{"name":"はにわまん","slug":"haniwaman"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"eb8a307e-2446-5c96-bcae-37e03757b6f1"}}}