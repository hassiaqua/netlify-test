{"componentChunkName":"component---src-templates-post-js","path":"/customizer/","result":{"data":{"wordpressPost":{"id":"2736377c-7156-5d19-84fd-92c5a530de43","title":"カスタマイザーのカスタマイズ方法！自由度の高いテーマ作りができるようになります","slug":"customizer","content":"<p>WordPressの管理画面にある外観 → カスタマイズに項目を追加する方法です。カスタマイザーと呼ばれている場所で、<strong class=\"marker\">HTMLやCSSを知らないユーザーでも色や設定を変更できる機</strong>能になります。</p>\n<p>最近のテーマだとカスタマイザーにテーマの設定を詰め込むことが主流になっているような気がします。（一昔前はテーマ用の設定ページがあった気がする）</p>\n<p>そんなカスタマイザーについて、項目を追加したり編集したりする方法を紹介していきます！</p>\n<div class=\"chat\"><figure class=\"chat-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"><figcaption>はにわまん</figcaption></figure><div class=\"chat-content\">カスタマイザーのリアルタイムで変更される感じは楽しいです！</div></div>\n<div id=\"toc_container\" class=\"no_bullets\"><p class=\"toc_title\">目次</p><ul class=\"toc_list\"><li><a href=\"#i\"><span class=\"toc_number toc_depth_1\">1</span> カスタマイザーに項目を追加する方法</a><ul><li><a href=\"#i-2\"><span class=\"toc_number toc_depth_2\">1.1</span> パネルの追加</a></li><li><a href=\"#i-3\"><span class=\"toc_number toc_depth_2\">1.2</span> セクションの追加</a></li><li><a href=\"#i-4\"><span class=\"toc_number toc_depth_2\">1.3</span> セッティングとコントロールの追加</a></li></ul></li><li><a href=\"#i-5\"><span class=\"toc_number toc_depth_1\">2</span> カスタマイザーで指定できる入力形式</a><ul><li><a href=\"#i-6\"><span class=\"toc_number toc_depth_2\">2.1</span> タイプを変えるパターン</a></li><li><a href=\"#i-7\"><span class=\"toc_number toc_depth_2\">2.2</span> カスタマイザーのクラス指定を変えるパターン</a></li></ul></li><li><a href=\"#i-8\"><span class=\"toc_number toc_depth_1\">3</span> カスタマイザーの値を反映する方法</a></li><li><a href=\"#i-9\"><span class=\"toc_number toc_depth_1\">4</span> おわり</a></li></ul></div>\n<h2 id=\"add\"><span id=\"i\">カスタマイザーに項目を追加する方法</span></h2>\n<p>早速カスタマイザーに項目を追加していきましょう。完全にオリジナルな自分の項目を追加する想定で作っていきます。</p>\n<p>公式はこちら → <a href=\"https://wpdocs.osdn.jp/%E3%83%86%E3%83%BC%E3%83%9E%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA_API\">テーマカスタマイズ API &#8211; WordPress Codex 日本語版</a></p>\n<p>まずは<span class=\"filename\">functions.php</span>に以下のようなコードを書いてあげてください。<br />\n（全部を丸々コピーでOKです）</p>\n<pre><span class=\"filename\">functions.php</span><span class=\"code-copy\" data-clipboard-target=\"#code-0\">コピー</span><code id=\"code-0\" class=\"php\">function my_customize( $wp_customize ) {\r\n\r\n\t$wp_customize-&gt;add_panel(\r\n\t\t'my_panel',\r\n\t\tarray(\r\n\t\t\t'title'    =&gt; 'パネル名',\r\n\t\t\t'priority' =&gt; 1,\r\n\t\t)\r\n\t);\r\n\t\r\n\t$wp_customize-&gt;add_section(\r\n\t\t'my_section',\r\n\t\tarray(\r\n\t\t\t'title'    =&gt; 'セクション名',\r\n\t\t\t'panel'    =&gt; 'my_panel',\r\n\t\t\t'priority' =&gt; 1,\r\n\t\t)\r\n\t);\r\n\t\r\n\t$wp_customize-&gt;add_setting( 'my_setting' );\r\n\t$wp_customize-&gt;add_control(\r\n\t\tnew WP_Customize_Control(\r\n\t\t\t$wp_customize,\r\n\t\t\t'my_control',\r\n\t\t\tarray(\r\n\t\t\t\t'label'    =&gt; 'コントロールの見出し',\r\n\t\t\t\t'section'  =&gt; 'my_section',\r\n\t\t\t\t'settings' =&gt; 'my_setting',\r\n\t\t\t\t'priority' =&gt; 1,\r\n\t\t\t)\r\n\t\t)\r\n\t);\r\n}\r\nadd_action( 'customize_register', 'my_customize' );</code></pre>\n<p>add_〇〇を見てもらうとイメージできるかもしれませんが、カスタマイザーは以下の4つの項目から成り立っています。</p>\n<ul>\n<li>パネル（<code>add_panel</code>）</li>\n<li>セクション（<code>add_section</code>）</li>\n<li>セッティング（<code>add_setting</code>）</li>\n<li>コントロール（<code>add_control</code>）</li>\n</ul>\n<p>カスタマイザーの注意点として、パネルだけ作るということはできなくて、<strong class=\"marker\">パネルを作るならセクションからコントロールまで用意してあげないと表示されることはありません</strong>。</p>\n<p>なんで表示されないんだああああ、、、って方は、コントロールまで繋がって指定されているか見直してみてください。</p>\n<h3><span id=\"i-2\">パネルの追加</span></h3>\n<p>パネルは外観 → カスタマイズを開いた時に最初に登場するオリジナルな項目になります。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/07/customize1.png\" alt=\"\" width=\"300\" class=\"alignnone size-full wp-image-15853\" /></p>\n<p><code>add_panel</code>を使って以下の項目を指定してあげます。</p>\n<ul class=\"check\">\n<li>裏で管理する「パネルID」</li>\n<li>カスタマイザーに表示する「パネル名」</li>\n<li>表示順序を決める「<code>priority</code>」</li>\n</ul>\n<p>ちなみに、デフォルトで表示されている項目の<code>priority</code>は以下のとおりです。</p>\n<ul>\n<li>サイト基本情報・・・20</li>\n<li>色・・・40</li>\n<li>ヘッダー画像・・・60</li>\n<li>背景画像・・・80</li>\n<li>メニュー・・・100</li>\n<li>ウィジェット・・・110</li>\n<li>ホームページ設定・・・120</li>\n<li>追加CSS・・・200</li>\n</ul>\n<h3><span id=\"i-3\">セクションの追加</span></h3>\n<p>セクションはパネルから１つ入った先にある項目ですね。パネルに紐づけていくつでも追加していくことができます。画面を見てもらうと分かると思いますが、まだ値を設定したりはできません。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/07/customize2.png\" alt=\"\" width=\"300\" class=\"alignnone size-full wp-image-15855\" /></p>\n<p><code>add_section</code>を使って以下の項目を指定してあげます。</p>\n<ul class=\"check\">\n<li>裏で管理する「セクションID」</li>\n<li>カスタマイザーに表示する「セクション名」</li>\n<li>紐付ける「パネルID」</li>\n<li>表示順序を決める「<code>priority</code>」</li>\n</ul>\n<h3><span id=\"i-4\">セッティングとコントロールの追加</span></h3>\n<p>セッティングとコントロールは基本的にはセットで追加してきます。セッティングは項目で、コントロールは入力形式みたいなイメージですね。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/07/customize3.png\" alt=\"\" width=\"300\" class=\"alignnone size-full wp-image-15856\" /></p>\n<p><code>add_setting</code>を使ってひとまずは裏側で管理する「セッティングID」を指定してあげます。</p>\n<p>そして、<code>add_control</code>を使って以下の項目を指定してあげます。</p>\n<ul class=\"check\">\n<li>入力形式を決めるコントロールクラスの指定</li>\n<li>裏で管理する「コントロールID」</li>\n<li>カスタマイザーに表示する「コントロール名」</li>\n<li>紐付ける「セクションID」</li>\n<li>紐付ける「セッティングID」</li>\n<li>表示順序を決める「<code>priority</code>」</li>\n</ul>\n<p><strong class=\"marker\">裏で管理する「ほにゃららID」はパネルから順番にコントロールまで繋がっているイメージ</strong>です。ここがズレると表示されなくなるので注意してください。</p>\n<p>カスタマイザーを見ていると色やテキストやチェックボックスなど、様々な入力形式があるかと思います。ここを管理しているのが最後に紹介したコントロール（<code>add_control</code>）の部分です。</p>\n<p>カスタマイザーを作っていくにあたって、おそらく一番使うことになるであろうコントロールについてもう少し詳しく見ていきましょう。</p>\n<h2><span id=\"i-5\">カスタマイザーで指定できる入力形式</span></h2>\n<p><code>add_setting</code>を使って様々な入力ができるようになります。その全て（わたしが確認できた範囲で）を見ていきましょう！</p>\n<p>指定方法のパターンとしては大きく２パターンあります。１つはカスタマイザーのクラス指定を変えるパターン、もう一つはタイプを変えるパターンです。タイプっていうのは<code>form</code>タグの<code>type</code>属性のようなイメージで、要するに<strong class=\"marker\">フォームで使えるアイテムはカスタマイザーでも使えます</strong>。</p>\n<p>これからコード例は、セッティングとコントロールだけを抜粋しましたが、「<a href=\"#add\" rel=\"noopener nofollow\" target=\"_blank\">カスタマイザーに項目を追加する方法</a>」で作成したセッティングの後に書けば機能するかと思うのでぜひ実際にお試しください。</p>\n<h3><span id=\"i-6\">タイプを変えるパターン</span></h3>\n<p>フォームのようにタイプを指定することで、カスタマイザー内でフォームのアイテムを扱うことができるようになります。</p>\n<h4>テキストボックス</h4>\n<p>一番オーソドックスなのがテキストボックスですね。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/07/customize4.png\" alt=\"\" width=\"300\" class=\"alignnone size-full wp-image-15863\" /></p>\n<pre><span class=\"filename\">functions.php</span><span class=\"code-copy\" data-clipboard-target=\"#code-1\">コピー</span><code id=\"code-1\" class=\"php\">$wp_customize-&gt;add_setting( 'my_setting_text' );\r\n$wp_customize-&gt;add_control(\r\n\tnew WP_Customize_Control(\r\n\t\t$wp_customize,\r\n\t\t'my_control_text',\r\n\t\tarray(\r\n\t\t\t'label' =&gt; 'コントロールの見出し',\r\n\t\t\t'section'  =&gt; 'my_section',\r\n\t\t\t'settings' =&gt; 'my_setting_text',\r\n\t\t\t'type'     =&gt; 'text',\r\n\t\t)\r\n\t)\r\n);</code></pre>\n<h4>テキストエリア</h4>\n<p>テキストエリアは<code>textarea</code>を指定してあげてください。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/07/customize5.png\" alt=\"\" width=\"300\" class=\"alignnone size-full wp-image-15862\" /></p>\n<pre><span class=\"filename\">functions.php</span><span class=\"code-copy\" data-clipboard-target=\"#code-2\">コピー</span><code id=\"code-2\" class=\"php\">$wp_customize-&gt;add_setting( 'my_setting_textarea' );\r\n$wp_customize-&gt;add_control(\r\n\tnew WP_Customize_Control(\r\n\t\t$wp_customize,\r\n\t\t'my_control_textarea',\r\n\t\tarray(\r\n\t\t\t'label' =&gt; 'コントロールの見出し',\r\n\t\t\t'section'  =&gt; 'my_section',\r\n\t\t\t'settings' =&gt; 'my_setting_textarea',\r\n\t\t\t'type'     =&gt; 'textarea',\r\n\t\t)\r\n\t)\r\n);</code></pre>\n<p>ちなみに、デフォルトがテキストボックスなので、<code>'type' =&gt; 'text'</code>を省略してもテキストボックスが表示されます。</p>\n<h4>ラジオボタン</h4>\n<p>ラジオボタンは<code>radio</code>です。選択肢があるので<code>choices</code>を使って選択肢を指定してあげてください。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/07/customize6.png\" alt=\"\" width=\"300\" class=\"alignnone size-full wp-image-15867\" /></p>\n<p>またデフォルト値を指定するには、セッティングの方に<code>array( 'default' =&gt; 'radio1' )</code>のような項目を追加してあげます。</p>\n<pre><span class=\"filename\">functions.php</span><span class=\"code-copy\" data-clipboard-target=\"#code-3\">コピー</span><code id=\"code-3\" class=\"php\">$wp_customize-&gt;add_setting( 'my_setting_radio', array( 'default' => 'radio1' ) );\r\n$wp_customize-&gt;add_control(\r\n\tnew WP_Customize_Control(\r\n\t\t$wp_customize,\r\n\t\t'my_control_radio',\r\n\t\tarray(\r\n\t\t\t'label' =&gt; 'コントロールの見出し',\r\n\t\t\t'section'  =&gt; 'my_section',\r\n\t\t\t'settings' =&gt; 'my_setting_radio',\r\n\t\t\t'type'     =&gt; 'radio',\r\n\t\t\t'choices'  =&gt; array(\r\n\t\t\t\t'radio1' =&gt; 'ラジオ1',\r\n\t\t\t\t'radio2' =&gt; 'ラジオ2',\r\n\t\t\t\t'radio3' =&gt; 'ラジオ3',\r\n\t\t\t),\r\n\t\t)\r\n\t)\r\n);</code></pre>\n<h4>チェックボックス</h4>\n<p>チェックボックスもラジオボタンと同様です。タイプとしては<code>checkbox</code>を指定してあげてください。フォームのチェックボックスとは違って、単一のチェックボックスになります。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/07/customize7.png\" alt=\"\" width=\"300\" class=\"alignnone size-full wp-image-15871\" /></p>\n<p>デフォルトでチェックをつけるかどうかはセッティングで<code>ture</code>か<code>false</code>で指定することが可能です。</p>\n<pre><span class=\"filename\">functions.php</span><span class=\"code-copy\" data-clipboard-target=\"#code-4\">コピー</span><code id=\"code-4\" class=\"php\">$wp_customize-&gt;add_setting( 'my_setting_checkbox', array( 'default' =&gt; false ) );\r\n$wp_customize-&gt;add_control(\r\n\tnew WP_Customize_Control(\r\n\t\t$wp_customize,\r\n\t\t'my_control_checkbox',\r\n\t\tarray(\r\n\t\t\t'label' =&gt; 'コントロールの見出し',\r\n\t\t\t'section'  =&gt; 'my_section',\r\n\t\t\t'settings' =&gt; 'my_setting_checkbox',\r\n\t\t\t'type'     =&gt; 'checkbox',\r\n\t\t)\r\n\t)\r\n);</code></pre>\n<h4>セレクトボックス</h4>\n<p>セレクトボックスの作り方はラジオボタンと同様です。タイプとしては<code>select</code>を指定してあげます。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/07/customize8.png\" alt=\"\" width=\"300\" class=\"alignnone size-full wp-image-15875\" /></p>\n<pre><span class=\"filename\">functions.php</span><span class=\"code-copy\" data-clipboard-target=\"#code-5\">コピー</span><code id=\"code-5\" class=\"php\">$wp_customize-&gt;add_setting( 'my_setting_select', array( 'default' => 'select1' ) );\r\n$wp_customize-&gt;add_control(\r\n\tnew WP_Customize_Control(\r\n\t\t$wp_customize,\r\n\t\t'my_control_select',\r\n\t\tarray(\r\n\t\t\t'label' =&gt; 'コントロールの見出し',\r\n\t\t\t'section'  =&gt; 'my_section',\r\n\t\t\t'settings' =&gt; 'my_setting_select',\r\n\t\t\t'type'     =&gt; 'select',\r\n\t\t\t'choices'  =&gt; array(\r\n\t\t\t\t'select1' =&gt; 'セレクト1',\r\n\t\t\t\t'select2' =&gt; 'セレクト2',\r\n\t\t\t\t'select3' =&gt; 'セレクト3',\r\n\t\t\t),\r\n\t\t)\r\n\t)\r\n);</code></pre>\n<h4>その他のタイプ</h4>\n<p>代表的なフォームのタイプを紹介しましたが、他にもたくさんあります。目的や役割に合ったタイプを選んでみてください。</p>\n<ul class=\"check\">\n<li><code>email</code></li>\n<li><code>tel</code></li>\n<li><code>search</code></li>\n<li><code>password</code></li>\n<li><code>url</code></li>\n<li><code>number</code></li>\n<li><code>date</code></li>\n<li><code>time</code></li>\n<li><code>range</code></li>\n<li><code>color</code></li>\n</ul>\n<p>全体的な見栄えとしてはこんな感じです！<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/07/customize9.png\" alt=\"\" width=\"300\" class=\"alignnone size-full wp-image-15880\" /></p>\n<p><code>email</code>や<code>tel</code>などのテキストボックス系はあまり見栄えとしては変わらないですね。<code>range</code>を使ってるカスタマイザーはあまり見たことないので、使ってみると楽しいかもしれません。</p>\n<p><code>color</code>については、次に紹介するクラス指定して変える方が好ましいもしれません（タイプでも何故か同じ表示になりました）</p>\n<p>あとは、<code>password</code>とかも使えましたね。たぶん、<code>form</code>の<code>type</code>に指定できるものは全部指定できると思います。</p>\n<h3><span id=\"i-7\">カスタマイザーのクラス指定を変えるパターン</span></h3>\n<p>カスタマイザーのクラス指定を変えるパターンです。クラスを指定しているのは、<code>new ほにゃらら</code>の部分ですね。</p>\n<p>フォームのタイプだけでは表現できない、よりリッチなUI（操作感）を提供してくれるようなイメージでいいかと思います。</p>\n<h4>カラーピッカー</h4>\n<p>個人的には利用頻度が圧倒的なカラーピッカーで色指定するためのクラスです。<code>WP_Customize_Color_Control</code>というクラスを指定してあげてください。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/07/customize11.png\" alt=\"\" width=\"300\" class=\"alignnone size-full wp-image-15885\" /></p>\n<pre><span class=\"filename\">functions.php</span><span class=\"code-copy\" data-clipboard-target=\"#code-6\">コピー</span><code id=\"code-6\" class=\"php\">$wp_customize-&gt;add_setting( 'my_setting_colorpicker' );\r\n$wp_customize-&gt;add_control(\r\n\tnew WP_Customize_Color_Control(\r\n\t\t$wp_customize,\r\n\t\t'my_control_colorpicker',\r\n\t\tarray(\r\n\t\t\t'label'    =&gt; 'コントロールの見出し',\r\n\t\t\t'section'  =&gt; 'my_section',\r\n\t\t\t'settings' =&gt; 'my_setting_colorpicker',\r\n\t\t)\r\n\t)\r\n);</code></pre>\n<h4>日時</h4>\n<p>日時を指定できるクラス。<code>WP_Customize_Date_Time_Control</code>というクラスを指定してあげます。（このクラスを採用しているカスタマイザーは今のところ見たことがありません&#8230;）<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/07/customize12.png\" alt=\"\" width=\"300\" class=\"alignnone size-full wp-image-15886\" /></p>\n<pre><span class=\"filename\">functions.php</span><span class=\"code-copy\" data-clipboard-target=\"#code-7\">コピー</span><code id=\"code-7\" class=\"php\">$wp_customize-&gt;add_setting( 'my_setting_datetime' );\r\n$wp_customize-&gt;add_control(\r\n\tnew WP_Customize_Date_Time_Control(\r\n\t\t$wp_customize,\r\n\t\t'my_control_datetime',\r\n\t\tarray(\r\n\t\t\t'label'    =&gt; 'コントロールの見出し',\r\n\t\t\t'section'  =&gt; 'my_section',\r\n\t\t\t'settings' =&gt; 'my_setting_datetime',\r\n\t\t)\r\n\t)\r\n);</code></pre>\n<h4>コードエディタ</h4>\n<p>コントロールのクラス指定を<code>WP_Customize_Code_Editor_Control</code>とすれば、追加CSSで見るようなコードエディタとなります。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/07/customize10.png\" alt=\"\" width=\"300\" class=\"alignnone size-full wp-image-15883\" /></p>\n<pre><span class=\"filename\">functions.php</span><span class=\"code-copy\" data-clipboard-target=\"#code-8\">コピー</span><code id=\"code-8\" class=\"php\">$wp_customize-&gt;add_setting( 'my_setting_code' );\r\n$wp_customize->add_control(\r\n\tnew WP_Customize_Code_Editor_Control(\r\n\t\t$wp_customize,\r\n\t\t'my_control_code',\r\n\t\tarray(\r\n\t\t\t'label'    => 'コントロールの見出し',\r\n\t\t\t'section'  =&gt; 'my_section',\r\n\t\t\t'settings' =&gt; 'my_setting',\r\n\t\t)\r\n\t)\r\n);</code></pre>\n<h4>画像アップロード</h4>\n<p>画像をアップロードするには、<code>WP_Customize_Image_Control</code>クラスを使います。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/07/customize13.png\" alt=\"\" width=\"300\" class=\"alignnone size-full wp-image-15887\" /></p>\n<pre><span class=\"filename\">functions.php</span><span class=\"code-copy\" data-clipboard-target=\"#code-9\">コピー</span><code id=\"code-9\" class=\"php\">$wp_customize-&gt;add_setting( 'my_setting_image' );\r\n$wp_customize-&gt;add_control(\r\n\tnew WP_Customize_Image_Control(\r\n\t\t$wp_customize,\r\n\t\t'my_control_image',\r\n\t\tarray(\r\n\t\t\t'label'    =&gt; 'コントロールの見出し',\r\n\t\t\t'section'  =&gt; 'my_section',\r\n\t\t\t'settings' =&gt; 'my_setting_image',\r\n\t\t)\r\n\t)\r\n);</code></pre>\n<div class=\"box\">\n<div class=\"box-title\">余談</div>\n<p>ファイルのアップロードするためのクラスとして、以下の3つがあります。</p>\n<ul class=\"check\">\n<li><code>WP_Customize_Media_Control</code></li>\n<li><code>WP_Customize_Upload_Control</code></li>\n<li><code>WP_Customize_Image_Control</code></li>\n</ul>\n<p><code>Media</code>を拡張したクラスが<code>Upload</code>。<code>Upload</code>を拡張したクラスが<code>Image</code>という関係性でした。</p>\n<p>画像ではなく、他の（例えば動画など）ファイルをアップロードしたい場合は、<code>WP_Customize_Upload_Control</code>または、<code>WP_Customize_Media_Control</code>を使うことで実現できます。</p>\n</div>\n<h2><span id=\"i-8\">カスタマイザーの値を反映する方法</span></h2>\n<p>カスタマイザーの値をテーマで使うには、<code>get_theme_mod()</code>という関数を使います。<br />\n→ <a href=\"https://wpdocs.osdn.jp/%E9%96%A2%E6%95%B0%E3%83%AA%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9/get_theme_mod\" rel=\"noopener nofollow\" target=\"_blank\">関数リファレンス/get theme mod &#8211; WordPress Codex 日本語版</a></p>\n<p>例えば、ヘッダーの色を適応される場合は、以下のような書き方をします。セッティングで指定したIDが<code>my_colors_header_background</code>の場合。</p>\n<pre><span class=\"filename\">functions.php</span><span class=\"code-copy\" data-clipboard-target=\"#code-10\">コピー</span><code id=\"code-10\" class=\"php\">function my_wp_head() {\r\n\tif ( get_theme_mod( 'my_colors_header_background' ) ) {\r\n\t\techo '#header{background:' . esc_attr( get_theme_mod( 'my_colors_header_background' ) ) . ';}';\r\n\t}\r\n}\r\nadd_action( 'wp_head', 'my_wp_head' );</code></pre>\n<p><code>wp_head</code>の中で指定してあげると、リアルタイムで変換されるようになります。動きとしては以下のような感じです。<br />\n<video src=\"https://haniwaman.com/wp-content/uploads/2019/07/customize14.mov\" controls autoplay loop></video></p>\n<h2><span id=\"i-9\">おわり</span></h2><div class=\"matome\"><div class=\"matome-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"></div><div class=\"matome-twitter\"><a href=\"https://twitter.com/haniwa008?ref_src=twsrc%5Etfw\" class=\"twitter-follow-button\" data-show-screen-name=\"false\" data-size=\"large\" data-lang=\"ja\" data-show-count=\"true\">Follow @haniwa008</a><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></div></div><!-- /matome -->\n<p>カスタマイザーの項目をカスタマイズ方法でした。</p>\n<p>テーマを作る際は、カスタマイザーでデザインの自由度を与えてあげるとユーザーの満足度も高まると思います。WordPressには標準でこんな便利な機能が備わっているので、ぜひ使ってみてください！</p>\n","date":"July 07, 2019","categories":[{"name":"WordPress","slug":"wordpress"}],"tags":null,"author":{"name":"はにわまん","slug":"haniwaman"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"2736377c-7156-5d19-84fd-92c5a530de43"}}}