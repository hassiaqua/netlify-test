{"componentChunkName":"component---src-templates-post-js","path":"/local-apache/","result":{"data":{"wordpressPost":{"id":"d13caa6c-f0b1-5ab5-bd28-92bb9c9107a7","title":"超簡単！PHPプログラムをローカルで動作確認するための環境構築方法","slug":"local-apache","content":"<p>PHPプログラムはサーバサイドで動くプログラムなので、<br />\n<span style=\"color: #ff0000;\"><strong>当たり前ですがローカル環境で動かすことはできません。</strong></span></p>\n<p>とはいってもローカル環境で動作を確認したいものですよね。<br />\n（いちいちサーバにアップロードして → 動作確認とか面倒くさすぎます）</p>\n<p>今回は<strong class=\"marker\">ローカル環境でもPHPプログラムの動作を確認できる方法を紹介します。</strong></p>\n<div class=\"chat\"><figure class=\"chat-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"><figcaption>はにわまん</figcaption></figure><div class=\"chat-content\">PHPの動作をサクッと確認したい時に重宝します！</div></div>\n<div id=\"toc_container\" class=\"no_bullets\"><p class=\"toc_title\">目次</p><ul class=\"toc_list\"><li><a href=\"#PHP\"><span class=\"toc_number toc_depth_1\">1</span> PHPプログラムをローカルで動作確認するための環境構築</a></li><li><a href=\"#XAMPP\"><span class=\"toc_number toc_depth_1\">2</span> XAMPPのダウンロードとインストール</a></li><li><a href=\"#PHP-2\"><span class=\"toc_number toc_depth_1\">3</span> PHPの動作確認</a><ul><li><a href=\"#Apache\"><span class=\"toc_number toc_depth_2\">3.1</span> Apacheをスタートさせる</a></li><li><a href=\"#localhost\"><span class=\"toc_number toc_depth_2\">3.2</span> localhostにアクセス！</a></li><li><a href=\"#PHP-3\"><span class=\"toc_number toc_depth_2\">3.3</span> PHPプログラムを表示</a></li></ul></li><li><a href=\"#i\"><span class=\"toc_number toc_depth_1\">4</span> もしアクセスできない場合</a></li><li><a href=\"#i-2\"><span class=\"toc_number toc_depth_1\">5</span> おさらい</a></li><li><a href=\"#i-3\"><span class=\"toc_number toc_depth_1\">6</span> おわり</a></li></ul></div>\n<h2><span id=\"PHP\">PHPプログラムをローカルで動作確認するための環境構築</span></h2>\n<p>必要なのは<span style=\"font-size: large;\"><strong>XAMPP</strong></span>というソフトウェア（Webアプリケーション開発に必要なソフトウェアをまとめたもの）です。<br />\nとりあえず、これさえあればローカル環境でPHPプログラムの動作確認はできます。</p>\n<p>では早速ダウンロードしていきましょう！</p>\n<h2><span id=\"XAMPP\">XAMPPのダウンロードとインストール</span></h2>\n<p>まずはApache Friendsのダウンロードページにアクセスしてください。<br />\n→ <a href=\"https://www.apachefriends.org/jp/index.html\" target=\"_blank\">XAMPPのダウンロードページ</a></p>\n<p>Windows向け、Linux向け、iOS向けの３種類あるのでご自身の環境に応じてダンロードするものを決めてください。<br />\n<img class=\"alignnone size-full wp-image-3307\" src=\"https://haniwaman.com/wp-content/uploads/2017/08/composer10-700x402.png\" alt=\"xampp\" width=\"700\" /></p>\n<p>ダウンロードした実行ファイル（.exe）を実行してください。</p>\n<p>最初に英語の質門がでますが、「Yes」で。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2017/12/local-apache-1.png\" alt=\"\" width=\"502\" height=\"199\" class=\"alignnone size-full wp-image-4398\" /></p>\n<p>あとは流れに乗っていけば大丈夫です。<br />\n<img class=\"alignnone size-full wp-image-3310\" src=\"https://haniwaman.com/wp-content/uploads/2017/08/composer11.png\" alt=\"xampp6\" /></p>\n<p>↓</p>\n<p><img class=\"alignnone size-full wp-image-3311\" src=\"https://haniwaman.com/wp-content/uploads/2017/08/composer12.png\" alt=\"xampp7\" /><br />\n（※差し支えなければ「C:\\xampp」にインストールしてください。）</p>\n<p>↓</p>\n<p>Bitnamiはとりあえず不要です。（というか自分があまり理解していないので適当なことは言えないというのが本音・・・笑）<br />\n<img class=\"alignnone size-full wp-image-3312\" src=\"https://haniwaman.com/wp-content/uploads/2017/08/composer13.png\" alt=\"xampp11\" /></p>\n<p>撮ってない画像もありますが、次へ次へと進んで行けば問題ないはずです。<br />\nインストールは体感で10分くらいかかった気がします。</p>\n<p>インストールが終わったら「今開きますか？」にチェック入れて完了しましょう。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2017/12/local-apache2.png\" alt=\"\" width=\"502\" height=\"425\" class=\"alignnone size-full wp-image-4400\" /></p>\n<p>言語の設定画面が出てきたら好きな言語を選択して「save」してください<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2017/12/local-apache3.png\" alt=\"\" width=\"223\" height=\"168\" class=\"alignnone size-full wp-image-4401\" /></p>\n<h2><span id=\"PHP-2\">PHPの動作確認</span></h2>\n<p>では、PHPファイルを作って実際にアクセスするところまでを実践してみましょう！</p>\n<p>（XAMPPが開いていなかったら）<strong>「C:\\xampp\\xampp-control.exe」</strong>を開いてください。</p>\n<h3><span id=\"Apache\">Apacheをスタートさせる</span></h3>\n<p><img src=\"https://haniwaman.com/wp-content/uploads/2017/12/local-apache4.png\" alt=\"\" width=\"668\" height=\"440\" class=\"alignnone size-full wp-image-4403\" /></p>\n<p>Apache起動後はこんな感じの表示になります。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2017/12/local-apache5.png\" alt=\"\" width=\"668\" height=\"440\" class=\"alignnone size-full wp-image-4405\" /></p>\n<h3><span id=\"localhost\">localhostにアクセス！</span></h3>\n<p><strong>「http://localhost/」</strong>にアクセスします。</p>\n<p>「Welcome to XAMPP」というページが表示されたら成功です。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2017/12/local-apache6-700x394.png\" alt=\"\" width=\"700\" height=\"394\" class=\"alignnone size-medium wp-image-4406\" srcset=\"https://haniwaman.com/wp-content/uploads/2017/12/local-apache6-700x394.png 700w, https://haniwaman.com/wp-content/uploads/2017/12/local-apache6-768x432.png 768w, https://haniwaman.com/wp-content/uploads/2017/12/local-apache6.png 1026w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<h3><span id=\"PHP-3\">PHPプログラムを表示</span></h3>\n<p>簡単なPHPプログラムを表示させてみます。</p>\n<pre><span class=\"filename\">test.php</span><span class=\"code-copy\" data-clipboard-target=\"#code-0\">コピー</span><code id=\"code-0\" class=\"php\">&lt;?php\r\nheader( 'Content-type:text/html; charset=utf-8' );\r\necho '今日は' . date( 'Y年m月d日' ) . 'です';\r\n?&gt;\r\n</code></pre>\n<p>このプログラムを<strong>test.php</strong>として保存します。<br />\n保存場所は、<span style=\"color: #ff0000;\"><strong>「C:\\xampp\\htdocs」</strong></span>です。</p>\n<p>保存したら、<br />\n<strong>「http://localhost/test.php」</strong>にアクセスします。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2017/12/local-apache7.png\" alt=\"\" width=\"258\" height=\"159\" class=\"alignnone size-full wp-image-4408\" /></p>\n<p>今日の日付が表示されればOKです！</p>\n<p><strong>「C:\\xampp\\htdocs」</strong>に保存したPHPファイルが<strong>「http://localhost/」</strong>以下に連動する形で使えるようになります。</p>\n<h2><span id=\"i\">もしアクセスできない場合</span></h2>\n<p>80番のポートが競合している可能性があります。以下の設定の変更を試してみてください。<br />\n<strong>「C:\\xampp\\apache\\conf\\http.conf」</strong>を修正していきます。<br />\n※一応バックアップを取っておいてください。</p>\n<p>では、「http.conf」ファイルを開いてください。</p>\n<p>修正するのは、ポートの設定だけです。<br />\n<strong class=\"marker\">多くの場合80は使われているので、81を使います。</strong><br />\n（Windowsの場合、IISが80を使ってたりします。）</p>\n<p>【修正前】</p>\n<pre><div class=\"filename\">http.conf</div><span class=\"code-copy\" data-clipboard-target=\"#code-1\">コピー</span><code id=\"code-1\">Listen 80</code></pre>\n<p>【修正後】</p>\n<pre><div class=\"filename\">http.conf</div><span class=\"code-copy\" data-clipboard-target=\"#code-2\">コピー</span><code id=\"code-2\">Listen 81</code></pre>\n<p>アクセスする際は<strong>「http://localhost:81/test.php」</strong>といった具合に、ポート番号を明示してあげればOKです。</p>\n<h2><span id=\"i-2\">おさらい</span></h2>\n<p>PHPプログラムをローカル環境で動作確認するためには、</p>\n<ul class=\"check\">\n<li>１、「C:\\xampp\\xampp-control.exe」で、Apacheを起動する</li>\n<li>２、「C:\\xampp\\htdocs」フォルダ配下にPHPプログラムを置く</li>\n<li>３、ブラウザから「http://localhost/（ほにゃらら）.php」を指定してアクセス</li>\n</ul>\n<p>イメージとしては、<br />\n「http://localhost/」が「C:\\xampp\\htdocs」のフォルダを参照している感じです。</p>\n<p><h2><span id=\"i-3\">おわり</span></h2><div class=\"matome\"><div class=\"matome-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"></div><div class=\"matome-twitter\"><a href=\"https://twitter.com/haniwa008?ref_src=twsrc%5Etfw\" class=\"twitter-follow-button\" data-show-screen-name=\"false\" data-size=\"large\" data-lang=\"ja\" data-show-count=\"true\">Follow @haniwa008</a><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></div></div><!-- /matome --><br />\n基本的な説明しかしていませんが、PHPプログラムの動作を確認したいだけなら、これだけで問題ないかと思います。</p>\n<p>さぁ、PHPプログラムをどんどん作っちゃいましょう！</p>\n","date":"December 24, 2017","categories":[{"name":"環境","slug":"setting"}],"tags":null,"author":{"name":"はにわまん","slug":"haniwaman"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"d13caa6c-f0b1-5ab5-bd28-92bb9c9107a7"}}}