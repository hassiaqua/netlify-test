{"componentChunkName":"component---src-templates-post-js","path":"/side-by-side/","result":{"data":{"wordpressPost":{"id":"d43173a6-c940-5dd3-9fe0-3bbbafadfb06","title":"CSSで横並びを表現できる5パターンとそれぞれの役割（使い所）","slug":"side-by-side","content":"<p>初心者の最初のハードルとして横並びがあるかと思います。縦に並べるだけなら、それなりにポチポチ触ればできますが、横並びになった途端に「<strong>うわあああああ</strong>」って。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/05/sick_noiroze_man.png\" width=\"200\" alt=\"\" /></p>\n<p>この記事では、CSSで横並びを表現する5パターンとそれぞれの特徴を活かした具体的な使い方を紹介していきます。<code>display: flex;</code>以外は必要ないと言われがちですが、実はそれぞれに使い所がちゃんとあるのです！</p>\n<p>少なくとも今回紹介する、<code>flex</code>、<code>inline-block</code>、<code>float</code>が分かっていると、コーディングが楽になるかと思います。</p>\n<div class=\"chat\"><figure class=\"chat-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"><figcaption>はにわまん</figcaption></figure><div class=\"chat-content\">全部覚える必要はないですが、全部使えた方がいいです（矛盾...）</div></div>\n<div id=\"toc_container\" class=\"no_bullets\"><p class=\"toc_title\">目次</p><ul class=\"toc_list\"><li><a href=\"#CSS5\"><span class=\"toc_number toc_depth_1\">1</span> CSSで横並びを表現できる5パターンと使い所</a><ul><li><a href=\"#float\"><span class=\"toc_number toc_depth_2\">1.1</span> float</a></li><li><a href=\"#table-cell\"><span class=\"toc_number toc_depth_2\">1.2</span> table-cell</a></li><li><a href=\"#inline-block\"><span class=\"toc_number toc_depth_2\">1.3</span> inline-block</a></li><li><a href=\"#flex\"><span class=\"toc_number toc_depth_2\">1.4</span> flex</a></li><li><a href=\"#grid\"><span class=\"toc_number toc_depth_2\">1.5</span> grid</a></li></ul></li><li><a href=\"#i\"><span class=\"toc_number toc_depth_1\">2</span> おわり</a></li></ul></div>\n<h2><span id=\"CSS5\">CSSで横並びを表現できる5パターンと使い所</span></h2>\n<p>レイアウト的な横並びは<code>flex</code>を使うとして、その他の横並びは使い所を抑えて起きましょう！</p>\n<h3><span id=\"float\">float</span></h3>\n<p><code>float</code>は、一昔前のキングオブ横並びです。これから作る新規サイトでは横並び（レイアウトという意味で）で使うことはほぼないと思いますが、過去サイトの改修するをする際には、一応知識が必要になってきます。</p>\n<p>そんな過去のものとなってしまった<code>float</code>ですが、現代の使い所としては「回り込み」があるかと思います。</p>\n<p><img width=\"520\" src=\"https://haniwaman.com/wp-content/uploads/2018/12/side-by-side-700x402.png\" alt=\"\" class=\"alignnone size-medium wp-image-11383\" srcset=\"https://haniwaman.com/wp-content/uploads/2018/12/side-by-side-700x402.png 700w, https://haniwaman.com/wp-content/uploads/2018/12/side-by-side-768x441.png 768w, https://haniwaman.com/wp-content/uploads/2018/12/side-by-side.png 809w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<p>画像に<code>float</code>を指定するだけです。後の要素は特に何もする必要はありません。ただ、回り込みさせる画像の外側のタグにブロック要素を指定してあげないと、いつまでも回り込み続けるので外の<code>div</code>等のタグはちゃんと範囲を決めて設定してあげるようにしましょう。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-0\">コピー</span><code id=\"code-0\" class=\"html\">&lt;div&gt;\r\n&lt;img class=\"float-test\" src=\"https://haniwaman.com/wp-content/uploads/2018/02/cat.jpg\" alt=\"\"&gt;\r\nLorem ipsum dolor sit, amet consectetur adipisicing elit. Non sint maiores et modi voluptatibus ea numquam delectus voluptas! Consequuntur, dolorum corrupti. Fuga corrupti eius expedita amet blanditiis aliquid error similique ut libero eaque accusamus sed laudantium ipsa dolore id voluptate magnam deserunt, quasi eos iure vitae inventore nemo! Nobis sunt, dolorem omnis cum ab pariatur officia quam ea ipsum laudantium repellat, quae doloribus quis sit assumenda hic ipsam quod exercitationem. Sed cum repellendus labore facilis atque obcaecati dolorem recusandae eum.\r\n&lt;/div&gt;</code></pre>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-1\">コピー</span><code id=\"code-1\" class=\"css\">.float-test {\r\n\tfloat: left;\r\n\twidth: 150px;\r\n\tmargin-right: 8px;\r\n\tmargin-bottom: 8px;\r\n}</code></pre>\n<p>ちなみに、<code>float: right;</code>にすると、右側に画像が配置されます。<br />\n<img width=\"520\" src=\"https://haniwaman.com/wp-content/uploads/2018/12/side-by-side2-700x411.png\" alt=\"\" class=\"alignnone size-medium wp-image-11385\" srcset=\"https://haniwaman.com/wp-content/uploads/2018/12/side-by-side2-700x411.png 700w, https://haniwaman.com/wp-content/uploads/2018/12/side-by-side2-768x451.png 768w, https://haniwaman.com/wp-content/uploads/2018/12/side-by-side2.png 807w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<p>こんな感じで、ある要素を回り込みさせたい時は<code>float</code>じゃないとできないので、同様の場面で使っていくといいかと思います。</p>\n<h3><span id=\"table-cell\">table-cell</span></h3>\n<p><code>display: table-cell;</code>は、<code>table</code>の<code>th</code>や<code>td</code>に使われています。特に使い所が思い浮かびませんが、<strong class=\"marker\">使うとしたらtableに戻したいとき</strong>ですかね。</p>\n<p>例えば、スマホファーストでデザインしていて、スマホでは縦並び、PCではテーブルみたいなデザインの時だと、</p>\n<ul>\n<li>スマホでは → <code>display: block;</code></li>\n<li>PCでは → <code>display: table-cell;</code></li>\n</ul>\n<p>みたいな書き方ができます。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/12/side-by-side.gif\" alt=\"\" class=\"alignnone size-medium wp-image-11395\" /></p>\n<p>具体的なCSSだと以下のような感じでしょうか。「768px以上になるとテーブルになる」みたいに書けると思います。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-2\">コピー</span><code id=\"code-2\" class=\"css\">.table-cell-test th,\r\n.table-cell-test td {\r\n\tdisplay: block;\r\n}\r\n\r\n@media screen and (min-width: 768px) {\r\n\r\n\t.table-cell-test th,\r\n\t.table-cell-test td {\r\n\t\tdisplay: table-cell;\r\n\t}\r\n\r\n}</code></pre>\n<p>今はテーブル以外に用途はないかもしれません。</p>\n<h3><span id=\"inline-block\">inline-block</span></h3>\n<p><code>display: inline-block;</code>は、汎用性が高く色々と使うことができます。</p>\n<p>特徴としては、以下のような感じです。名前のとおり、blockとinlineのまさに「間！」っ感じですね。</p>\n<ul>\n<li>幅は要素の大きさ</li>\n<li>高さの概念がある</li>\n<li>中央寄せができる</li>\n</ul>\n<p>わたしの場合は、ちょっとしたユーティリティメニューとかに使ったりします。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/12/side-by-side2.gif\" alt=\"\" class=\"alignnone size-medium wp-image-11387\" /></p>\n<p>コードはこんな感じです。親要素で中央寄せを制御できるのがいいなって思います。<strong class=\"marker\">ページャーとかでもよく使ったり</strong>します。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-3\">コピー</span><code id=\"code-3\" class=\"html\">&lt;nav class=\"inline-block-test\"&gt;\r\n\t&lt;ul&gt;\r\n\t\t&lt;li&gt;&lt;a href=\"\"&gt;メニュー１&lt;/a&gt;&lt;/li&gt;\r\n\t\t&lt;li&gt;&lt;a href=\"\"&gt;メニュー２&lt;/a&gt;&lt;/li&gt;\r\n\t\t&lt;li&gt;&lt;a href=\"\"&gt;メニュー３&lt;/a&gt;&lt;/li&gt;\r\n\t\t&lt;li&gt;&lt;a href=\"\"&gt;メニュー４&lt;/a&gt;&lt;/li&gt;\r\n\t\t&lt;li&gt;&lt;a href=\"\"&gt;メニュー５&lt;/a&gt;&lt;/li&gt;\r\n\t&lt;/ul&gt;\r\n&lt;/nav&gt;</code></pre>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-4\">コピー</span><code id=\"code-4\" class=\"css\">.inline-block-test {\r\n\ttext-align: center;\r\n}\r\n\r\n.inline-block-test ul {\r\n\tlist-style: none;\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n}\r\n\r\n.inline-block-test li {\r\n\tdisplay: inline-block;\r\n}\r\n\r\n.inline-block-test li a {\r\n\tdisplay: block;\r\n\tpadding: 12px;\r\n}</code></pre>\n<h4>inline-blockの注意点</h4>\n<p><code>inline-block</code>を使う際の注意点ですが、<strong class=\"marker\">必ず意味分からない余白と戦う</strong>ことになります笑</p>\n<p>これは、ほとんどの場合は<code>inline-block</code>の仕様なので、CSSハック的に解決するしかありません。以下の記事にまとめているので、<code>inline-block</code>を使う際は、こちらも合わせて参考にしてみてください。</p>\n<p>どれもカッコよくないですが、、わたしは「font-size」を0にするパターンを良く使います。</p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"OQ2bgILnus\"><p><a href=\"https://haniwaman.com/inline-block-space/\">「display:inline-block」での隙間（余白）を消す方法</a></p></blockquote>\n<p><iframe title=\"&#8220;「display:inline-block」での隙間（余白）を消す方法&#8221; &#8212; HPcode\" class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" src=\"https://haniwaman.com/inline-block-space/embed/#?secret=OQ2bgILnus\" data-secret=\"OQ2bgILnus\" width=\"500\" height=\"282\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></p>\n<h3><span id=\"flex\">flex</span></h3>\n<p><strong class=\"marker\">レイアウト目的で横に並べる</strong>なら、今は<code>display: flex;</code>の<strong class=\"marker\">一択</strong>ですね。とにかく「楽」です。何も考えずとも勝手に横並びになります。（仕事ではちゃんと計算しましょう）</p>\n<p>とりあえず、親要素に<code>display: flex;</code>を当てる。それだけです。</p>\n<p><code>flex</code>のこちらの具体的な書き方は、以下の記事でまとめていますので、コピペして使ってみてください！</p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"l2w9KPG2iy\"><p><a href=\"https://haniwaman.com/flexbox/\">【コピペOKのサンプル付き】Flexboxはこの5パターン覚えておけば大丈夫！</a></p></blockquote>\n<p><iframe title=\"&#8220;【コピペOKのサンプル付き】Flexboxはこの5パターン覚えておけば大丈夫！&#8221; &#8212; HPcode\" class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" src=\"https://haniwaman.com/flexbox/embed/#?secret=l2w9KPG2iy\" data-secret=\"l2w9KPG2iy\" width=\"500\" height=\"282\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></p>\n<h3><span id=\"grid\">grid</span></h3>\n<p><code>display: grid;</code>は、カチッとしたWebっぽいサイトよりも、<strong class=\"marker\">キャンバスにフリーで描いたようなデザインの配置で力を発揮する</strong>ような、指定方法だと思います。</p>\n<p>横並びというよりは、キャンパス上での配置の割合とか位置とかを定めるようなものです。横並びって「親要素で囲んで～」っていう書き方をしないといけませんが、<code>grid</code>の場合は、<strong class=\"marker\">無駄な入れ子の構造をさせなくても</strong>下記のような配置ができるようになります。</p>\n<blockquote class=\"twitter-tweet\" data-lang=\"ja\">\n<p lang=\"ja\" dir=\"ltr\">display: grid使えば、↓のようなレイアウトもシンプルなHTML構造で書けます。</p>\n<p>&lt;div class=&quot;items&quot;&gt;<br /> &lt;a class=&quot;item1&quot;&gt;&lt;/a&gt;<br /> &lt;a class=&quot;item2&quot;&gt;&lt;/a&gt;<br /> &lt;a class=&quot;item3&quot;&gt;&lt;/a&gt;<br />&lt;/div&gt;</p>\n<p>みたいな感じで。<br />無駄なdivタグで囲わなくていい！ &#x1f606; <a href=\"https://t.co/Ho35BCxhPx\">pic.twitter.com/Ho35BCxhPx</a></p>\n<p>&mdash; はにわまん (@haniwa008) <a href=\"https://twitter.com/haniwa008/status/1029323355122413568?ref_src=twsrc%5Etfw\">2018年8月14日</a></p></blockquote>\n<p><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p>\n<p><code>display: grid;</code>を学ぶには以下の書籍が具体的で手を動かしながら学べるのでおすすめです。今はまだIEの壁があるので、使い所が少ないですが、将来的にはメジャーになってくるかもしれない配置方法だと思います。</p>\n<div class=\"cstmreba\">\n<div class=\"booklink-box\">\n<div class=\"booklink-image\"><a href=\"https://www.amazon.co.jp/exec/obidos/asin/4839966338/haniwaman-22/\" target=\"_blank\" ><img src=\"https://images-fe.ssl-images-amazon.com/images/I/51fmrHEVXgL._SL160_.jpg\" style=\"border: none;\" /></a></div>\n<div class=\"booklink-info\">\n<div class=\"booklink-name\"><a href=\"https://www.amazon.co.jp/exec/obidos/asin/4839966338/haniwaman-22/\" target=\"_blank\" >CSSグリッドレイアウト デザインブック</a></p>\n<div class=\"booklink-powered-date\">posted with <a href=\"https://yomereba.com\" rel=\"nofollow\" target=\"_blank\">ヨメレバ</a></div>\n</div>\n<div class=\"booklink-detail\">エビスコム マイナビ出版 2018-06-15    </div>\n<div class=\"booklink-link2\">\n<div class=\"shoplinkamazon\"><a href=\"https://www.amazon.co.jp/exec/obidos/asin/4839966338/haniwaman-22/\" target=\"_blank\" >Amazon</a></div>\n<div class=\"shoplinkkindle\"><a href=\"https://www.amazon.co.jp/exec/obidos/ASIN/B07DQK28S1/haniwaman-22/\" target=\"_blank\" >Kindle</a></div>\n<div class=\"shoplinkrakuten\"><a href=\"https://hb.afl.rakuten.co.jp/hgc/117225c0.b43e75d1.117225c1.f4ba597a/yomereba_main_201812122022296486?pc=http%3A%2F%2Fbooks.rakuten.co.jp%2Frb%2F15483802%2F%3Fscid%3Daf_ich_link_urltxt%26m%3Dhttp%3A%2F%2Fm.rakuten.co.jp%2Fev%2Fbook%2F\" target=\"_blank\" >楽天ブックス</a></div>\n</p></div>\n</div>\n<div class=\"booklink-footer\"></div>\n</div>\n</div>\n<h2><span id=\"i\">おわり</span></h2><div class=\"matome\"><div class=\"matome-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"></div><div class=\"matome-twitter\"><a href=\"https://twitter.com/haniwa008?ref_src=twsrc%5Etfw\" class=\"twitter-follow-button\" data-show-screen-name=\"false\" data-size=\"large\" data-lang=\"ja\" data-show-count=\"true\">Follow @haniwa008</a><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></div></div><!-- /matome -->\n<p>CSSで横並びを表現できる5パターンとそれぞれの使い所を紹介していきました。</p>\n<p><strong class=\"marker\">レイアウト目的なら、とりあえず<code>display: flex;</code></strong>で問題ありません！</p>\n<p>その他については、用途に合わせて選んでいくといいかと思います。回り込みしたい場合は、<code>float</code>、インライン要素的に並べたい（ただし高さが欲しい）時は<code>inline-block</code>、みたいな感じです。</p>\n<p>横並びがないデザインはないので、とりあえず<code>flex</code>の最低限だけでも扱えるようにしておきましょう！</p>\n","date":"December 16, 2018","categories":[{"name":"CSS","slug":"css"}],"tags":null,"author":{"name":"はにわまん","slug":"haniwaman"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"d43173a6-c940-5dd3-9fe0-3bbbafadfb06"}}}