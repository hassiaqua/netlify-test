{"componentChunkName":"component---src-templates-post-js","path":"/form-css/","result":{"data":{"wordpressPost":{"id":"777c816c-59c1-5513-a159-113bd9830cb5","title":"フォームのCSSを初期化してオリジナルなデザインを再現しよう！","slug":"form-css","content":"<p><strong class=\"marker\">フォームの各要素はブラウザによって基本となるデザインが異なります</strong>。</p>\n<p>デフォルトの状態のフォームをChromeとFirefoxで比較してみました。</p>\n<table class=\"table\">\n<tr>\n<th>Chrome</th>\n<th>Firefox</th>\n</tr>\n<tr>\n<td>\n\t\t\t<img src=\"https://haniwaman.com/wp-content/uploads/2018/12/form-css-chrome1.png\" alt=\"\" class=\"alignnone size-full wp-image-11522\" />\n\t\t</td>\n<td>\n\t\t\t<img src=\"https://haniwaman.com/wp-content/uploads/2018/12/form-css-firefox1.png\" alt=\"\" class=\"alignnone size-full wp-image-11523\" />\n\t\t</td>\n</tr>\n</table>\n<p>分かりにくいですが、<strong class=\"marker\">文言や大きさや色、アイコンなどほぼ異なっています</strong>。これがChromeとFirefoxだけでなく、Safari、IEでもそれぞれが独自の表現をさせるので、全部のデザインが異なっている状態です。</p>\n<p>コーダーとしてはこの差異を極力なくし、デザインカンプ通りに実現することが求められます。</p>\n<p>この記事では、各種フォームのCSSを初期化（ブラウザ間での差異をなくし）オリジナルなデザインを再現する方法を紹介していきます！</p>\n<div class=\"chat\"><figure class=\"chat-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"><figcaption>はにわまん</figcaption></figure><div class=\"chat-content\">各種フォームを初期化するコードは自分用にまとめておくとコーディングが捗ると思います！</div></div>\n<div id=\"toc_container\" class=\"no_bullets\"><p class=\"toc_title\">目次</p><ul class=\"toc_list\"><li><a href=\"#CSS\"><span class=\"toc_number toc_depth_1\">1</span> 各種フォームを初期化するCSS</a><ul><li><a href=\"#i\"><span class=\"toc_number toc_depth_2\">1.1</span> テキスト</a></li><li><a href=\"#i-2\"><span class=\"toc_number toc_depth_2\">1.2</span> テキストエリア</a></li><li><a href=\"#i-3\"><span class=\"toc_number toc_depth_2\">1.3</span> ラジオボタン</a></li><li><a href=\"#i-4\"><span class=\"toc_number toc_depth_2\">1.4</span> チェックボックス</a></li><li><a href=\"#i-5\"><span class=\"toc_number toc_depth_2\">1.5</span> セレクトボックス（ドロップダウンメニュー）</a></li><li><a href=\"#i-6\"><span class=\"toc_number toc_depth_2\">1.6</span> ボタン</a></li><li><a href=\"#i-7\"><span class=\"toc_number toc_depth_2\">1.7</span> ファイル選択</a></li></ul></li><li><a href=\"#CSS-2\"><span class=\"toc_number toc_depth_1\">2</span> フォームのCSS初期化後を見比べてみる</a></li><li><a href=\"#i-8\"><span class=\"toc_number toc_depth_1\">3</span> おわり</a></li></ul></div>\n<h2><span id=\"CSS\">各種フォームを初期化するCSS</span></h2>\n<p>各種フォームを初期化するCSSを紹介します。まずは難しいことを考えずにコピペして動きをみてみてください！その後にデベロッパーツールなどで各値を変えながら覚えていくのがいいかと思います。</p>\n<p>ちなみに、この辺りがより詳しく解説されているのが「これからの「標準」を身につける HTML+CSSデザインレシピ」なので、こちらも合わせて読むとより理解が深まるはずです。</p>\n<div class=\"cstmreba\">\n<div class=\"booklink-box\">\n<div class=\"booklink-image\"><a href=\"https://www.amazon.co.jp/exec/obidos/asin/4839948879/haniwaman-22/\" target=\"_blank\" ><img src=\"https://images-fe.ssl-images-amazon.com/images/I/51pXrnWKSJL._SL160_.jpg\" style=\"border: none;\" /></a></div>\n<div class=\"booklink-info\">\n<div class=\"booklink-name\"><a href=\"https://www.amazon.co.jp/exec/obidos/asin/4839948879/haniwaman-22/\" target=\"_blank\" >これからの「標準」を身につける HTML+CSSデザインレシピ (Web Designing Books)</a></p>\n<div class=\"booklink-powered-date\">posted with <a href=\"https://yomereba.com\" rel=\"nofollow\" target=\"_blank\">ヨメレバ</a></div>\n</div>\n<div class=\"booklink-detail\">エ・ビスコム・テック・ラボ マイナビ 2014-03-20    </div>\n<div class=\"booklink-link2\">\n<div class=\"shoplinkamazon\"><a href=\"https://www.amazon.co.jp/exec/obidos/asin/4839948879/haniwaman-22/\" target=\"_blank\" >Amazon</a></div>\n<div class=\"shoplinkkindle\"><a href=\"https://www.amazon.co.jp/exec/obidos/ASIN/B00IWHVLUG/haniwaman-22/\" target=\"_blank\" >Kindle</a></div>\n<div class=\"shoplinkrakuten\"><a href=\"https://hb.afl.rakuten.co.jp/hgc/117225c0.b43e75d1.117225c1.f4ba597a/yomereba_main_201812141750071693?pc=http%3A%2F%2Fbooks.rakuten.co.jp%2Frb%2F12709529%2F%3Fscid%3Daf_ich_link_urltxt%26m%3Dhttp%3A%2F%2Fm.rakuten.co.jp%2Fev%2Fbook%2F\" target=\"_blank\" >楽天ブックス</a></div>\n</p></div>\n</div>\n<div class=\"booklink-footer\"></div>\n</div>\n</div>\n<h3><span id=\"i\">テキスト</span></h3>\n<p>フォームの中で最も出現頻度が高いのが、<code>input type=\"text\"</code>だと思います。その他、<code>input type=\"email\"</code>や<code>input type=\"tel\"</code>、<code>type=\"password\"</code>など、テキスト系のフォームは同様の指定で対応できます。</p>\n<p><input class=\"text-test\" type=\"text\"></p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-0\">コピー</span><code id=\"code-0\" class=\"html\">&lt;input class=\"text-test\" type=\"text\"&gt;\r\n</code></pre>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-1\">コピー</span><code id=\"code-1\" class=\"css\">.text-test {\r\n\t-moz-appearance: none;\r\n\t-webkit-appearance: none;\r\n\tappearance: none;\r\n\tbackground-color: transparent;\r\n\tbackground-image: none;\r\n\tborder: 1px solid rgba(0, 0, 0, 0.16);\r\n\tborder-radius: 0;\r\n\tcolor: inherit;\r\n\tfont-family: inherit;\r\n\tfont-size: 1em;\r\n\tpadding: 0.4em 0.8em;\r\n\twidth: 100%;\r\n}\r\n\r\n.text-test:focus {\r\n\tborder: 1px solid rgba(0, 0, 0, 0.32);\r\n\tbox-shadow: none;\r\n\toutline: none;\r\n}</code></pre>\n<h3><span id=\"i-2\">テキストエリア</span></h3>\n<p>テキストエリアも先ほど紹介したテキストとほぼ同じですが、<strong class=\"marker\">高さを指定する</strong>点だけが異なります。デザインに応じて高さだけ指定してあげてください。</p>\n<p><textarea class=\"textarea-text\"></textarea></p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-2\">コピー</span><code id=\"code-2\" class=\"html\">&lt;textarea class=\"textarea-text\"&gt;&lt;/textarea&gt;\r\n</code></pre>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-3\">コピー</span><code id=\"code-3\" class=\"css\">.textarea-text {\r\n\t-moz-appearance: none;\r\n\t-webkit-appearance: none;\r\n\tappearance: none;\r\n\tbackground-color: transparent;\r\n\tbackground-image: none;\r\n\tborder: 1px solid rgba(0, 0, 0, 0.16);\r\n\tborder-radius: 0;\r\n\tcolor: inherit;\r\n\tfont-family: inherit;\r\n\tfont-size: 1em;\r\n\theight: 100px;\r\n\tpadding: 0.4em 0.8em;\r\n\twidth: 100%;\r\n}\r\n\r\n.textarea-text:focus {\r\n\tborder: 1px solid rgba(0, 0, 0, 0.32);\r\n\tbox-shadow: none;\r\n\toutline: none;\r\n}</code></pre>\n<h3><span id=\"i-3\">ラジオボタン</span></h3>\n<p>ラジオボタンとチェックボックスはちょっと無理やりで、<strong class=\"marker\">標準で出力されるラジオボタンは消して独自のラジオボタンを擬似要素で作る</strong>という指定になります。</p>\n<p><code>:checked</code>でオン・オフを切り替えられるCSSの書き方と、<code>label</code>で囲うと遠くからラジオボタンを操作できるという点を知っておくと柔軟に操作できるようになると思います。</p>\n<p><label><input class=\"radio-test\" type=\"radio\" name=\"radio-name\"><span>ラジオ１</span></label><label><input class=\"radio-test\" type=\"radio\" name=\"radio-name\"><span>ラジオ２</span></label><label><input class=\"radio-test\" type=\"radio\" name=\"radio-name\"><span>ラジオ３</span></label></p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-4\">コピー</span><code id=\"code-4\" class=\"html\">&lt;label&gt;&lt;input class=\"radio-test\" type=\"radio\" name=\"radio-name\"&gt;&lt;span&gt;ラジオ１&lt;/span&gt;&lt;/label&gt;\r\n&lt;label&gt;&lt;input class=\"radio-test\" type=\"radio\" name=\"radio-name\"&gt;&lt;span&gt;ラジオ２&lt;/span&gt;&lt;/label&gt;\r\n&lt;label&gt;&lt;input class=\"radio-test\" type=\"radio\" name=\"radio-name\"&gt;&lt;span&gt;ラジオ３&lt;/span&gt;&lt;/label&gt;\r\n</code></pre>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-5\">コピー</span><code id=\"code-5\" class=\"css\">.radio-test {\r\n\tdisplay: none;\r\n}\r\n\r\n.radio-test + span {\r\n\tcursor: pointer;\r\n\tdisplay: inline-block;\r\n\tmargin: 0 0.2em 0;\r\n\tpadding: 0 0 0 1.2em;\r\n\tposition: relative;\r\n}\r\n\r\n.radio-test + span::before {\r\n\t-webkit-transform: translateY(-50%);\r\n\tbackground: #fff;\r\n\tborder: 1px solid rgba(0, 0, 0, 0.16);\r\n\tborder-radius: 50%;\r\n\tcontent: \"\";\r\n\tdisplay: block;\r\n\theight: 16px;\r\n\tleft: 0;\r\n\tposition: absolute;\r\n\ttop: 50%;\r\n\ttransform: translateY(-50%);\r\n\twidth: 16px;\r\n}\r\n\r\n.radio-test + span::after {\r\n\t-webkit-transform: translateY(-50%);\r\n\tbackground: rgba(0, 0, 0, 0.32);\r\n\tborder: 1px solid transparent;\r\n\tborder-radius: 50%;\r\n\tcontent: \"\";\r\n\theight: 8px;\r\n\tleft: 4px;\r\n\topacity: 0;\r\n\tpadding: 2px;\r\n\tposition: absolute;\r\n\ttop: 50%;\r\n\ttransform: translateY(-50%);\r\n\ttransition: all 0.3s ease 0s;\r\n\twidth: 8px;\r\n}\r\n\r\n.radio-test:checked + span::after {\r\n\topacity: 1;\r\n}</code></pre>\n<h3><span id=\"i-4\">チェックボックス</span></h3>\n<p>チェックボックスも先ほどラジオボタンで説明したのと同じで繰り返しになりますが、、<br />\n<strong class=\"marker\">標準で出力されるラジオボタンは消して独自のラジオボタンを擬似要素で作る</strong>という指定になります。</p>\n<p><code>:checked</code>でオン・オフを切り替えられるCSSの書き方と、<code>label</code>で囲うと遠くからラジオボタンを操作できるという点を知っておくと柔軟に操作できるようになると思います。</p>\n<p><label><input class=\"check-test\" type=\"checkbox\" name=\"check-name\"><span>チェック１</span></label><label><input class=\"check-test\" type=\"checkbox\" name=\"check-name\"><span>チェック２</span></label><label><input class=\"check-test\" type=\"checkbox\" name=\"check-name\"><span>チェック３</span></label></p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-6\">コピー</span><code id=\"code-6\" class=\"html\">&lt;label&gt;&lt;input class=\"check-test\" type=\"checkbox\" name=\"check-name\"&gt;&lt;span&gt;チェック１&lt;/span&gt;&lt;/label&gt;\r\n&lt;label&gt;&lt;input class=\"check-test\" type=\"checkbox\" name=\"check-name\"&gt;&lt;span&gt;チェック２&lt;/span&gt;&lt;/label&gt;\r\n&lt;label&gt;&lt;input class=\"check-test\" type=\"checkbox\" name=\"check-name\"&gt;&lt;span&gt;チェック３&lt;/span&gt;&lt;/label&gt;\r\n</code></pre>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-7\">コピー</span><code id=\"code-7\" class=\"css\">.check-test {\r\n\tdisplay: none;\r\n}\r\n\r\n.check-test + span {\r\n\tcursor: pointer;\r\n\tdisplay: inline-block;\r\n\tmargin: 0 0.2em 0;\r\n\tpadding: 0 0 0 1.2em;\r\n\tposition: relative;\r\n}\r\n\r\n.check-test + span::before {\r\n\t-webkit-transform: translateY(-50%);\r\n\tbackground: #fff;\r\n\tborder: 1px solid rgba(0, 0, 0, 0.16);\r\n\tborder-radius: 2px;\r\n\tcontent: \"\";\r\n\tdisplay: block;\r\n\theight: 1em;\r\n\tleft: 0;\r\n\tposition: absolute;\r\n\ttop: 50%;\r\n\ttransform: translateY(-50%);\r\n\twidth: 1em;\r\n}\r\n\r\n.check-test + span::after {\r\n\t-webkit-transform: translateY(-50%) rotate(-45deg);\r\n\tborder-bottom: 3px solid rgba(0, 0, 0, 0.32);\r\n\tborder-left: 3px solid rgba(0, 0, 0, 0.32);\r\n\tcontent: \"\";\r\n\tdisplay: block;\r\n\theight: 0.6em;\r\n\tleft: 0;\r\n\tmargin-top: -0.2em;\r\n\topacity: 0;\r\n\tposition: absolute;\r\n\ttop: 50%;\r\n\ttransform: translateY(-50%) rotate(-45deg);\r\n\ttransition: all 0.3s ease 0s;\r\n\twidth: 1em;\r\n}\r\n\r\n.check-test:checked + span::after {\r\n\topacity: 1;\r\n}</code></pre>\n<h3><span id=\"i-5\">セレクトボックス（ドロップダウンメニュー）</span></h3>\n<p>セレクトボックスが最もブラウザ間で異なるんじゃないかと思います。特に右にあるアイコンの表示ですね・・・。色んな形のアローアイコンが登場するので、ここの<strong class=\"marker\">アローアイコンを上書きして自分が用意した画像を背景として適応させる</strong>という指定を行います。</p>\n<p><code>background</code>の書き方を復習しておきましょう！</p>\n<p><select class=\"select-test\"><option>セレクトA</option><option>セレクトB</option><option>セレクトC</option></select></p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-8\">コピー</span><code id=\"code-8\" class=\"html\">&lt;select class=\"select-test\"&gt;\r\n\t&lt;option&gt;セレクトA&lt;/option&gt;\r\n\t&lt;option&gt;セレクトB&lt;/option&gt;\r\n\t&lt;option&gt;セレクトC&lt;/option&gt;\r\n&lt;/select&gt;</code></pre>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-9\">コピー</span><code id=\"code-9\" class=\"css\">.select-test {\r\n\t-moz-appearance: none;\r\n\t-webkit-appearance: none;\r\n\tappearance: none;\r\n\tbackground: transparent url(https://haniwaman.com/wp-content/uploads/2018/12/form-css-arrow.png) no-repeat center right 8px/16px 16px;\r\n\tborder: 1px solid rgba(0, 0, 0, 0.16);\r\n\tborder-radius: 0;\r\n\tcolor: inherit;\r\n\tcursor: pointer;\r\n\tfont-family: inherit;\r\n\tfont-size: 1em;\r\n\tpadding: 0.4em 0.8em;\r\n\twidth: 100%;\r\n}\r\n\r\n.select-test::-ms-expand {\r\n\tdisplay: none;\r\n}\r\n\r\n.select-test:focus {\r\n\tborder: 1px solid rgba(0, 0, 0, 0.32);\r\n\tbox-shadow: none;\r\n\toutline: none;\r\n}</code></pre>\n<p>画像については「icooon-mono」さんなどのフリーのアイコンサイトからダウンロードして使わせてもらうと手軽かと思います。<br />\n→ <a href=\"http://icooon-mono.com/\" rel=\"noopener\" target=\"_blank\">icooon-mono</a><br />\n<a href=\"http://icooon-mono.com/\" rel=\"noopener\" target=\"_blank\"><img src=\"https://haniwaman.com/wp-content/uploads/2018/12/form-css3-700x340.png\" alt=\"\" class=\"alignnone size-medium wp-image-11513\" srcset=\"https://haniwaman.com/wp-content/uploads/2018/12/form-css3-700x340.png 700w, https://haniwaman.com/wp-content/uploads/2018/12/form-css3-768x374.png 768w, https://haniwaman.com/wp-content/uploads/2018/12/form-css3-1200x584.png 1200w, https://haniwaman.com/wp-content/uploads/2018/12/form-css3.png 1904w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></a></p>\n<h3><span id=\"i-6\">ボタン</span></h3>\n<p>ボタンも各ブラウザによって癖がめっちゃあります。しかもボタンはフォーム作ったら必ず出てくる要素なので、この書き方を確実に押さえておきましょう。初期化して → 自分のオリジナルなデザインを当てていくという感じですね。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-10\">コピー</span><code id=\"code-10\" class=\"html\">&lt;input class=\"submit-test\" type=\"submit\" value=\"送信\"&gt;\r\n</code></pre>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-11\">コピー</span><code id=\"code-11\" class=\"css\">.submit-test {\r\n\t-webkit-appearance: none;\r\n\tbackground-color: rgba(0, 0, 0, 0.32);\r\n\tbackground-image: none;\r\n\tborder: none;\r\n\tborder-radius: 0;\r\n\tcolor: #fff;\r\n\tcursor: pointer;\r\n\tdisplay: inline-block;\r\n\tfont-size: 1em;\r\n\tmargin: 0 0 1em;\r\n\tpadding: 0.6em 2em;\r\n\ttext-decoration: none;\r\n}\r\n\r\n.submit-test:hover,\r\n.submit-test:focus {\r\n\toutline: none;\r\n}\r\n\r\n.submit-test::-moz-foucus-inner {\r\n\tborder: none;\r\n\tpadding: 0;\r\n}</code></pre>\n<h3><span id=\"i-7\">ファイル選択</span></h3>\n<p>ファイル選択のフォームはめちゃくちゃ曲者です・・・。JavaScript（jQuery）の力を利用させてもらって無理やりデザインを作っています。</p>\n<p>まず、チェックボックスやラジオボタンのように標準の要素は表示させないようします。<code>label</code>を消した要素の代わりとして、こちらに任意のデザインを当てていきます。</p>\n<p>そして、ファイルを選択するとファイル名が表示されるのですが、こちらを表示させる用の<code>input type=\"text\"</code>を用意して、jQueryの処理によって表示させるという流れです。イベントとして<code>change</code>で拾っています。</p>\n<p><label id=\"file-test-label\" for=\"file-test\">ファイルを選択</label><input type=\"file\" id=\"file-test\"><br />\n<input type=\"text\" id=\"file-test-name\" disabled></p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-12\">コピー</span><code id=\"code-12\" class=\"html\">&lt;label id=\"file-test-label\" for=\"file-test\"&gt;ファイルを選択&lt;/label&gt;&lt;input type=\"file\" id=\"file-test\"&gt;\r\n&lt;input type=\"text\" id=\"file-test-name\" disabled&gt;</code></pre>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-13\">コピー</span><code id=\"code-13\" class=\"css\">#file-test {\r\n\tdisplay: none;\r\n}\r\n\r\n#file-test-label {\r\n\tbackground: #fff;\r\n\tborder: 1px solid rgba(0, 0, 0, 0.16);\r\n\tcursor: pointer;\r\n\tpadding: 0.4em 0.8em;\r\n}\r\n\r\n#file-test-name {\r\n\t-moz-appearance: none;\r\n\t-webkit-appearance: none;\r\n\tappearance: none;\r\n\tbackground-color: transparent;\r\n\tbackground-image: none;\r\n\tborder: none;\r\n\tborder-radius: 0;\r\n\tcolor: inherit;\r\n\tdisplay: none;\r\n\tfont-family: inherit;\r\n\tfont-size: 1em;\r\n\tpadding: 0.4em 0;\r\n\twidth: 100%;\r\n}</code></pre>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-14\">コピー</span><code id=\"code-14\" class=\"js\">jQuery( '#file-test' ).change( function() {\r\n\tjQuery( '#file-test-name' ).show();\r\n\tjQuery( '#file-test-name' ).val( jQuery( this ).val() );\r\n\tjQuery( this ).val( '' );\r\n});</code></pre>\n<h2><span id=\"CSS-2\">フォームのCSS初期化後を見比べてみる</span></h2>\n<p>今回のCSSを適応させたフォームを再び見比べてみましょう。冒頭で紹介した時と比べて、違和感ないほど同じデザインになっていることが分かります！</p>\n<table class=\"table\">\n<tr>\n<th>Chrome</th>\n<th>Firefox</th>\n</tr>\n<tr>\n<td>\n\t\t\t<img src=\"https://haniwaman.com/wp-content/uploads/2018/12/form-css-chrome2.png\" alt=\"\" class=\"alignnone size-full wp-image-11536\" />\n\t\t</td>\n<td>\n\t\t\t<img src=\"https://haniwaman.com/wp-content/uploads/2018/12/form-css-firefox2.png\" alt=\"\" class=\"alignnone size-full wp-image-11537\" />\n\t\t</td>\n</tr>\n</table>\n<p>（一応ここにもBefore）</p>\n<table class=\"table\">\n<tr>\n<th>Chrome</th>\n<th>Firefox</th>\n</tr>\n<tr>\n<td>\n\t\t\t<img src=\"https://haniwaman.com/wp-content/uploads/2018/12/form-css-chrome1.png\" alt=\"\" class=\"alignnone size-full wp-image-11522\" />\n\t\t</td>\n<td>\n\t\t\t<img src=\"https://haniwaman.com/wp-content/uploads/2018/12/form-css-firefox1.png\" alt=\"\" class=\"alignnone size-full wp-image-11523\" />\n\t\t</td>\n</tr>\n</table>\n<h2><span id=\"i-8\">おわり</span></h2><div class=\"matome\"><div class=\"matome-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"></div><div class=\"matome-twitter\"><a href=\"https://twitter.com/haniwa008?ref_src=twsrc%5Etfw\" class=\"twitter-follow-button\" data-show-screen-name=\"false\" data-size=\"large\" data-lang=\"ja\" data-show-count=\"true\">Follow @haniwa008</a><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></div></div><!-- /matome -->\n<p>フォームのCSSを初期化する方法を紹介しました。フォームのデザインを再現するコーディング作業は実務でも頻繁に登場するので、自身でも扱えるようにしておきましょう。</p>\n<p>とはいっても暗記する必要はなく、ほとんどは決まりきった指定方法になります。どこを変更すれば色が変わるのか？サイズを変更できるか？などが分かれば大丈夫です。</p>\n<p>ぜひご自身で実際に触ってみて、値や色を変更してみて試してみてください！</p>\n","date":"December 18, 2018","categories":[{"name":"CSS","slug":"css"}],"tags":null,"author":{"name":"はにわまん","slug":"haniwaman"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"777c816c-59c1-5513-a159-113bd9830cb5"}}}