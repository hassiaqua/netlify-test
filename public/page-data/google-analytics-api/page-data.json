{"componentChunkName":"component---src-templates-post-js","path":"/google-analytics-api/","result":{"data":{"wordpressPost":{"id":"2a5834cc-1960-5a38-befa-12dc3e73cfe6","title":"【最新！】Google Analytics APIの使い方！","slug":"google-analytics-api","content":"<p>Google Analytics APIの使い方です。</p>\n<p>ライブラリが頻繁に変更するからなのか分かりませんが、ネット上の情報が古くなっていることが多くて苦労したので、使えるようになるまでの方法をまとめておきます。</p>\n<div class=\"chat\"><figure class=\"chat-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"><figcaption>はにわまん</figcaption></figure><div class=\"chat-content\">Google系のAPIは登録が最初にして最大の難関...</div></div>\n<div id=\"toc_container\" class=\"no_bullets\"><p class=\"toc_title\">目次</p><ul class=\"toc_list\"><li><a href=\"#API\"><span class=\"toc_number toc_depth_1\">1</span> アカウントの作成とAPIの有効化</a><ul><li><a href=\"#i\"><span class=\"toc_number toc_depth_2\">1.1</span> プロジェクト作成</a></li><li><a href=\"#i-2\"><span class=\"toc_number toc_depth_2\">1.2</span> 認証情報作成</a></li><li><a href=\"#Analytics_Reporting_API\"><span class=\"toc_number toc_depth_2\">1.3</span> Analytics Reporting APIを有効化</a></li></ul></li><li><a href=\"#Google_Analytics\"><span class=\"toc_number toc_depth_1\">2</span> Google Analyticsとの紐付け</a></li><li><a href=\"#i-3\"><span class=\"toc_number toc_depth_1\">3</span> ライブラリのダウンロードしてコーディング</a><ul><li><a href=\"#PHP\"><span class=\"toc_number toc_depth_2\">3.1</span> セッションを取得するコード（PHP）</a></li><li><a href=\"#i-4\"><span class=\"toc_number toc_depth_2\">3.2</span> つまづいたポイント</a></li><li><a href=\"#1\"><span class=\"toc_number toc_depth_2\">3.3</span> 1日の使用上限</a></li></ul></li><li><a href=\"#i-5\"><span class=\"toc_number toc_depth_1\">4</span> まとめ</a></li><li><a href=\"#i-6\"><span class=\"toc_number toc_depth_1\">5</span> おわり</a></li></ul></div>\n<h2><span id=\"API\">アカウントの作成とAPIの有効化</span></h2>\n<p>「Google Developers Console」にアクセスします。Google関連の各種APIを管理できる場所です。<br />\n→ <a href=\"https://console.developers.google.com/\" target=\"_blank\" rel=\"noopener noreferrer\">https://console.developers.google.com/</a></p>\n<h3><span id=\"i\">プロジェクト作成</span></h3>\n<p>APIは、プロジェクト単位で管理します。何か1つプロジェクトを作りましょう。</p>\n<p>作成場所は、左上に存在します。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2017/09/google-analytics-api-700x245.png\" alt=\"\" width=\"700\" height=\"245\" class=\"alignnone size-medium wp-image-11033\" /></p>\n<p>すでにプロジェクトが存在する人は、右上の「+」ボタンから新しくプロジェクトを追加しましょう。初めてプロジェクトを作る人はこの画面がでないはずです。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2017/09/google-analytics-api2-700x428.png\" alt=\"\" width=\"700\" height=\"428\" class=\"alignnone size-medium wp-image-11034\" /></p>\n<p>プロジェクト名は何でもOKです。管理しやすい名前を入力しておきましょう。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2017/09/google-analytics-api3.png\" alt=\"\" width=\"557\" height=\"346\" class=\"alignnone size-full wp-image-11035\" /></p>\n<h3 id=\"analytics-api-json\"><span id=\"i-2\">認証情報作成</span></h3>\n<p>左のサイドメニューから「認証情報」を選択し、「サービスアカウントキー」を作成します。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2017/09/google-analytics-api6-700x478.png\" alt=\"\" width=\"700\" height=\"478\" class=\"alignnone size-medium wp-image-11052\" /></p>\n<p>「役割」はデーターを見るだけなら「閲覧者」で構いません。操作するとかしたい場合は、オーナーとかにする必要があるかもしれませんが。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2017/09/google-analytics-api5.png\" alt=\"\" width=\"418\" height=\"270\" class=\"alignnone size-full wp-image-11037\" /></p>\n<p>サービスアカウント名およびサービスアカウントIDは、先程作成したプロジェクトの「ID」を選択してください。おそらくプルダウンで選べるようになるはずですが、選べない場合はコピペで入力しましょう。IDの確認場所は、プロジェクト作成時の場所と同様です。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2017/09/google-analytics-api7-700x430.png\" alt=\"\" width=\"700\" height=\"430\" class=\"alignnone size-medium wp-image-11038\" /></p>\n<p>作成するとJSONファイルがダウンロードされます。大切なファイルですのでなくさないようにしましょう。保存できるタイミングは作成時だけなので、なくした場合は削除して新しく作り直してください。</p>\n<p>中身はこんな感じです。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2017/09/google-analytics-api8-700x232.png\" alt=\"\" width=\"700\" height=\"232\" class=\"alignnone size-medium wp-image-11039\" /></p>\n<h3><span id=\"Analytics_Reporting_API\">Analytics Reporting APIを有効化</span></h3>\n<p>デフォルトでは無効化されているので有効化してあげましょう。</p>\n<p>サイドメニューのライブラリを選択して、「Analytics」で検索。「Analytics Reporting API」を選択します。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2017/09/google-analytics-api9-700x426.png\" alt=\"\" width=\"700\" height=\"426\" class=\"alignnone size-medium wp-image-11040\" /></p>\n<p>右上あたりに「有効化する」ボタンがあるはずです。※ わたしの画像は有効化されている状態になります。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2017/09/google-analytics-api10-700x244.png\" alt=\"\" width=\"700\" height=\"244\" class=\"alignnone size-medium wp-image-11041\" /></p>\n<p>ここまでで管理画面側での作業は完了です！</p>\n<h2><span id=\"Google_Analytics\">Google Analyticsとの紐付け</span></h2>\n<p>APIからGoogle Analyticsにアクセスするための権限を追加してあげる必要があります。</p>\n<p>Google Analyticsの管理画面から連携したいビューの「ユーザー管理」を選択します。「権限を付与するユーザー」に作成したサービスアカウントのメールアドレスを入力してあげましょう。メールアドレスはダウンロードしたJSONファイルの中にあります。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2017/09/google-analytics-api11-700x350.png\" alt=\"\" width=\"700\" height=\"350\" class=\"alignnone size-medium wp-image-11042\" /></p>\n<p>ビューのアクセス権限はデータを取得するだけなら「表示と分析」でOKです。</p>\n<h2><span id=\"i-3\">ライブラリのダウンロードしてコーディング</span></h2>\n<p>Google Analytics APIを利用するためのライブラリを取得しましょう。</p>\n<p>GitHub上にソースが置いてあるのですが、ここからダウンロードすると（わたしは）上手く使えなかったので、手順に記されているとおりにComporserを使ってダウンロードすると無難かと思います。</p>\n<p>→ <a href=\"https://github.com/google/google-api-php-client\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/google/google-api-php-client</a><br />\nスクロールして「Installation」の項目あたりを進めていってください。</p>\n<p>コマンド操作が必要になるだけで、一気に中級者っぽいレベルに上がりますね・・・。他に方法分からなくて、すみません。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-0\">コピー</span><code id=\"code-0\" class=\"cli nohighlight hljs\">composer require google/apiclient:^2.0\r\n</code></pre>\n<p>WindowsでComposerを使う方法は以下で紹介しています。XAMPPとComposerインストールするだけです！<br />\n→ <a href=\"https://haniwaman.com/windows-composer/\">WindowsにComposerをインストールする！</a></p>\n<p>上手くダウンロードできれば以下のような階層のフォルダがダウンロードされるはずです。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2017/09/google-analytics-api12.png\" alt=\"\" width=\"226\" height=\"192\" class=\"alignnone size-full wp-image-11044\" /></p>\n<p>このライブラリを使って、指定した期間のセッションを取得するコードを書いていきます。</p>\n<h3><span id=\"PHP\">セッションを取得するコード（PHP）</span></h3>\n<p>公式を参考に作成していきましょう！<br />\n※ 公式の情報が古く最新のライブラリに対応できていない箇所があるのでいくつか修正いれています。<br />\n→ <a href=\"https://developers.google.com/analytics/devguides/reporting/core/v4/quickstart/service-php\" target=\"_blank\" rel=\"noopener noreferrer\">はじめてのアナリティクス Reporting API v4: サービス アカウント向け PHP クイックスタート</a></p>\n<p>コード書く前に以下のファイルと値を確認しておいてください。</p>\n<p>【必要となるファイル】</p>\n<ul>\n<li>ダウンロードした<a href=\"#analytics-api-json\">JSONファイル</a></li>\n<li>ダウンロードしたvendorフォルダ一式</li>\n</ul>\n<p>【必要となる値】</p>\n<ul>\n<li>Google AnalyticsのビューID</li>\n</ul>\n<p>Google Analytics管理画面から確認できます。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2017/09/google-analytics-api14.png\" alt=\"\" width=\"429\" height=\"203\" class=\"alignnone size-full wp-image-11049\" /></p>\n<p>以下のコードの<code>&lt;REPLACE_WITH_VIEW_ID&gt;</code>に入力してあげてください。</p>\n<pre><div class=\"filename\">HelloAnalytics.php</div><span class=\"code-copy\" data-clipboard-target=\"#code-1\">コピー</span><code id=\"code-1\" class=\"php\">&lt;?php\r\n\r\nrequire_once __DIR__ . '/vendor/autoload.php';\r\n\r\n$analytics = initializeAnalytics();\r\n$response = getReport( $analytics );\r\nprintResults( $response );\r\n\r\nfunction initializeAnalytics() {\r\n\r\n\t$KEY_FILE_LOCATION = __DIR__ . '/service-account-credentials.json';\r\n\r\n\t$client = new Google_Client();\r\n\t$client-&gt;setApplicationName( \"Hello Analytics Reporting\" );\r\n\t$client-&gt;setAuthConfig( $KEY_FILE_LOCATION );\r\n\t$client-&gt;setScopes( ['https://www.googleapis.com/auth/analytics.readonly'] );\r\n\t$analytics = new Google_Service_AnalyticsReporting( $client );\r\n\r\n\treturn $analytics;\r\n}\r\n\r\nfunction getReport( $analytics ) {\r\n\r\n\t$VIEW_ID = \"&lt;REPLACE_WITH_VIEW_ID&gt;\";\r\n\r\n\t$dateRange = new Google_Service_AnalyticsReporting_DateRange();\r\n\t$dateRange-&gt;setStartDate( \"30daysAgo\" );\r\n\t$dateRange-&gt;setEndDate( \"yesterday\" );\r\n\t// 以下のような日付指定も可\r\n\t// $dateRange-&gt;setStartDate( \"2016-09-27\" );\r\n\t// $dateRange-&gt;setEndDate( \"2017-07-27\" );\r\n\r\n\t$sessions = new Google_Service_AnalyticsReporting_Metric();\r\n\t$sessions-&gt;setExpression( \"ga:sessions\" );\r\n\t$sessions-&gt;setAlias( \"sessions\" );\r\n\r\n\t$dimention = new Google_Service_AnalyticsReporting_Dimension();\r\n\t$dimention-&gt;setName( 'ga:landingPagePath' );\r\n\r\n\t$orderby = new Google_Service_AnalyticsReporting_OrderBy();\r\n\t$orderby-&gt;setFieldName( \"ga:sessions\" );\r\n\t$orderby-&gt;setOrderType( \"VALUE\" );\r\n\t$orderby-&gt;setSortOrder( \"DESCENDING\" );\r\n\r\n\t$request = new Google_Service_AnalyticsReporting_ReportRequest();\r\n\t$request-&gt;setViewId( $VIEW_ID );\r\n\t$request-&gt;setDateRanges( $dateRange );\r\n\t$request-&gt;setMetrics( array( $sessions ) );\r\n\t$request-&gt;setDimensions( array( $dimention ) );\r\n\t$request-&gt;setOrderBys( $orderby );\r\n\r\n\t$body = new Google_Service_AnalyticsReporting_GetReportsRequest();\r\n\t$body-&gt;setReportRequests( array( $request) );\r\n\treturn $analytics-&gt;reports-&gt;batchGet( $body );\r\n}\r\n\r\nfunction printResults( $reports ) {\r\n\r\n\t$report = $reports[0];\r\n\t$rows = $report-&gt;getData()-&gt;getRows();\r\n\r\n\tfor ( $rowIndex = 0; $rowIndex &lt; count( $rows ); $rowIndex++ ) {\r\n\r\n\t\t$row = $rows[ $rowIndex ];\r\n\t\t$dimensions = $row-&gt;getDimensions();\r\n\t\t$metrics = $row-&gt;getMetrics();\r\n\t\t$session = $metrics[0]-&gt;getValues()[0];\r\n\r\n\t\techo '&lt;p style=\"margin-bottom: 12px;\"&gt;';\r\n\t\techo $dimensions[0] . '\tsession:' . $session;\r\n\t\techo '&lt;/p&gt;';\r\n\r\n\t}\r\n}</code></pre>\n<p>コメントほぼないコードですみません。。最終的なフォルダ構造としては以下のような感じです。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2017/09/google-analytics-api13.png\" alt=\"\" width=\"496\" height=\"82\" class=\"alignnone size-full wp-image-11048\" /></p>\n<p>実行結果としては、当ブログだったら以下のような感じです。（数字はイメージ）</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-2\">コピー</span><code id=\"code-2\" class=\"txt\">/archives/11021\tsession:133434\r\n/archives/11011\tsession:125643\r\n/archives/11000\tsession:94633\r\n/archives/10992\tsession:85641</code></pre>\n<h4>少し解説</h4>\n<p><code>$KEY_FILE_LOCATION = __DIR__ . '/service-account-credentials.json';</code><br />\nダウンロードしたjsonファイルを指定する場所です。公式にファイル名を合わせて変更しましたが各々のファイル名を指定していただいても構いません。</p>\n<p><code>$VIEW_ID = \"&lt;REPLACE_WITH_VIEW_ID&gt;\";</code><br />\nGoogle AnalyticsのビューIDを指定します。</p>\n<p><code>getReport( $analytics )</code>関数内<br />\n変数名でなんとなく分かると思いますが、マトリックスやディメンション、日付の範囲、ソートなどを設定しています。</p>\n<p>どういった値を指定できるかは、以下の公式ドキュメントを参考にしてください。<br />\n→ <a href=\"https://developers.google.com/analytics/devguides/reporting/core/dimsmets\" target=\"_blank\" rel=\"noopener noreferrer\">Dimensions &amp; Metrics Explorer</a></p>\n<p>※ こっちの方が分かりやすいです。<br />\n→ <a href=\"https://developers.google.com/analytics/devguides/reporting/core/v4/samples?hl=ja\" target=\"_blank\" rel=\"noopener noreferrer\">Reporting API v4 の機能のサンプル</a></p>\n<h3><span id=\"i-4\">つまづいたポイント</span></h3>\n<p>同じようなエラーで悩んでいる人がこの記事で解決すればいいなと思い、あえて解説します。エラーメッセージごとに紹介。</p>\n<blockquote><p>Fatal error: Uncaught exception &#8216;Google_Service_Exception&#8217; with message</p></blockquote>\n<p>上記のメッセージは</p>\n<ul>\n<li>$VIEW_ID</li>\n<li>$KEY_FILE_LOCATION</li>\n</ul>\n<p>が正しくない場合に起こるようです。</p>\n<blockquote><p>Fatal error: Class &#8216;Google_Auth_AssertionCredentials&#8217; not found</p></blockquote>\n<p><code>new Google_Auth_AssertionCredentials()</code>はもう使えないみたいですね。代わりに<code>setAuthConfig()</code>を使ってください。古いコードだと前者が使われていたりします。</p>\n<h3><span id=\"1\">1日の使用上限</span></h3>\n<blockquote><p>Quota Error: profileId XXXXXXXX(VIEW ID) has exceeded the daily request limit.</p></blockquote>\n<p>Google Analytics APIは1日に使える上限が決まっていました。<br />\n→ <a href=\"https://developers.google.com/analytics/devguides/reporting/core/v3/limits-quotas?hl=ja\" target=\"_blank\" rel=\"noopener noreferrer\">API リクエストの制限と割り当て</a></p>\n<p>上限を超えても「太平洋標準時の午前0時に更新」されて、また使えるようになりますのでご安心を。</p>\n<h2><span id=\"i-5\">まとめ</span></h2>\n<p>Google Analytics APIの使い方でした。</p>\n<ul>\n<li>アカウントの作成とAPIの有効化</li>\n<li>Google Analyticsとの紐付け</li>\n<li>ライブラリのダウンロード</li>\n<li>コーディング</li>\n</ul>\n<p>といった流れです。手順が多くて大変ですね。つまずくこともあると思いますが、1つ1つ解決していき自分の手のひらで操れるようになると楽しいですよ。</p>\n<p>応用すればWordPressに人気記事を反映させたりできます。プラグインを使うより正確で拡張性もあるので、ぜひ使いこなせるようにマスターしましょう！</p>\n<h2><span id=\"i-6\">おわり</span></h2><div class=\"matome\"><div class=\"matome-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"></div><div class=\"matome-twitter\"><a href=\"https://twitter.com/haniwa008?ref_src=twsrc%5Etfw\" class=\"twitter-follow-button\" data-show-screen-name=\"false\" data-size=\"large\" data-lang=\"ja\" data-show-count=\"true\">Follow @haniwa008</a><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></div></div><!-- /matome -->\n<p>Google Analytics APIの使い方でした。Google先生はすぐにUI変えたりするので困りものです。去年の手順記事が古くて使い物にならなくなっていたりするので&#8230;。（わたしも頑張って更新していきます）</p>\n<p>現時点（2018年１月）で最新verだと思いますが、もし手順通りにできない場合は、お問い合わせいただけますと幸いです。</p>\n","date":"December 24, 2017","categories":[{"name":"Web API","slug":"web-api"}],"tags":null,"author":{"name":"はにわまん","slug":"haniwaman"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"2a5834cc-1960-5a38-befa-12dc3e73cfe6"}}}