{"componentChunkName":"component---src-templates-post-js","path":"/pa-api-5/","result":{"data":{"wordpressPost":{"id":"fdfdbd10-1ea7-5021-9b05-cef04599dcc9","title":"4.0から大きく変わった「PA-API v5.0（Amazon API）」の使い方！","slug":"pa-api-5","content":"<p>以前、<a href=\"https://haniwaman.com/amazon-api-1/\">Amazon APIの使い方！</a>としてエントリー記事を書きましたが、Amazonでの仕様が変わり<strong class=\"marker\">2019年12月1日から新しいバージョン5.0のPA-API（Product Advertising API）と移行</strong>します。</p>\n<p>これに伴い、2019年11月30日までに移行が完了していない場合は現在のPA-APIは使えなくなるということです&#8230;</p>\n<blockquote><p>Product Advertising API （以下PA-API）の新しいバージョン（PA-API v5)についてお知らせいたします。</p>\n<p>PA-API v5への移行を2019年11月30日までに実施しなかった場合、現在のPA-APIはご利用をいただけなくなります。</p>\n<p>引用 ： <a href=\"https://affiliate.amazon.co.jp/help/node/topic/GZBFW3F79Y7FADBL/ref=amb_link_zYXX0aRKMACI_Qkj9rR6Nw_2?pf_rd_p=36d17c08-7702-4489-87f3-ba80a688d27e\" rel=\"noopener\" target=\"_blank\">PA-API v5移行のご案内</a>\n</p></blockquote>\n<p>※ 自分は「Amazon API」と呼んでいましたが、正確にはPA-APIなので、今後はPA-APIに統一します</p>\n<p>変更方法としては、以下の2ステップです。</p>\n<blockquote><p>ステップ1: PA-APIのアクセスキーはアソシエイト・セントラルで発行されたものをご利用いただく必要があります。</p>\n<p>ステップ2: 日本語版のPA-API v5移行ガイドをご確認ください。移行プロセスを実施しても、2019年11月30日までは引き続き現行APIをご利用いただけます。</p></blockquote>\n<p>基本的には、手順に沿っていけば対応できるので、（当サイトでも一部解説しますが、）公式サイトの手順を見ながら進めて見てください！<br />\n→ <a href=\"https://affiliate.amazon.co.jp/help/node/topic/GZH32YX29UH5GACM\" rel=\"noopener\" target=\"_blank\">PA-API v5移行ガイド</a></p>\n<div class=\"chat\"><figure class=\"chat-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"><figcaption>はにわまん</figcaption></figure><div class=\"chat-content\">PA-APIでシステム作っている人は結構大きな書き換えになりそう...</div></div>\n<div id=\"toc_container\" class=\"no_bullets\"><p class=\"toc_title\">目次</p><ul class=\"toc_list\"><li><a href=\"#PA-API_v50\"><span class=\"toc_number toc_depth_1\">1</span> PA-API v5.0での大きな変更点</a></li><li><a href=\"#PA-API_v50-2\"><span class=\"toc_number toc_depth_1\">2</span> PA-API v5.0の使い方</a><ul><li><a href=\"#i\"><span class=\"toc_number toc_depth_2\">2.1</span> 新しいアクセスキーを取得</a></li><li><a href=\"#i-2\"><span class=\"toc_number toc_depth_2\">2.2</span> ソースコードをダウンロード</a></li><li><a href=\"#i-3\"><span class=\"toc_number toc_depth_2\">2.3</span> アクセスキー、シークレットキー、アソシエイトタグでサンプルソースを動かす</a></li></ul></li><li><a href=\"#i-4\"><span class=\"toc_number toc_depth_1\">3</span> 実装方法の整理</a><ul><li><a href=\"#i-5\"><span class=\"toc_number toc_depth_2\">3.1</span> リクエストの作成方法</a></li><li><a href=\"#i-6\"><span class=\"toc_number toc_depth_2\">3.2</span> レスポンスのカスタマイズ</a></li></ul></li><li><a href=\"#i-7\"><span class=\"toc_number toc_depth_1\">4</span> おわり</a></li></ul></div>\n<h2><span id=\"PA-API_v50\">PA-API v5.0での大きな変更点</span></h2>\n<p>実際に使ってみたのですが、大きな変更ポイントとしては、以下の3点だと感じました。</p>\n<ul class=\"check\">\n<li>パラーメータの種類が変更</li>\n<li>パラーメータの設定が直感的に行える</li>\n<li>返してくれるデータがJSON形式</li>\n</ul>\n<p>１、PA-API v4.0からパラメーターが変わっています。ソースコードはまるごと変更しないといけません&#8230;。</p>\n<p>２、そして、今までのPA-APIはリクエストURLを作成するのが（自分のスキルでは）めちゃくちゃ面倒でしたが、、、PA-API v5.0では、Amazon側でリクエストURLを作成するクラスを色んなプログラミング言語で用意してくれていて、<strong class=\"marker\">ほぼブラックボックス的にパラメーターの値だけを指定するだけでリクエストURLの取得から出力まで行える</strong>ようになっています。</p>\n<p>3、また、JSONが全盛期？の時代に、いつまでXMLを続けるんだろう&#8230;と思っていましたが、このタイミングでJSONに切り替わりました（XMLでの取得も可能です）</p>\n<h2><span id=\"PA-API_v50-2\">PA-API v5.0の使い方</span></h2>\n<h3><span id=\"i\">新しいアクセスキーを取得</span></h3>\n<p>以下のページから新しいアクセスキー（とシークレットキー）を取得し直す必要があります。<br />\n→ <a href=\"https://affiliate.amazon.co.jp/assoc_credentials/home\" rel=\"noopener\" target=\"_blank\">アソシエイト・セントラルのPA-APIページ</a></p>\n<p><img src=\"https://haniwaman.com/wp-content/uploads/2019/10/amazon5-01-700x213.png\" alt=\"\" width=\"700\" class=\"alignnone size-medium wp-image-16214\" srcset=\"https://haniwaman.com/wp-content/uploads/2019/10/amazon5-01-700x213.png 700w, https://haniwaman.com/wp-content/uploads/2019/10/amazon5-01-768x234.png 768w, https://haniwaman.com/wp-content/uploads/2019/10/amazon5-01-1200x366.png 1200w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<p>アクセスキーは、2つまで取得可能です。また、作成時にアクセスキーとシークレットキーの記載されたCSVファイルがダウンロードされます。<strong class=\"marker\">シークレットキーはこのCSVファイルにしか情報が残らないのでちゃんと保存しておく</strong>ようにしましょう。</p>\n<h3><span id=\"i-2\">ソースコードをダウンロード</span></h3>\n<p>PA-API v5.0では、サンプルのソースコードが豊富に揃っています。わたしのような、めっちゃ表面的にしかプログラミングが分かっていない人でも実装できるような親切設計です&#8230;。</p>\n<p>ダウンロードは以下のページから行えます。<br />\n→ <a href=\"https://webservices.amazon.com/paapi5/documentation/quick-start/using-sdk.html\" rel=\"noopener\" target=\"_blank\">Using SDK · Product Advertising API 5.0</a></p>\n<p>わたしはPHPを使っているので、「paapi5-php-sdk-and-samples」というサンプルをダンロードしました。<br />\n※ ソースコードのバージョン1.0.0時点<br />\n<a href=\"https://webservices.amazon.com/paapi5/documentation/quick-start/using-sdk.html\" rel=\"noopener\" target=\"_blank\"><img src=\"https://haniwaman.com/wp-content/uploads/2019/10/amazon5-02-700x261.png\" alt=\"\" width=\"700\" class=\"alignnone size-medium wp-image-16229\" srcset=\"https://haniwaman.com/wp-content/uploads/2019/10/amazon5-02-700x261.png 700w, https://haniwaman.com/wp-content/uploads/2019/10/amazon5-02-768x287.png 768w, https://haniwaman.com/wp-content/uploads/2019/10/amazon5-02-1200x448.png 1200w, https://haniwaman.com/wp-content/uploads/2019/10/amazon5-02.png 1592w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></a></p>\n<p>ダウンロードしたフォルダを見ると、以下のような4つのファイルがあります。これは、バージョン5.0のオペレーションに対応しているファイルになります。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/10/amazon5-03.png\" alt=\"\" width=\"300\" class=\"alignnone size-full wp-image-16217\" /></p>\n<p>オペレーションとは<strong>リクエスト方法</strong>みたいなイメージでいいかと思いますが、PA-API v5.0では、<a href=\"https://webservices.amazon.com/paapi5/documentation/operations.html\" rel=\"noopener\" target=\"_blank\">４パターン（GetBrowseNodes、GetItems、GetVariations、SearchItems）のオペレーション</a>が用意されており、それぞれのサンプルソースを確認しがら実行できるというサンプルとなっているという訳ですね。<br />\n<a href=\"https://webservices.amazon.com/paapi5/documentation/operations.html\" rel=\"noopener\" target=\"_blank\"><img src=\"https://haniwaman.com/wp-content/uploads/2019/10/amazon5-04-700x288.png\" alt=\"\" width=\"700\" class=\"alignnone size-medium wp-image-16218\" srcset=\"https://haniwaman.com/wp-content/uploads/2019/10/amazon5-04-700x288.png 700w, https://haniwaman.com/wp-content/uploads/2019/10/amazon5-04-768x316.png 768w, https://haniwaman.com/wp-content/uploads/2019/10/amazon5-04-1200x494.png 1200w, https://haniwaman.com/wp-content/uploads/2019/10/amazon5-04.png 1656w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></a></p>\n<h3><span id=\"i-3\">アクセスキー、シークレットキー、アソシエイトタグでサンプルソースを動かす</span></h3>\n<p>試しに、<span class=\"filename\">GetItems.php</span>を触ってみようと思います。まずは、ダウンロードしたファイルをまるごとPHPが動く環境に移動してあげます。ローカルでPHPを動かす環境を用意するなら、Windowsの方はXAMPP、Macの方はMAMPがおすすめです。</p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"asyUhOsuRP\"><p><a href=\"https://haniwaman.com/local-apache/\">超簡単！PHPプログラムをローカルで動作確認するための環境構築方法</a></p></blockquote>\n<p><iframe title=\"&#8220;超簡単！PHPプログラムをローカルで動作確認するための環境構築方法&#8221; &#8212; HPcode\" class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" src=\"https://haniwaman.com/local-apache/embed/#?secret=asyUhOsuRP\" data-secret=\"asyUhOsuRP\" width=\"500\" height=\"282\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></p>\n<p>書き換えるのは見出しにもなっている、アクセスキー、シークレットキー、アソシエイトタグの3点ですね。おそらく64行目あたり。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/10/amazon5-05-700x287.png\" alt=\"\" width=\"700\" class=\"alignnone size-medium wp-image-16220\" srcset=\"https://haniwaman.com/wp-content/uploads/2019/10/amazon5-05-700x287.png 700w, https://haniwaman.com/wp-content/uploads/2019/10/amazon5-05-768x315.png 768w, https://haniwaman.com/wp-content/uploads/2019/10/amazon5-05.png 974w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<p>ホストとリージョンを日本に変更してあげます（ここを変更しないとToo Many Requestsのエラーが止まらなかった&#8230;） 具体的には、以下の部分の記述を変更してあげます。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-0\">コピー</span><code id=\"code-0\" class=\"php\">// $config-&gt;setHost('webservices.amazon.com');\r\n// $config-&gt;setRegion('us-east-1');\r\n$config-&gt;setHost('webservices.amazon.co.jp');\r\n$config-&gt;setRegion('us-west-2');</code></pre>\n<p>ホストとリージョンについては、<br />\n「<a href=\"https://webservices.amazon.com/paapi5/documentation/common-request-parameters.html\" rel=\"noopener\" target=\"_blank\">Common Request Parameters · Product Advertising API 5.0</a>」で詳しく紹介されています。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/10/amazon5-06-700x582.png\" alt=\"\" width=\"700\" class=\"alignnone size-medium wp-image-16222\" srcset=\"https://haniwaman.com/wp-content/uploads/2019/10/amazon5-06-700x582.png 700w, https://haniwaman.com/wp-content/uploads/2019/10/amazon5-06-768x639.png 768w, https://haniwaman.com/wp-content/uploads/2019/10/amazon5-06-1200x998.png 1200w, https://haniwaman.com/wp-content/uploads/2019/10/amazon5-06.png 1606w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<p>最後に、、、サンプルで記載されている商品がなぜか存在しなくて怒られるので、、、好きな商品のASIN番号に変更してあげましょう。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-1\">コピー</span><code id=\"code-1\" class=\"php\">// $itemIds = array(\"059035342X\", \"B00X4WHP55\", \"1401263119\");\r\n$itemIds = array(\"B075LCKFLL\", \"B00M0ESXUI\");</code></pre>\n<p>ここまで修正して実行してみると、以下のような結果となります。ソースを見てもらうと、さっき指定した2つのASIN番号のアイテムの情報が返っている処理であることが分かります。<br />\n（一応、ローカル環境での実行URLとしては、ファイルの格納場所などで変わってきますが次のような感じです。http://localhost/amazon/GetItems.php）<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/10/amazon5-07-700x220.png\" alt=\"\" width=\"700\" class=\"alignnone size-medium wp-image-16223\" srcset=\"https://haniwaman.com/wp-content/uploads/2019/10/amazon5-07-700x220.png 700w, https://haniwaman.com/wp-content/uploads/2019/10/amazon5-07-768x241.png 768w, https://haniwaman.com/wp-content/uploads/2019/10/amazon5-07-1200x377.png 1200w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<p>JSON以外にもたくさん<code>echo</code>で表示されているので、JSONだけ返したい場合は他のechoは削除（コメントアウト）してあげるといいかもしれません。JSONを取得している部分は、<code>$getItemsResponse = $apiInstance->getItems($getItemsRequest);</code>で、この変数の出力以外は、肉付け的なコメント部分となります。</p>\n<h4>成果の出ているアソシエイトタグがないと動かない&#8230;</h4>\n<p>PA-API v4.0からお使いの方はご存知かと思いますが、念のための共有として、PA-APIは、成果の出ているアソシエイトタグがないと動かせません。</p>\n<p><strong class=\"marker\">2019/01/23から、成果の出ていないアソシエイトタグではPA-APIが利用できなくなりました</strong>。これはPA-APIのバージョンが5.0に変わっても変わらないであろう仕様なので、PA-APIを利用したい方は、まずは売上実績をまず作ることが最優先となります&#8230;</p>\n<blockquote><p>売上実績の発生がない場合は、PA-APIの利用開始はできません。<br />\nまた、発送済み商品売上が過去30日以内に発生していない場合、PA-APIをご利用いただけなくなる恐れがございます。<br />\n→ <a href=\"https://affiliate.amazon.co.jp/help/node/topic/GW65C7J2CSK7CA6C\" rel=\"noopener\" target=\"_blank\">2019/01/23 &#8211; Product Advertising API 利用ポリシーの変更について</a></p></blockquote>\n<h2><span id=\"i-4\">実装方法の整理</span></h2>\n<p>PA-API v5.0の実装方法を整理しておきます（主に自分のためでもあったり&#8230;）</p>\n<p>Web APIは基本的には、リクエストとレスポンスの2つから成り立っています。</p>\n<h3><span id=\"i-5\">リクエストの作成方法</span></h3>\n<p>リクエストとは、Amazonへ「〇〇のデータをください！」とお願いする時の「〇〇」の部分です。このリクエストを管理しているのが、「<code>GetItemsRequest</code>クラス」です。</p>\n<p>この付近のサンプルコードを見ると、以下のように何やら<code>set</code>していることが分かります。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-2\">コピー</span><code id=\"code-2\" class=\"php\">$getItemsRequest = new GetItemsRequest();\r\n$getItemsRequest-&gt;setItemIds($itemIds);\r\n$getItemsRequest-&gt;setPartnerTag($partnerTag);\r\n$getItemsRequest-&gt;setPartnerType(PartnerType::ASSOCIATES);\r\n$getItemsRequest-&gt;setResources($resources);</code></pre>\n<p>例えば、「GetItems」のオペレーションであれば、以下の「Request Parameters」と一致していることが分かるはずです。<br />\n→ <a href=\"https://webservices.amazon.com/paapi5/documentation/getbrowsenodes.html\" rel=\"noopener\" target=\"_blank\">GetItems · Product Advertising API 5.0</a></p>\n<p>リンク先のパラメーターの値と説明を参考にしながら、取得した情報のリクエストを作っていくような流れになります。</p>\n<h3><span id=\"i-6\">レスポンスのカスタマイズ</span></h3>\n<p>レスポンスとは、<strong class=\"marker\">JSONで何のデータを返してもらうか</strong>といったものです。タイトルやURLはもちろんかと思いますが、その他、画像や価格や関連商品など、Amazonにリクエストした商品に対して、どういった情報を付与してもらうかはこちらでカスタマイズできます。</p>\n<p>それが、リクエストパラメーターとして用意されいてる「Resources」になります。サンプルコードだと以下のような記述となっています（色々省きました&#8230;）</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-3\">コピー</span><code id=\"code-3\" class=\"php\">const ITEM_INFOTITLE = 'ItemInfo.Title';\r\nconst OFFERSLISTINGSPRICE = 'Offers.Listings.Price';\r\n$resources = array(\r\n    GetItemsResource::ITEM_INFOTITLE,\r\n    GetItemsResource::OFFERSLISTINGSPRICE);\r\n$getItemsRequest-&gt;setResources($resources);</code></pre>\n<p>上記の例では、<code>ItemInfo.Title</code>と<code>Offers.Listings.Price</code>をリクエストしているという形です。<code>setResources</code>に何を指定できるかは以下のドキュメント内に記載されているので参考にしてみてください。<br />\n→ <a href=\"https://webservices.amazon.com/paapi5/documentation/get-items.html?q=#resources-parameter\" rel=\"noopener\" target=\"_blank\">GetItems・Product Advertising API 5.0</a></p>\n<h2><span id=\"i-7\">おわり</span></h2><div class=\"matome\"><div class=\"matome-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"></div><div class=\"matome-twitter\"><a href=\"https://twitter.com/haniwa008?ref_src=twsrc%5Etfw\" class=\"twitter-follow-button\" data-show-screen-name=\"false\" data-size=\"large\" data-lang=\"ja\" data-show-count=\"true\">Follow @haniwa008</a><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></div></div><!-- /matome -->\n<p>ものすごい駆け足で、PA-API v5.0の使い方をざっくりと紹介していきました。基本的にはサンプルソース内を辿りながら理解していく感じになるかと思います。</p>\n<p>とはいえ、ブラックボックス的にプラグラミング知識が少ない方でも割と使いやすいような仕組みになったのかなとも思いました。</p>\n<p>いずれにしても<strong class=\"marker\">2019年11月30日までの移行は必須</strong>のため、まだ対応していない方はすぐにでも準備を始めたほうがいいかもしれません&#8230;。</p>\n","date":"October 13, 2019","categories":[{"name":"Web API","slug":"web-api"}],"tags":null,"author":{"name":"はにわまん","slug":"haniwaman"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"fdfdbd10-1ea7-5021-9b05-cef04599dcc9"}}}