{"componentChunkName":"component---src-templates-post-js","path":"/zero-coding/","result":{"data":{"wordpressPost":{"id":"6c109736-0e73-5bac-99b8-3fb7bd9ed057","title":"仕事で0から静的サイトのHTMLコーディングする時の流れ（主に準備部分）","slug":"zero-coding","content":"<p><a href=\"https://prog-8.com/\" rel=\"noopener\" target=\"_blank\">Progate</a>などの環境が整いすぎた場所で勉強してきた人にとって<strong class=\"marker\">意外と難しいのが、無の状態からHTMLコーディングすること</strong>かもしれません。</p>\n<p>Webサイトはフロント側の技術だけで成り立つので、パソコンに内蔵されているテキストファイルに文字を打つだけで簡単に始められます。</p>\n<p>実際の仕事だと、自分で必要なテキストファイルを作ってガシガシと書いていくので、何もない0からコーディングできるようになることが大事です。</p>\n<p>この記事では、「さあ、デザインを再現しよう！」ってところにたどり着くまでの「準備部分」を主に紹介していこうと思います。ぜひ、<strong class=\"marker\">記事を見ながら一緒に作成してもらえたら</strong>嬉しく思います。</p>\n<div class=\"chat\"><figure class=\"chat-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"><figcaption>はにわまん</figcaption></figure><div class=\"chat-content\">HTMLやCSSは環境構築の必要なくテキストエディタだけで手軽に作成できるのがいいですね！</div></div>\n<div id=\"toc_container\" class=\"no_bullets\"><p class=\"toc_title\">目次</p><ul class=\"toc_list\"><li><a href=\"#0HTML\"><span class=\"toc_number toc_depth_1\">1</span> 0から静的サイトのHTMLコーディングする時の流れ</a><ul><li><a href=\"#i\"><span class=\"toc_number toc_depth_2\">1.1</span> ファイル一式を格納するフォルダ作成</a></li><li><a href=\"#HTML\"><span class=\"toc_number toc_depth_2\">1.2</span> トップページのHTMLファイルを作成</a></li><li><a href=\"#CSSJavaScript\"><span class=\"toc_number toc_depth_2\">1.3</span> CSSファイル、JavaScriptファイルの作成 &amp; 格納フォルダの作成</a></li><li><a href=\"#HTML-2\"><span class=\"toc_number toc_depth_2\">1.4</span> HTMLの型を作る</a></li><li><a href=\"#HTMLCSSJavaScript\"><span class=\"toc_number toc_depth_2\">1.5</span> HTMLからCSSとJavaScriptへパスを通す</a></li><li><a href=\"#i-2\"><span class=\"toc_number toc_depth_2\">1.6</span> 画像を格納するフォルダの作成</a></li><li><a href=\"#i-3\"><span class=\"toc_number toc_depth_2\">1.7</span> 読み込むファイルは必要に応じて増やす</a></li><li><a href=\"#i-4\"><span class=\"toc_number toc_depth_2\">1.8</span> デザイン見てコーディング</a></li><li><a href=\"#i-5\"><span class=\"toc_number toc_depth_2\">1.9</span> ファイル群を納品</a></li></ul></li><li><a href=\"#i-6\"><span class=\"toc_number toc_depth_1\">2</span> おわり</a></li></ul></div>\n<h2><span id=\"0HTML\">0から静的サイトのHTMLコーディングする時の流れ</span></h2>\n<p>ザックリとは以下のような感じですね。</p>\n<div class=\"box\">\n<ul>\n<li>ファイル一式を格納するフォルダ作成</li>\n<li>トップページのHTMLファイルを作成</li>\n<li>CSSファイル、JavaScriptファイルの作成 &amp; 格納フォルダの作成</li>\n<li>HTMLからパスを通す</li>\n<li>画像を格納するフォルダの作成</li>\n<li>デザイン見てコーディング</li>\n<li>ファイル一式を納品</li>\n</ul>\n</div>\n<p>それでは、各項目を見ていきましょう。実際に同じ様に作ってみてください！</p>\n<h3><span id=\"i\">ファイル一式を格納するフォルダ作成</span></h3>\n<p>案件ごとにHTMLファイルやCSSファイルなどのファイル群を格納するフォルダを作ります。プロジェクトフォルダとかワークスペースとか呼ばれるものだと思います（意味合いが違っていたら、すみません・・・）</p>\n<p><strong class=\"marker\">フォルダを作る場所はどこでもいい</strong>です。パソコン上のどこに置いても、HTMLファイルは動きます。</p>\n<p>「work」という名前で空のフォルダを作ってみました。フォルダの名前も何でも大丈夫です。わたしの場合は、案件ごとに分かりやすく付けいます。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/12/zero-coding2.png\" alt=\"\" class=\"alignnone size-full wp-image-11416\" /></p>\n<h3><span id=\"HTML\">トップページのHTMLファイルを作成</span></h3>\n<p>先ほど作成した「work」フォルダの中に、空のHTMLファイルを作っていきます。まず最初に作るのはトップページのHTMLファイルです。テキストエディタを開いて、<span class=\"filename\">index.html</span>の名前で保存します。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/12/zero-coding.png\" alt=\"\" class=\"alignnone size-full wp-image-11417\" /></p>\n<p>テキストエディタについては、Windows標準のメモ帳などは使わずに「Sublime Text」「Atom」「VS Code」「Brackets」などを使うようにするとコーディングが捗ります。（わたしはVScode推しです）</p>\n<p>「work」フォルダの中は、今こんな感じですね。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/12/zero-coding3.png\" alt=\"\" class=\"alignnone size-full wp-image-11418\" /></p>\n<h3><span id=\"CSSJavaScript\">CSSファイル、JavaScriptファイルの作成 &amp; 格納フォルダの作成</span></h3>\n<p>次にCSSファイルやJavaScriptのファイルを格納するフォルダを作っていきます。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/12/zero-coding4.png\" alt=\"\" class=\"alignnone size-full wp-image-11419\" /></p>\n<p>cssフォルダの中には、空の<span class=\"filename\">style.css</span>のファイルを作成します。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/12/zero-coding5.png\" alt=\"\" class=\"alignnone size-full wp-image-11420\" /></p>\n<p>jsフォルダの中には、空の<span class=\"filename\">script.js</span><br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/12/zero-coding6.png\" alt=\"\" class=\"alignnone size-full wp-image-11421\" /></p>\n<p>ファイル名やフォルダ名は何でも構いません。ただし名前を変えるなら、この後に紹介するファイルパスの記述も同様に変更（もしくは追加）してください！</p>\n<h3><span id=\"HTML-2\">HTMLの型を作る</span></h3>\n<p>ここから作成したHTMLファイル（index.html）にコーディングしていきます。HTMLのお決まりのコードを書く必要がありますが、ここではズルしてEmmetでパッと出した状態からスタートします笑</p>\n<p><code>!</code>入力して<span class=\"key\">Enter</span>キー押せば、以下のように展開されます。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/12/zero-coding.gif\" alt=\"\" class=\"alignnone size-medium wp-image-11422\" /></p>\n<p>Emmet使えない方は、以下をコピペしてください。</p>\n<pre><span class=\"filename\">index.html</span><span class=\"code-copy\" data-clipboard-target=\"#code-0\">コピー</span><code id=\"code-0\" class=\"html\">&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"ja\"&gt;\r\n&lt;head&gt;\r\n\t&lt;meta charset=\"UTF-8\"&gt;\r\n\t&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\r\n\t&lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"&gt;\r\n\t&lt;title&gt;Document&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n\t\r\n&lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\n<p>余裕がある方は、Emmet便利なので触ってみてください！</p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"tM0I1ryLTG\"><p><a href=\"https://haniwaman.com/emmet/\">「はじめて」でも簡単！Emmetの使い方とよく使うパターン集</a></p></blockquote>\n<p><iframe title=\"&#8220;「はじめて」でも簡単！Emmetの使い方とよく使うパターン集&#8221; &#8212; HPcode\" class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" src=\"https://haniwaman.com/emmet/embed/#?secret=tM0I1ryLTG\" data-secret=\"tM0I1ryLTG\" width=\"500\" height=\"282\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></p>\n<h4>ブラウザに反映されるかチェック</h4>\n<p>今の状態で<code>body</code>の中に記述して<span class=\"filename\">index.html</span>を開けば、ブラウザに反映されるので試して見てください！</p>\n<pre><span class=\"filename\">index.html</span><span class=\"code-copy\" data-clipboard-target=\"#code-1\">コピー</span><code id=\"code-1\" class=\"html\">&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"ja\"&gt;\r\n&lt;head&gt;\r\n\t&lt;meta charset=\"UTF-8\"&gt;\r\n\t&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\r\n\t&lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"&gt;\r\n\t&lt;title&gt;Document&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n\t&lt;p&gt;Hello World!&lt;/p&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\n<p><img src=\"https://haniwaman.com/wp-content/uploads/2018/12/zero-coding7.png\" alt=\"\" class=\"alignnone size-full wp-image-11425\" /></p>\n<h3><span id=\"HTMLCSSJavaScript\">HTMLからCSSとJavaScriptへパスを通す</span></h3>\n<p>今のままではHTMLファイルしか機能していない状態です。CSSとJavaScriptと連動させていきましょう。</p>\n<h4>HTMLからCSSへのパスを通す</h4>\n<p>CSSは<code>head</code>タグ内に存在を記載します。該当箇所だけ抜き出すと以下の記述になります。</p>\n<pre><span class=\"filename\">index.html</span><span class=\"code-copy\" data-clipboard-target=\"#code-2\">コピー</span><code id=\"code-2\" class=\"html\">&lt;link rel=\"stylesheet\" href=\"css/style.css\"&gt;\r\n</code></pre>\n<p><code>link</code>のHTMLタグを使って、<code>rel=\"stylesheet\"</code>でスタイルシートであろことを示して、<code>href</code>にcssファイルへのパスを記載します。</p>\n<p>この場合は、<span class=\"filename\">index.html</span>ファイルと同じ階層にある<span class=\"folder\">css</span>フォルダの中にある<span class=\"filename\">style.css</span>という意味合いになります。（相対パス）</p>\n<p>全体で見た時の位置づけは以下のような感じです。<code>head</code>タグの中であればどこに書いても大丈夫です。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-3\">コピー</span><code id=\"code-3\" class=\"html\">&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"ja\"&gt;\r\n&lt;head&gt;\r\n\t&lt;meta charset=\"UTF-8\"&gt;\r\n\t&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\r\n\t&lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"&gt;\r\n\t&lt;link rel=\"stylesheet\" href=\"css/style.css\"&gt;\r\n\t&lt;title&gt;Document&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n\t&lt;p&gt;Hello World!&lt;/p&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\n<p>実際に<span class=\"filename\">style.css</span>で書いたものがちゃんと反映されるか見てみましょう。背景をピンクにしてみます。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/12/zero-coding8.png\" alt=\"\" class=\"alignnone size-full wp-image-11455\" /></p>\n<pre><span class=\"filename\">style.css</span><span class=\"code-copy\" data-clipboard-target=\"#code-4\">コピー</span><code id=\"code-4\" class=\"css\">body {\r\n\tbackground: pink;\r\n}</code></pre>\n<p>ちゃんと反映されていますね！<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/12/zero-coding9.png\" alt=\"\" class=\"alignnone size-full wp-image-11427\" /></p>\n<h4>HTMLからJavaScirptへのパスを通す</h4>\n<p>JavaScirptの読み込みは一般的には<code>body</code>の閉じタグ直前で読み込みます。記述としては以下のようになります。</p>\n<pre><span class=\"filename\">index.html</span><span class=\"code-copy\" data-clipboard-target=\"#code-5\">コピー</span><code id=\"code-5\" class=\"html\">&lt;script src=\"js/script.js\"&gt;&lt;/script&gt;\r\n</code></pre>\n<p><code>script</code>タグを使い、<code>src</code>にjsファイルへのパスを記載します。<code>script</code>の閉じタグも必須なので注意して記述してください。</p>\n<p>全体で見た時の位置づけは以下のような感じです。</p>\n<pre><span class=\"filename\">index.html</span><span class=\"code-copy\" data-clipboard-target=\"#code-6\">コピー</span><code id=\"code-6\" class=\"html\">&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"ja\"&gt;\r\n&lt;head&gt;\r\n\t&lt;meta charset=\"UTF-8\"&gt;\r\n\t&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\r\n\t&lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"&gt;\r\n\t&lt;link rel=\"stylesheet\" href=\"css/style.css\"&gt;\r\n\t&lt;title&gt;Document&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n\t&lt;p&gt;Hello World!&lt;/p&gt;\r\n\t&lt;script src=\"js/script.js\"&gt;&lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\n<p>JavaScriptが機能するか確認してみましょう。</p>\n<p><span class=\"filename\">script.js</span>にポップアップを表示させる<code>alert</code>を書いてみます。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/12/zero-coding10.png\" alt=\"\" class=\"alignnone size-full wp-image-11431\" /></p>\n<pre><span class=\"filename\">script.js</span><span class=\"code-copy\" data-clipboard-target=\"#code-7\">コピー</span><code id=\"code-7\" class=\"js\">alert( 'Hello js!' );\r\n</code></pre>\n<p>ちゃんと表示されますね！（毎回表示されるのが邪魔なので確認したらコードを消しておきましょう&#8230;）<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/12/zero-coding11-700x281.png\" alt=\"\" class=\"alignnone size-medium wp-image-11432\" srcset=\"https://haniwaman.com/wp-content/uploads/2018/12/zero-coding11-700x281.png 700w, https://haniwaman.com/wp-content/uploads/2018/12/zero-coding11-768x309.png 768w, https://haniwaman.com/wp-content/uploads/2018/12/zero-coding11.png 804w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<h3><span id=\"i-2\">画像を格納するフォルダの作成</span></h3>\n<p>HTML、CSS、JavaScriptと、あとは画像があれば、サイトを作るために必要なほぼ全ての要素が揃います。画像を格納するためのフォルダも作っていきましょう。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/12/zero-coding12.png\" alt=\"\" class=\"alignnone size-full wp-image-11433\" /></p>\n<h4>画像へのパスの通し方</h4>\n<p>画像もcssとjsとかと同様にパスを指定することができます。具体的には以下のような感じです。</p>\n<pre><span class=\"filename\">index.html</span><span class=\"code-copy\" data-clipboard-target=\"#code-8\">コピー</span><code id=\"code-8\" class=\"html\">&lt;img src=\"img/cat.jpg\" alt=\"\"&gt;\r\n</code></pre>\n<p><span class=\"folder\">img</span>フォルダ内には、こっそりと猫の画像を忍ばせておきました。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/12/zero-coding14.png\" alt=\"\" class=\"alignnone size-full wp-image-11435\" /></p>\n<p>パスがちゃんと通っていれば以下のように表示されるはずです！<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/12/zero-coding13.png\" alt=\"\" class=\"alignnone size-full wp-image-11434\" /></p>\n<h3><span id=\"i-3\">読み込むファイルは必要に応じて増やす</span></h3>\n<p>たぶん実際に仕事で使う時に１つのファイルしか読み込まないってことはないと思います。Font Awesome使いたい、jQueryを使いたい、など、外部のライブラリを使うことも多いと思います。</p>\n<p>いくらでも増やしていけますが、読み込む時に順番にだけ注意してください。CSSもJavaScriptの上から順番に読み込まれていきます。要するに下に書いたもに上書きされるということです。よく分からない内は自分で記述する<span class=\"filename\">style.css</span>や<span class=\"filename\">script.js</span>は<strong class=\"marker\">一番下に書く</strong>と覚えておくといいかもしれません。</p>\n<p>先ほどのFont AwesomeやjQueryの例だと以下のような感じです。</p>\n<pre><span class=\"filename\">index.html</span><span class=\"code-copy\" data-clipboard-target=\"#code-9\">コピー</span><code id=\"code-9\" class=\"css\">&lt;link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.0.9/css/all.css\"&gt;\r\n&lt;link rel=\"stylesheet\" href=\"css/style.css\"&gt;</code></pre>\n<pre><span class=\"filename\">index.html</span><span class=\"code-copy\" data-clipboard-target=\"#code-10\">コピー</span><code id=\"code-10\" class=\"js\">&lt;script src=\"https://code.jquery.com/jquery-3.3.1.min.js\"&gt;&lt;/script&gt;\r\n&lt;script src=\"js/script.js\"&gt;&lt;/script&gt;</code></pre>\n<h3><span id=\"i-4\">デザイン見てコーディング</span></h3>\n<p>あとは、bodyの中身をひたすらコーディングです。勉強したHTMLやCSSを駆使してデザインカンプを再現していきます。</p>\n<p>ここからは、HTMLやCSSの勉強の内容になるので割愛しますが、以下の記事のようにデザインカンプの内容をそのままbodyタグの中で再現する感じになります。</p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"gAAHOEdSJX\"><p><a href=\"https://haniwaman.com/photoshop-coding/\">Photoshopのデザインカンプからコーディングに必要な画像や値を取得する方法</a></p></blockquote>\n<p><iframe title=\"&#8220;Photoshopのデザインカンプからコーディングに必要な画像や値を取得する方法&#8221; &#8212; HPcode\" class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" src=\"https://haniwaman.com/photoshop-coding/embed/#?secret=gAAHOEdSJX\" data-secret=\"gAAHOEdSJX\" width=\"500\" height=\"282\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"q4uOTlIUla\"><p><a href=\"https://haniwaman.com/illustrator-coding/\">Illustratorのデザインカンプからコーディングに必要な画像や値を取得する方法</a></p></blockquote>\n<p><iframe title=\"&#8220;Illustratorのデザインカンプからコーディングに必要な画像や値を取得する方法&#8221; &#8212; HPcode\" class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" src=\"https://haniwaman.com/illustrator-coding/embed/#?secret=q4uOTlIUla\" data-secret=\"q4uOTlIUla\" width=\"500\" height=\"282\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></p>\n<h3><span id=\"i-5\">ファイル群を納品</span></h3>\n<p>納品するのはこのファイル群の1式になります。今回でいうと「work」フォルダです。なので、ファイル名やフォルダの階層なども見られることを意識して分かりやすく作っておくといいかと思います。</p>\n<h2><span id=\"i-6\">おわり</span></h2><div class=\"matome\"><div class=\"matome-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"></div><div class=\"matome-twitter\"><a href=\"https://twitter.com/haniwa008?ref_src=twsrc%5Etfw\" class=\"twitter-follow-button\" data-show-screen-name=\"false\" data-size=\"large\" data-lang=\"ja\" data-show-count=\"true\">Follow @haniwa008</a><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></div></div><!-- /matome -->\n<p>仕事する上ではテキストファイルを作って納品するという流れがあるということを覚えてもらえたらと思います。</p>\n<p>慣れてきたら自分が管理しやすい構成でテンプレート化して持っておくと、準備に時間を取られずにコーディングに集中できるようになります。（<span class=\"filename\">style.css</span>にいつも使うコード書いておくとか。jQueryを読み込む記述はあらかじめ<span class=\"filename\">index.html</span>ファイルに書いておくとか。）</p>\n<p>ぜひ、ご自身でもテキストファイルで0から作成してみてください！</p>\n","date":"December 15, 2018","categories":[{"name":"コーダー","slug":"coder"}],"tags":null,"author":{"name":"はにわまん","slug":"haniwaman"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"6c109736-0e73-5bac-99b8-3fb7bd9ed057"}}}