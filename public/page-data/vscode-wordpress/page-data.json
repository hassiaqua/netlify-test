{"componentChunkName":"component---src-templates-post-js","path":"/vscode-wordpress/","result":{"data":{"wordpressPost":{"id":"7f908d02-64d0-569e-bda9-91d01d5a3e4b","title":"VSCodeでWordPress開発するための拡張機能とおすすめの設定","slug":"vscode-wordpress","content":"<p>VSCodeにWordPressでの構築が捗るであろう、あれこれを入れていきます。チェック機能が多めです。</p>\n<p>個人的には、Sublime Textより使いやすいエディタです。（日本人に優しい気がする）</p>\n<div class=\"chat\"><figure class=\"chat-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"><figcaption>はにわまん</figcaption></figure><div class=\"chat-content\">WordPressをVSCodeで開発しやすくしていきます！</div></div>\n<div id=\"toc_container\" class=\"no_bullets\"><p class=\"toc_title\">目次</p><ul class=\"toc_list\"><li><a href=\"#i\"><span class=\"toc_number toc_depth_1\">1</span> おすすめの拡張機能</a><ul><li><a href=\"#WordPress_Snippet\"><span class=\"toc_number toc_depth_2\">1.1</span> WordPress Snippet</a></li><li><a href=\"#IntelliSense_for_CSS_class_names_in_HTML\"><span class=\"toc_number toc_depth_2\">1.2</span> IntelliSense for CSS class names in HTML</a></li><li><a href=\"#phpcs\"><span class=\"toc_number toc_depth_2\">1.3</span> phpcs</a></li><li><a href=\"#stylelint\"><span class=\"toc_number toc_depth_2\">1.4</span> stylelint</a></li><li><a href=\"#ESLint\"><span class=\"toc_number toc_depth_2\">1.5</span> ESLint</a></li></ul></li><li><a href=\"#i-2\"><span class=\"toc_number toc_depth_1\">2</span> おわり</a></li></ul></div>\n<h2><span id=\"i\">おすすめの拡張機能</span></h2>\n<h3><span id=\"WordPress_Snippet\">WordPress Snippet</span></h3>\n<p><img src=\"https://haniwaman.com/wp-content/uploads/2018/03/vscode-wordpress-700x299.png\" alt=\"\" width=\"700\" height=\"299\" class=\"alignnone size-medium wp-image-5201\" srcset=\"https://haniwaman.com/wp-content/uploads/2018/03/vscode-wordpress-700x299.png 700w, https://haniwaman.com/wp-content/uploads/2018/03/vscode-wordpress-768x328.png 768w, https://haniwaman.com/wp-content/uploads/2018/03/vscode-wordpress.png 965w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<p>名前の通り、WordPressのスニペット。WordPress関数の最初の数文字さえ分かれば、<span class=\"key\">Ctrl</span> + <span class=\"key\">スペース</span>で補完（もしくは候補を出す）してくれるので、うろ覚えでもなんとかなります。</p>\n<p>いちいちCodexで検索しなくても済むのでコーディングスピードも上がるはずです。</p>\n<p>公式 → <a href=\"https://marketplace.visualstudio.com/items?itemName=tungvn.wordpress-snippet\" rel=\"noopener noreferrer\" target=\"_blank\">https://marketplace.visualstudio.com/items?itemName=tungvn.wordpress-snippet</a></p>\n<h3><span id=\"IntelliSense_for_CSS_class_names_in_HTML\">IntelliSense for CSS class names in HTML</span></h3>\n<p><img src=\"https://haniwaman.com/wp-content/uploads/2018/03/vscode-wordpress.gif\" alt=\"\" width=\"700\" class=\"alignnone size-full wp-image-5193\" /></p>\n<p>classやidを数文字入力すると候補を出してくれるもの。同じプロジェクト内にあるcssファイルを読み取ってくれているみたいですね。</p>\n<p>ちゃんとネーミングルールをちゃんと設計してclass名を付けていることが前提ですが、「c-btn-」くらいまで入力したらボタン関係のclassが見れるみたいな仕組みにすることが可能です。</p>\n<p>公式 → <a href=\"https://marketplace.visualstudio.com/items?itemName=Zignd.html-css-class-completion\" rel=\"noopener noreferrer\" target=\"_blank\">https://marketplace.visualstudio.com/items?itemName=Zignd.html-css-class-completion</a></p>\n<h3><span id=\"phpcs\">phpcs</span></h3>\n<p><img src=\"https://haniwaman.com/wp-content/uploads/2018/04/vscode-wordpress3-700x341.png\" alt=\"\" width=\"700\" height=\"341\" class=\"alignnone size-medium wp-image-5206\" /></p>\n<p>PHP_CodeSnifferと言って、PHPのコーディング規約を定義したものです。</p>\n<p>さらに拡張してWordPress開発用の「WordPress-Coding-Standards」があります。こちらは、<a href=\"https://wpdocs.osdn.jp/PHP_%E3%82%B3%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0%E8%A6%8F%E7%B4%84\" rel=\"noopener noreferrer\" target=\"_blank\">WordPressのコーディング規約</a>に則っているかをチェックしてくれるものになります。</p>\n<p>ただし、VSCodeに導入しただけでは動きません。こんなエラーが出ます。</p>\n<blockquote><p>Unable to locate phpcs. Please add phpcs to your global path or use composer dependency manager to install it in your project locally.</p></blockquote>\n<p>事前にご自身の環境で準備しておいてください。Windows環境の方は以下の記事で解説しています。<br />\n→ <a href=\"https://haniwaman.com/wordpress-coding-standards/\">Windowsに「WordPress-Coding-Standards」を導入する方法</a></p>\n<p>公式 → <a href=\"https://marketplace.visualstudio.com/items?itemName=ikappas.phpcs\" rel=\"noopener noreferrer\" target=\"_blank\">https://marketplace.visualstudio.com/items?itemName=ikappas.phpcs</a></p>\n<h4>WordPressのコーディング規約に準拠させる設定</h4>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-0\">コピー</span><code id=\"code-0\" class=\"txt\">\"editor.detectIndentation\": false,\r\n\"editor.insertSpaces\": false,\r\n\"files.eol\": \"\\n\",\r\n\"phpcs.standard\": \"WordPress\",\r\n</code></pre>\n<p><code>editor.detectIndentation</code>、<code>editor.insertSpaces</code>はタブを有効化するための設定。<br />\n<code>files.eol</code>は、改行コードを「LF」にするための設定。<br />\n<code>phpcs.standard</code>は、WordPress-Coding-Standardsでコーディングチェックするための設定。</p>\n<p><strong class=\"marker\">この3つの設定を入れてコーディングするだけで、多くのエラーを防ぐことができます！</strong></p>\n<p>「WordPress-Coding-Standards」特有でもあるので、これらの設定はプロジェクトごとに行なうといいでしょう。「〇〇フォルダの設定」という部分がプロジェクト単位での設定場所になります。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/04/vscode-wordpress2.png\" alt=\"\" width=\"461\" height=\"218\" class=\"alignnone size-full wp-image-5204\" /></p>\n<h3><span id=\"stylelint\">stylelint</span></h3>\n<p><img src=\"https://haniwaman.com/wp-content/uploads/2018/04/vscode-wordpress6-700x476.png\" alt=\"\" width=\"700\" height=\"476\" class=\"alignnone size-medium wp-image-5224\" srcset=\"https://haniwaman.com/wp-content/uploads/2018/04/vscode-wordpress6-700x476.png 700w, https://haniwaman.com/wp-content/uploads/2018/04/vscode-wordpress6-768x522.png 768w, https://haniwaman.com/wp-content/uploads/2018/04/vscode-wordpress6.png 896w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<p>CSSを検証するためのツールです。</p>\n<p><span class=\"filename\">.stylelintrc</span>というファイルをプロジェクト内に設置してあげてください。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/04/vscode-wordpress4.png\" alt=\"\" width=\"233\" height=\"156\" class=\"alignnone size-full wp-image-5210\" /></p>\n<p>WordPressのstylelintの設定を適応させましょう。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-1\">コピー</span><code id=\"code-1\" class=\"cli nohighlight hljs\">npm install stylelint-config-wordpress --save-dev\r\n</code></pre>\n<p>先程、作成した<span class=\"filename\">.stylelintrc</span>に以下のように記述します。</p>\n<pre><span class=\"filename\">.stylelintrc</span><span class=\"code-copy\" data-clipboard-target=\"#code-2\">コピー</span><code id=\"code-2\" class=\"txt\">{\r\n\t\"extends\": \"stylelint-config-wordpress\",\r\n}</code></pre>\n<p>これでWordPressのスタイルルールに則ったチェックが動くようになります。他にもオリジナルルールを設定できますので、WordPressのルールに反しない範囲で付け加えていくといいと思います。</p>\n<p>公式 → <a href=\"https://marketplace.visualstudio.com/items?itemName=shinnn.stylelint\" rel=\"noopener noreferrer\" target=\"_blank\">https://marketplace.visualstudio.com/items?itemName=shinnn.stylelint</a></p>\n<p>scssもチェック入るようで、「ruleにありません」と怒られることがあります。<br />\nVSCodeの「Sass Lint」も入れておくと、無駄なエラーでイライラしなくて済むので、こちらも入れておくといいかと思います。<br />\n→ <a href=\"https://marketplace.visualstudio.com/items?itemName=glen-84.sass-lint\" rel=\"noopener noreferrer\" target=\"_blank\">https://marketplace.visualstudio.com/items?itemName=glen-84.sass-lint</a></p>\n<h3><span id=\"ESLint\">ESLint</span></h3>\n<p>Javascriptを検証するためのツールです。</p>\n<p>VSCodeでインストールしただけでは使うことができず、下記のとおり自分のPC上に導入しておく必要があります。\t</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-3\">コピー</span><code id=\"code-3\" class=\"cli nohighlight hljs\">npm install -g eslint\r\n</code></pre>\n<p>続いて、WordPress用のルールをインストールします。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-4\">コピー</span><code id=\"code-4\" class=\"cli nohighlight hljs\">npm install eslint-config-wordpress -g\r\n</code></pre>\n<p>なぜかGlobalじゃないと、エラーになるので仕方なく<code>-g</code>に。<br />\n（「Cannot find module &#8216;eslint-config-wordpress&#8217; Referenced from:」見つかりませんと怒られます&#8230;）</p>\n<p><span class=\"filename\">.eslintrc.json</span>というファイルをプロジェクト内に設置してあげてください。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/04/vscode-wordpress5.png\" alt=\"\" width=\"224\" height=\"174\" class=\"alignnone size-full wp-image-5215\" /></p>\n<p>公式 → <a href=\"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint\" rel=\"noopener noreferrer\" target=\"_blank\">https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint</a></p>\n<h4>保存時にチェックが走るようにする</h4>\n<p>デフォルトの設定では、コマンドを打たないとチェックしてくれません。以下の設定を<code>true</code>で上書きして保存のタイミングでチェックしてもらえるようにしましょう。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-5\">コピー</span><code id=\"code-5\" class=\"txt\">\"eslint.autoFixOnSave\": true,</code></pre>\n<h2><span id=\"i-2\">おわり</span></h2><div class=\"matome\"><div class=\"matome-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"></div><div class=\"matome-twitter\"><a href=\"https://twitter.com/haniwa008?ref_src=twsrc%5Etfw\" class=\"twitter-follow-button\" data-show-screen-name=\"false\" data-size=\"large\" data-lang=\"ja\" data-show-count=\"true\">Follow @haniwa008</a><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></div></div><!-- /matome -->\n<p>VSCodeでWordPress開発するための拡張機能とおすすめの設定でした。</p>\n<p>ほぼチェック機能ですが、作業しながらチェックしてくれる環境は、めちゃくちゃなコード書きがちな自分にとってはありがたいです。</p>\n<p>VSCodeは、ターミナルが使いやすいのがいいですよね。GUIとCLIがちょうどいいバランスで使えてる気がします。ほんとおすすめのエディタです！</p>\n<p>まだまだ使い始めたばかりですので、他にも便利な機能見つけたら追記していきます。</p>\n","date":"April 01, 2018","categories":[{"name":"環境","slug":"setting"}],"tags":[{"name":"VSCode","slug":"vscode"}],"author":{"name":"はにわまん","slug":"haniwaman"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"7f908d02-64d0-569e-bda9-91d01d5a3e4b"}}}