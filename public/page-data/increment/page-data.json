{"componentChunkName":"component---src-templates-post-js","path":"/increment/","result":{"data":{"wordpressPost":{"id":"25f96bfc-e79a-5542-a4f1-5b37aace6de7","title":"CSSで変数っぽく使えるインクリメント変数で連番がスマートに！","slug":"increment","content":"<p>CSSは基本的に変数は使えませんが、<strong class=\"marker\">連番を表現するときは動的に順番の「値（数字）」を取得してくれる</strong>関数？値？が用意されています。</p>\n<p>よくあるのは、ブログとかのランキングで「○位」みたいな指定をするときでしょうか。動的に順番を取得してくれるので、各要素に依存しません。要素を入れ替えても順番は変わらないので、運用上とても楽になります。</p>\n<p>こんな感じでカードの左上とかに載せたデザインを見たことがあるかもしれません。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/01/increment-700x460.png\" alt=\"\" class=\"alignnone size-medium wp-image-12304\" srcset=\"https://haniwaman.com/wp-content/uploads/2019/01/increment-700x460.png 700w, https://haniwaman.com/wp-content/uploads/2019/01/increment-768x505.png 768w, https://haniwaman.com/wp-content/uploads/2019/01/increment-1200x788.png 1200w, https://haniwaman.com/wp-content/uploads/2019/01/increment.png 1516w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<p>使う頻度が高いというわけではありません。たまーに出てくるって感じですね・・・。覚えておくと、ちょっと<strong class=\"marker\">運用を意識した楽なCSSコーディングができるようになる</strong>と思いますので、「こういった書き方もあるんだ」という感じで頭の片隅に残していただければと思います。</p>\n<div class=\"chat\"><figure class=\"chat-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"><figcaption>はにわまん</figcaption></figure><div class=\"chat-content\">CSSは知れば知るほど、書き方の選択肢が広がります！</div></div>\n<div id=\"toc_container\" class=\"no_bullets\"><p class=\"toc_title\">目次</p><ul class=\"toc_list\"><li><a href=\"#CSS\"><span class=\"toc_number toc_depth_1\">1</span> CSSのインクリメント変数の使い方</a></li><li><a href=\"#CSS-2\"><span class=\"toc_number toc_depth_1\">2</span> CSSのインクリメント変数を使うメリット</a><ul><li><a href=\"#i\"><span class=\"toc_number toc_depth_2\">2.1</span> 運用が要素の入れ替え（増減）だけになる</a></li><li><a href=\"#i-2\"><span class=\"toc_number toc_depth_2\">2.2</span> コード量が少なくて済む</a></li></ul></li><li><a href=\"#i-3\"><span class=\"toc_number toc_depth_1\">3</span> 増加の幅は指定できる</a></li><li><a href=\"#i-4\"><span class=\"toc_number toc_depth_1\">4</span> カウンターには値を足せる</a></li><li><a href=\"#i-5\"><span class=\"toc_number toc_depth_1\">5</span> おわり</a></li></ul></div>\n<h2><span id=\"CSS\">CSSのインクリメント変数の使い方</span></h2>\n<p>インクリメントさせるには2つの書き方を使います。</p>\n<p><code>counter-increment: number;</code>と<code>content: counter(number);</code>をセットで使います。<code>number</code>については、共通で使えばどんな値にしても大丈夫です。分かり安い変数名を使うといいかと思います。</p>\n<div class=\"demo\">DEMO（デモ）</div>\n<nav class=\"increment\">\n<ol>\n<li><a href=\"#\">ホーム</a></li>\n<li><a href=\"#\">お知らせ</a></li>\n<li><a href=\"#\">ブログ</a></li>\n<li><a href=\"#\">当サイトについて</a></li>\n<li><a href=\"#\">お問い合わせ</a></li>\n</ol>\n</nav>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-0\">コピー</span><code id=\"code-0\" class=\"html\">&lt;nav class=\"increment\"&gt;\r\n  &lt;ol&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;ホーム&lt;/a&gt;&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;お知らせ&lt;/a&gt;&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;ブログ&lt;/a&gt;&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;当サイトについて&lt;/a&gt;&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;お問い合わせ&lt;/a&gt;&lt;/li&gt;\r\n  &lt;/ol&gt;\r\n&lt;/nav&gt;</code></pre>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-1\">コピー</span><code id=\"code-1\" class=\"css\">.increment ol {\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n.increment ol li {\r\n  counter-increment: number;\r\n}\r\n.increment ol li a {\r\n  position: relative;\r\n  display: block;\r\n  padding: 4px 8px 4px 40px;\r\n  text-decoration: none;\r\n  background: #fff;\r\n  color: #333;\r\n  margin: 4px 0;\r\n}\r\n.increment ol li a::after {\r\n  content: counter(number);\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 0;\r\n  transform: translateY(-50%);\r\n  min-width: 32px;\r\n  height: 32px;\r\n  line-height: 32px; \r\n  background: #F44336;\r\n  padding: 0 8px;\r\n  color: #fff;\r\n  text-align: center;\r\n}</code></pre>\n<p>インクリメント（増減）させる要素に対して、<code>counter-increment: number;</code>を付けます。ここでは、<code>li</code>要素に対して当てています。</p>\n<p>そして、<code>::beofre</code>または<code>::after</code>で指定する<code>content</code>に対して、<code>counter(number)</code>という形で、<code>li</code>に指定した変数<code>numbar</code>を指定してあげる形になります。</p>\n<h2><span id=\"CSS-2\">CSSのインクリメント変数を使うメリット</span></h2>\n<p>CSSのインクリメント変数を使うメリットは2つあります。１つ目は、<strong>CSSを変更せずに要素の入れ替えだけの運用にできるから楽</strong>、２つ目は、<strong>コード量が少なくて済む</strong>、ということです。それぞれもう少し詳しく見ていきます。</p>\n<h3><span id=\"i\">運用が要素の入れ替え（増減）だけになる</span></h3>\n<p>例えば先ほど書いたリストの「お知らせ」を後ろから2番目に変えるとします。<code>li</code>要素をそのままコピペして移動しただけですが、連番の表示は何も変わらず表示できていることが分かります。<br />\n※ CSSは何も編集していません。</p>\n<div class=\"demo\">DEMO（デモ）</div>\n<nav class=\"increment\">\n<ol>\n<li><a href=\"#\">ホーム</a></li>\n<li><a href=\"#\">ブログ</a></li>\n<li><a href=\"#\">当サイトについて</a></li>\n<li><a href=\"#\">お知らせ</a></li>\n<li><a href=\"#\">お問い合わせ</a></li>\n</ol>\n</nav>\n<h3><span id=\"i-2\">コード量が少なくて済む</span></h3>\n<p>そして、もう1つ。実は、<code>nth-child</code>などを使えば、同様に実現は可能です。ただし、コード量はインクリメント変数を使う要理も多くなってしまい、見づらいです。</p>\n<p><code>nth-child</code>で表現する場合は、以下を追加します。<strong class=\"marker\">だいぶ冗長な感じ</strong>がしません。今は5つまでだからいいかもしれませんが、もし100件とかまで要素を作るってなったら、同じようなのを100個書かないといけません。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-2\">コピー</span><code id=\"code-2\" class=\"css\">.increment ol li:nth-child(1) a::after {\r\n\tcontent: \"1\";\r\n}\r\n\r\n.increment ol li:nth-child(2) a::after {\r\n\tcontent: \"2\";\r\n}\r\n\r\n.increment ol li:nth-child(3) a::after {\r\n\tcontent: \"3\";\r\n}\r\n\r\n.increment ol li:nth-child(4) a::after {\r\n\tcontent: \"4\";\r\n}\r\n\r\n.increment ol li:nth-child(5) a::after {\r\n\tcontent: \"5\";\r\n}</code></pre>\n<h2><span id=\"i-3\">増加の幅は指定できる</span></h2>\n<p><code>counter-increment: number;</code>という記載は、デフォルトで<strong class=\"marker\">１ずつ増える</strong>という記載方法になります。この増加の値は変更することができて、例えば10ずつ増やしたいってなったら<code>counter-increment: number 10;</code>のように変数のあとにスペースで区切って増加させる値を数字で入力してあげてください。</p>\n<p>以下は、10ずつ増加する例です。</p>\n<div class=\"demo\">DEMO（デモ）</div>\n<nav class=\"increment10\">\n<ol>\n<li><a href=\"#\">ホーム</a></li>\n<li><a href=\"#\">ブログ</a></li>\n<li><a href=\"#\">当サイトについて</a></li>\n<li><a href=\"#\">お知らせ</a></li>\n<li><a href=\"#\">お問い合わせ</a></li>\n</ol>\n</nav>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-3\">コピー</span><code id=\"code-3\" class=\"css\">.increment ol {\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n.increment ol li {\r\n  counter-increment: number 10;\r\n}\r\n.increment ol li a {\r\n  position: relative;\r\n  display: block;\r\n  padding: 4px 8px 4px 40px;\r\n  text-decoration: none;\r\n  background: #fff;\r\n  color: #333;\r\n  margin: 4px 0;\r\n}\r\n.increment ol li a::after {\r\n  content: counter(number);\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 0;\r\n  transform: translateY(-50%);\r\n  min-width: 32px;\r\n  height: 32px;\r\n  line-height: 32px; \r\n  background: #F44336;\r\n  padding: 0 8px;\r\n  color: #fff;\r\n  text-align: center;\r\n}</code></pre>\n<h2><span id=\"i-4\">カウンターには値を足せる</span></h2>\n<p>数字の連番でデモしてきましたが、数字だけじゃなくて任意の数字を付けて表示させることも可能です。</p>\n<p>例えば、「No.」という値を付けてインクリメント変数を表示させるとします。<code>content: \"No.\" counter(number);</code>のような感じで、くっつけたい値をそのまま記載するだけでOKです！</p>\n<div class=\"demo\">DEMO（デモ）</div>\n<nav class=\"increment-no\">\n<ol>\n<li><a href=\"#\">ホーム</a></li>\n<li><a href=\"#\">ブログ</a></li>\n<li><a href=\"#\">当サイトについて</a></li>\n<li><a href=\"#\">お知らせ</a></li>\n<li><a href=\"#\">お問い合わせ</a></li>\n</ol>\n</nav>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-4\">コピー</span><code id=\"code-4\" class=\"html\">&lt;nav class=\"increment-no\"&gt;\r\n  &lt;ol&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;ホーム&lt;/a&gt;&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;ブログ&lt;/a&gt;&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;当サイトについて&lt;/a&gt;&lt;/li&gt;\r\n\t\t&lt;li&gt;&lt;a href=\"#\"&gt;お知らせ&lt;/a&gt;&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;お問い合わせ&lt;/a&gt;&lt;/li&gt;\r\n  &lt;/ol&gt;\r\n&lt;/nav&gt;</code></pre>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-5\">コピー</span><code id=\"code-5\" class=\"css\">.increment-no ol {\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n.increment-no ol li {\r\n  counter-increment: number;\r\n}\r\n.increment-no ol li a {\r\n  position: relative;\r\n  display: block;\r\n  padding: 4px 8px 4px 62px;\r\n  text-decoration: none;\r\n  background: #fff;\r\n  color: #333;\r\n  margin: 4px 0;\r\n}\r\n.increment-no ol li a::after {\r\n  content: \"No.\" counter(number);\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 0;\r\n  transform: translateY(-50%);\r\n  min-width: 32px;\r\n  height: 32px;\r\n  line-height: 32px; \r\n  background: #F44336;\r\n  padding: 0 8px;\r\n  color: #fff;\r\n  text-align: center;\r\n}</code></pre>\n<h2><span id=\"i-5\">おわり</span></h2><div class=\"matome\"><div class=\"matome-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"></div><div class=\"matome-twitter\"><a href=\"https://twitter.com/haniwa008?ref_src=twsrc%5Etfw\" class=\"twitter-follow-button\" data-show-screen-name=\"false\" data-size=\"large\" data-lang=\"ja\" data-show-count=\"true\">Follow @haniwa008</a><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></div></div><!-- /matome -->\n<p>CSSで使える珍しい変数の紹介でした。インクリメント変数が使えると、<strong class=\"marker\">なんかスマート</strong>だなって気がします。</p>\n<p>そんな使用頻度が多くないですが、「あ、なんか連番振られてデザインされてるな」って案件があれば、この記事を思い出して使ってみてください！</p>\n","date":"January 10, 2019","categories":[{"name":"CSS","slug":"css"}],"tags":null,"author":{"name":"はにわまん","slug":"haniwaman"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"25f96bfc-e79a-5542-a4f1-5b37aace6de7"}}}