{"componentChunkName":"component---src-templates-post-js","path":"/css-modal-drawer/","result":{"data":{"wordpressPost":{"id":"55eb9b67-955d-57a9-832a-80b8866b0aef","title":"ドロワーやモーダルをCSSだけで実現する方法","slug":"css-modal-drawer","content":"<p>ドロワーやモーダルといった、いかにもクリックアクションをJavaScriptで操作している系の動きも実はCSSだけで実現できたりします。</p>\n<p>仕組みの大枠としては、以下の3つを組み合わせる感じです。</p>\n<div class=\"box\">\n<ul>\n<li>チェックボックにあるチェックされた時のスタイルを適応できる<code>:checked</code></li>\n<li>クリック要素（チェックボックスのon/off）として使う<code>for</code>属性</li>\n<li>アニメーションを制御できる<code>transition</code></li>\n</ul>\n</div>\n<p>アニメーションの指定方法を見直すいい機会にもなるかと思うので、コピペするだけでなく実際にご自身で1から書いてみることもおすすめします！</p>\n<div class=\"chat\"><figure class=\"chat-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"><figcaption>はにわまん</figcaption></figure><div class=\"chat-content\">この記事にあるアコーディオンアイコンは全部クリックできるので試してみてね！</div></div>\n<div id=\"toc_container\" class=\"no_bullets\"><p class=\"toc_title\">目次</p><ul class=\"toc_list\"><li><a href=\"#CSS\"><span class=\"toc_number toc_depth_1\">1</span> 事前学習：チェックボックスCSSの理解</a><ul><li><a href=\"#on_offCSS\"><span class=\"toc_number toc_depth_2\">1.1</span> チェックボックのon / offのCSS上での動き</a></li></ul></li><li><a href=\"#i\"><span class=\"toc_number toc_depth_1\">2</span> ドロワーを作ってみよう！</a><ul><li><a href=\"#i-2\"><span class=\"toc_number toc_depth_2\">2.1</span> とりあえず完成品をドカッと貼る</a></li><li><a href=\"#i-3\"><span class=\"toc_number toc_depth_2\">2.2</span> ハンバーガーとバツが切り替わるハンバーガーアイコンを作る</a></li><li><a href=\"#i-4\"><span class=\"toc_number toc_depth_2\">2.3</span> ドロワーのコンテンツエリアを作る</a></li><li><a href=\"#i-5\"><span class=\"toc_number toc_depth_2\">2.4</span> ドロワー以外の部分をクリックで閉じるようにする</a></li><li><a href=\"#onoff\"><span class=\"toc_number toc_depth_2\">2.5</span> on/offの要素はいくつでも作成可能</a></li></ul></li><li><a href=\"#CSS-2\"><span class=\"toc_number toc_depth_1\">3</span> モーダルをCSSで作る</a></li><li><a href=\"#i-6\"><span class=\"toc_number toc_depth_1\">4</span> おわり</a></li></ul></div>\n<h2><span id=\"CSS\">事前学習：チェックボックスCSSの理解</span></h2>\n<p>CSSでのクリック操作において、<strong class=\"marker\">チェックボックスのon / off の理解が不可欠</strong>になります。まずは、チェックボックスを理解していきましょう！（遠回りに見えますが、ちゃんと理解するためには必要な前提知識です&#8230;）</p>\n<h3><span id=\"on_offCSS\">チェックボックのon / offのCSS上での動き</span></h3>\n<p>それでは、早速チェックボックスを書いていきましょう（※ わたしのチェックボックス表示はカスタマイズされてるので見栄えがデフォルトではないですが&#8230;）</p>\n<p>（クリックしてみてください！）<br />\n<label><input id=\"my-checkbox\" type=\"checkbox\"><span>チェックしてみて！</span></label></p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-0\">コピー</span><code id=\"code-0\" class=\"html\">&lt;label&gt;&lt;input id=\"my-checkbox\" type=\"checkbox\"&gt;&lt;span&gt;チェックしてみて！&lt;/span&gt;&lt;/label&gt;\r\n</code></pre>\n<h4>チェックされた時の文字色を変えてみる</h4>\n<p>チェックされた時の動きを制御するには、擬似クラスの「<code>:checked</code>」を使います。実際にチェックされた時に文字色を変えてみましょう。</p>\n<p>（クリックしてみてください！）<br />\n<label><input id=\"my-checkbox-color\" type=\"checkbox\"><span>チェックしてみて！</span></label></p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-1\">コピー</span><code id=\"code-1\" class=\"css\">#my-checkbox:checked span {\r\n\tcolor: #F4511E;\r\n}</code></pre>\n<p>この<code>:checked</code>がon / offの役割を果たすことになります。jQueryなどで言うところの、<code>onClick</code>と同様の動きをCSSで実現できるということですね。</p>\n<h4>チェックボックスとシンクロさせる「for」属性</h4>\n<p>ドロワーやモーダルを開くのに、チェックボックが表示されていたらダサいですよね（そもそもそんなデザインを見たことがない&#8230;）</p>\n<p><strong class=\"marker\">チェックボックのon / off をチェックボックスの箇所じゃなくても別要素から動作させられる</strong>記述があります。それが<code>for=\"id-name\"</code>。forに対象のチェックボックのidを指定してあげます。</p>\n<p><input id=\"my-checkbox-for\" type=\"checkbox\"><span>こっちは機能しません</span></p>\n<p style=\"margin-top: 12px;\"><label for=\"my-checkbox-for\" style=\"box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.16); display: inline-block; padding: 12px; border: 1px solid #F4511E; cursor: pointer; margin-top: 12px;\">このエリアをクリックすると上がチェックされます！</label><br />\n（上部のエリアをクリックしてみてください！）</p>\n<p>ここまで扱えるようになれば、チェックボックスの事前学習は終了です！</p>\n<div class=\"box\">\n<ul>\n<li>チェックボックス自体は非表示にして</li>\n<li><code>for</code>の要素をハンバーガーメニューや閉じるための要素に当てる</li>\n</ul>\n</div>\n<p>という流れで作っていく感じになります。</p>\n<h2><span id=\"i\">ドロワーを作ってみよう！</span></h2>\n<p>では、事前学習で学んだ<code>:checked</code>を使ってドロワーメニューを作っていきましょう！</p>\n<h3><span id=\"i-2\">とりあえず完成品をドカッと貼る</span></h3>\n<p>まず完成した動くコードを貼ります。その後に個別に解説していく流れで進めていきます。</p>\n<p>（クリックしてみてください！）</p>\n<div><input id=\"drawer-checkbox4\" type=\"checkbox\"><label id=\"drawer-icon4\" for=\"drawer-checkbox4\"><span></span></label><label id=\"drawer-close4\" for=\"drawer-checkbox4\"></label><span id=\"drawer-content4\">ここがドロワーとして出てくる部分です。</span></div>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-2\">コピー</span><code id=\"code-2\" class=\"html\">&lt;input id=\"drawer-checkbox\" type=\"checkbox\"&gt;\r\n&lt;label id=\"drawer-icon\" for=\"drawer-checkbox\"&gt;&lt;span&gt;&lt;/span&gt;&lt;/label&gt;\r\n&lt;label id=\"drawer-close\" for=\"drawer-checkbox\"&gt;&lt;/label&gt;\r\n&lt;div id=\"drawer-content\"&gt;ここがドロワーとして出てくる部分です。&lt;/div&gt;</code></pre>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-3\">コピー</span><code id=\"code-3\" class=\"css\">#drawer-checkbox {\r\n  display: none;\r\n}\r\n#drawer-icon {\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  height: 50px;\r\n  position: relative;\r\n  width: 50px;\r\n}\r\n#drawer-icon span {\r\n  background:  #333;\r\n  border-radius: 4px;\r\n  display: block;\r\n  height: 16%;\r\n  left: 50%;\r\n  margin: -8% 0 0 -42%;\r\n  position: absolute;\r\n  top: 50%;\r\n  transition: all 0.3s ease-in-out;\r\n  width: 84%;\r\n}\r\n#drawer-icon span::before,\r\n#drawer-icon span::after {\r\n  -webkit-transform: rotate(0);\r\n  background: #333;\r\n  border-radius: 4px;\r\n  content: \"\";\r\n  display: block;\r\n  height: 100%;\r\n  left: 50%;\r\n  margin: -8% 0 0 -50%;\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: rotate(0);\r\n  transition: all 0.3s ease-in-out;\r\n  width: 100%;\r\n}\r\n#drawer-icon span::before {\r\n  margin-top: -38%;\r\n}\r\n#drawer-icon span::after {\r\n  margin-top: 19%;\r\n}\r\n#drawer-checkbox:checked ~ #drawer-icon span {\r\n  background: rgba(51, 51, 51, 0);\r\n}\r\n#drawer-checkbox:checked ~ #drawer-icon span::before,\r\n#drawer-checkbox:checked ~ #drawer-icon span::after {\r\n  content: \"\";\r\n  display: block;\r\n  height: 100%;\r\n  left: 50%;\r\n  margin: -8% 0 0 -42%;\r\n  position: absolute;\r\n  top: 50%;\r\n  width: 100%;\r\n}\r\n#drawer-checkbox:checked ~ #drawer-icon span::before {\r\n  -webkit-transform: rotate(-45deg);\r\n          transform: rotate(-45deg);\r\n}\r\n#drawer-checkbox:checked ~ #drawer-icon span::after {\r\n  -webkit-transform: rotate(45deg);\r\n          transform: rotate(45deg);\r\n}\r\n#drawer-content {\r\n  overflow: auto;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 40;\r\n  width: 250px;\r\n  max-width: 90%;\r\n  height: 100%;\r\n  background: #fff;\r\n  transition: all 0.3s ease-in-out 0s;\r\n  transform: translateX(-100%);\r\n}\r\n#drawer-checkbox:checked ~ #drawer-content {\r\n  transform: translateX(0);\r\n  box-shadow: 6px 0 25px rgba(0, 0, 0, 0.16);\r\n}\r\n\r\n#drawer-close {\r\n  display: none;\r\n  position: fixed;\r\n  z-index: 39;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: #000;\r\n  opacity: 0;\r\n  transition: all 0.3s ease-in-out 0s;\r\n}\r\n#drawer-checkbox:checked ~ #drawer-close {\r\n  display: block;\r\n  opacity: 0.3;\r\n}</code></pre>\n<p>ドロワーを構成する要素は大きく2つですね。「<strong>ハンバーガーアイコン</strong>」とハンバーガーアイコンを押した時に表示される「<strong>ドロワーのエリア</strong>」。それぞれのパーツを小分けして見ていきましょう。</p>\n<h3><span id=\"i-3\">ハンバーガーとバツが切り替わるハンバーガーアイコンを作る</span></h3>\n<p>手前味噌で恐縮ですが、以下のハンバーガーアイコンを使いました。こちらも<code>:checked</code>の仕組みで動いているものなので、そのまま使えそうです。</p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"Mxmu4xjDBF\"><p><a href=\"https://haniwaman.com/parts/parts-7171/\">「ハンバーガー」アイコンをクリックしたら「バツ」アイコンにアニメーションする CSS</a></p></blockquote>\n<p><iframe title=\"&#8220;「ハンバーガー」アイコンをクリックしたら「バツ」アイコンにアニメーションする CSS&#8221; &#8212; コピペで簡単！Webパーツ屋\" class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" src=\"https://haniwaman.com/parts/parts-7171/embed/#?secret=Mxmu4xjDBF\" data-secret=\"Mxmu4xjDBF\" width=\"500\" height=\"282\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></p>\n<p>（クリックしてみてください！）<br />\n<input id=\"drawer-checkbox\" type=\"checkbox\"><label id=\"drawer-icon\" for=\"drawer-checkbox\"><span></span></label></p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-4\">コピー</span><code id=\"code-4\" class=\"html\">&lt;input id=\"drawer-checkbox\" type=\"checkbox\"&gt;\r\n&lt;label id=\"drawer-icon\" for=drawer-checkbox\"&gt;&lt;span&gt;&lt;/span&gt;&lt;/label&gt;</code></pre>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-5\">コピー</span><code id=\"code-5\" class=\"css\">#drawer-checkbox {\r\n  display: none;\r\n}\r\n#drawer-icon {\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  height: 50px;\r\n  position: relative;\r\n  width: 50px;\r\n}\r\n\r\n#drawer-icon span {\r\n  background:  #333;\r\n  border-radius: 4px;\r\n  display: block;\r\n  height: 16%;\r\n  left: 50%;\r\n  margin: -8% 0 0 -42%;\r\n  position: absolute;\r\n  top: 50%;\r\n  transition: all 0.3s ease-in-out 0s;\r\n  width: 84%;\r\n}\r\n#drawer-icon span::before,\r\n#drawer-icon span::after {\r\n  -webkit-transform: rotate(0);\r\n  background: #333;\r\n  border-radius: 4px;\r\n  content: \"\";\r\n  display: block;\r\n  height: 100%;\r\n  left: 50%;\r\n  margin: -8% 0 0 -50%;\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: rotate(0);\r\n  transition: all 0.3s ease-in-out;\r\n  width: 100%;\r\n}\r\n#drawer-icon span::before {\r\n  margin-top: -38%;\r\n}\r\n#drawer-icon span::after {\r\n  margin-top: 19%;\r\n}\r\n#drawer-checkbox:checked ~ #drawer-icon span {\r\n  background: rgba(51, 51, 51, 0);\r\n}\r\n#drawer-checkbox:checked ~ #drawer-icon span::before,\r\n#drawer-checkbox:checked ~ #drawer-icon span::after {\r\n  content: \"\";\r\n  display: block;\r\n  height: 100%;\r\n  left: 50%;\r\n  margin: -8% 0 0 -42%;\r\n  position: absolute;\r\n  top: 50%;\r\n  width: 100%;\r\n}\r\n#drawer-checkbox:checked ~ #drawer-icon span::before {\r\n  -webkit-transform: rotate(-45deg);\r\n          transform: rotate(-45deg);\r\n}\r\n#drawer-checkbox:checked ~ #drawer-icon span::after {\r\n  -webkit-transform: rotate(45deg);\r\n          transform: rotate(45deg);\r\n}\r\n</code></pre>\n<p>いきなり難しくなったように感じる方もいるかもしれません&#8230;。</p>\n<p>言葉でザックリ解説すると、、、</p>\n<div class=\"box\">\n<ol>\n<li>チェックボックスは非表示にする</li>\n<li><code>for</code>の要素のチェックが押されていない状態をハンバーガーアイコンにして、</li>\n<li>チェックが押された状態をバツアイコンにする</li>\n</ol>\n</div>\n<p>という処理を行っています。</p>\n<p>アイコンの実態は<code>&lt;span&gt;&lt;/span&gt;</code>に擬似要素の<code>before</code>、<code>after</code>をするだけで実現させています。</p>\n<p>滑らかにバツのアイコンに移行しているのは、<code>transition: all 0.3s ease-in-out;</code>を仕込んでいるからですね。ドロワーメニューやモーダルをCSSで表現する際には絶対に理解しておかなければならないアニメーションプロパティなので、理解していない方は以下の記事を参考に使えるようにしてください！</p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"iN7IHsFLgj\"><p><a href=\"https://haniwaman.com/css-transition/\">移ろいゆくアニメーションを表現するCSS「transition」について解説</a></p></blockquote>\n<p><iframe title=\"&#8220;移ろいゆくアニメーションを表現するCSS「transition」について解説&#8221; &#8212; HPcode\" class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" src=\"https://haniwaman.com/css-transition/embed/#?secret=iN7IHsFLgj\" data-secret=\"iN7IHsFLgj\" width=\"500\" height=\"282\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></p>\n<h3><span id=\"i-4\">ドロワーのコンテンツエリアを作る</span></h3>\n<p>横からニューって出てくるドロワーの本体（？）も作っていきましょう。ハンバーガーアイコンの動きが完璧に理解できている方なら、おおよその作りもイメージできるかもしれません。</p>\n<p>（クリックしてみてください！）</p>\n<div><input id=\"drawer-checkbox2\" type=\"checkbox\"><label id=\"drawer-icon2\" for=\"drawer-checkbox2\"><span></span></label><span id=\"drawer-content2\">ここがドロワーとして出てくる部分です。</span></div>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-6\">コピー</span><code id=\"code-6\" class=\"html\">&lt;input id=\"drawer-checkbox\" type=\"checkbox\"&gt;\r\n&lt;label id=\"drawer-icon\" for=\"drawer-checkbox\"&gt;&lt;span&gt;&lt;/span&gt;&lt;/label&gt;\r\n&lt;div id=\"drawer-content\"&gt;ここがドロワーとして出てくる部分です。&lt;/div&gt;</code></pre>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-7\">コピー</span><code id=\"code-7\" class=\"css\">#drawer-content {\r\n\toverflow: auto;\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\tz-index: 40;\r\n\twidth: 250px;\r\n\tmax-width: 90%;\r\n\theight: 100%;\r\n\tbackground: #fff;\r\n\ttransition: all 0.3s ease-in-out 0s;\r\n\ttransform: translateX(-100%);\r\n}\r\n#drawer-checkbox:checked ~ #drawer-content {\r\n\ttransform: translateX(0);\r\n\tbox-shadow: 6px 0 24px rgba(0, 0, 0, 0.16);\r\n}</code></pre>\n<h3><span id=\"i-5\">ドロワー以外の部分をクリックで閉じるようにする</span></h3>\n<p>ついでにドロワー以外の部分をクリックしたら閉じるようにしてみましょう。この辺を入れるか入れないかはサイトの設計によるかと思いますが。</p>\n<p>以下のようにもう1つ<code>:checked</code>のon/offとシンクロさせるための<code>for</code>のラベルを追加してあげます。</p>\n<p>（クリックしてみてください！）</p>\n<div><input id=\"drawer-checkbox3\" type=\"checkbox\"><label id=\"drawer-icon3\" for=\"drawer-checkbox3\"><span></span></label><label id=\"drawer-close3\" for=\"drawer-checkbox3\"></label><span id=\"drawer-content3\">ここがドロワーとして出てくる部分です。</span></div>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-2\">コピー</span><code id=\"code-2\" class=\"html\">&lt;input id=\"drawer-checkbox\" type=\"checkbox\"&gt;\r\n&lt;label id=\"drawer-icon\" for=\"drawer-checkbox\"&gt;&lt;span&gt;&lt;/span&gt;&lt;/label&gt;\r\n&lt;label id=\"drawer-close\" for=\"drawer-checkbox\"&gt;&lt;/label&gt;\r\n&lt;div id=\"drawer-content\"&gt;ここがドロワーとして出てくる部分です。&lt;/div&gt;</code></pre>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-9\">コピー</span><code id=\"code-9\" class=\"css\">#drawer-close {\r\n\tdisplay: none;\r\n\tposition: fixed;\r\n\tz-index: 39;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground: #000;\r\n\topacity: 0;\r\n\ttransition: all 0.3s ease-in-out 0s;\r\n}\r\n#drawer-checkbox:checked ~ #drawer-close {\r\n\tdisplay: block;\r\n\topacity: 0.3;\r\n}</code></pre>\n<p>ポイントは、ドロワーのコンテンツアイテムよりも、<code>#drawer-close</code>の<code>z-index</code>を小さく設定することです。<code>z-index</code>だけの並びで見てみると、以下のようになります。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-10\">コピー</span><code id=\"code-10\" class=\"css\">#drawer-content {\r\n\tz-index: 40;\r\n}\r\n#drawer-close {\r\n\tz-index: 39;\r\n}</code></pre>\n<p>この上下関係を逆にしてしまうと、ドロワーのコンテンツ部分も覆われてしまうことになるので、<code>z-index</code>の値は意識して決めましょう！</p>\n<h3><span id=\"onoff\">on/offの要素はいくつでも作成可能</span></h3>\n<p>今までで、ハンバーガーアイコンと、全体を覆うクローズエリアの2つのon / offを扱うエリアができました。復習すると、チェックボックスをチェックさせるための要素をforで指定することで作れる仕組みだったと思います。</p>\n<p>ハンバーガーと全体覆うためのクローズエリアだけのHTMLにすると以下のとおりです。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-11\">コピー</span><code id=\"code-11\" class=\"html\">&lt;input id=\"drawer-checkbox\" type=\"checkbox\"&gt;\r\n&lt;label id=\"drawer-icon\" for=\"drawer-checkbox\"&gt;&lt;span&gt;&lt;/span&gt;&lt;/label&gt;\r\n&lt;label id=\"drawer-close\" for=\"drawer-checkbox\"&gt;&lt;/label&gt;</code></pre>\n<p>2つともチェックボックスの<code>id=\"drawer-checkbox\"</code>を<code>for</code>で指し示していることが分かります。このon / offの要素ですが、いくつでも作ることができます。</p>\n<p>例えば、ドロワーメニュー内の下に閉じるボタンを追加したくなったときも<code>for=\"drawer-checkbox\"</code>の要素を作れば簡単に追加できるわけですね。<strong class=\"marker\">意外と柔軟性があって、使い勝手いいドロワーメニュー</strong>だと思います。</p>\n<p>ドロワーの中に「閉じる」ボタンを追加してみた例です。<br />\n（クリックしてみてください！）</p>\n<div><input id=\"drawer-checkbox5\" type=\"checkbox\"><label id=\"drawer-icon5\" for=\"drawer-checkbox5\"><span></span></label><label id=\"drawer-close5\" for=\"drawer-checkbox5\"></label><span id=\"drawer-content5\">ここがドロワーとして出てくる部分です。<label for=\"drawer-checkbox5\" class=\"btn\">閉じる</label></span></div>\n<h2><span id=\"CSS-2\">モーダルをCSSで作る</span></h2>\n<p>ドロワーがCSSで作れるようになったらモーダルはめっちゃ簡単です。仕組みとては、<code>:cheked</code>で表示/非表示を切り替えるだけなのでドロワーの作り方と全く同じです。</p>\n<p>細かな説明はドロワーの方を見てもらうとして、早速つくってみます。</p>\n<p>（クリックしてみてください！）</p>\n<div><input id=\"modal-checkbox\" type=\"checkbox\"><label id=\"modal-open\" for=\"modal-checkbox\" class=\"btn\">モーダルを開く</label><label id=\"modal-close\" for=\"modal-checkbox\"></label><span id=\"modal-content\">ここがモーダルとして表示される部分です。</span></div>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-12\">コピー</span><code id=\"code-12\" class=\"html\">&lt;input id=\"modal-checkbox\" type=\"checkbox\"&gt;\r\n&lt;label id=\"modal-open\" for=\"modal-checkbox\"&gt;モーダルを開く&lt;/label&gt;\r\n&lt;label id=\"modal-close\" for=\"modal-checkbox\"&gt;&lt;/label&gt;\r\n&lt;div id=\"modal-content\"&gt;ここがモーダルとして表示される部分です。&lt;/div&gt;\r\n</code></pre>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-13\">コピー</span><code id=\"code-13\" class=\"css\">#modal-checkbox {\r\n  display: none;\r\n}\r\n#modal-open {\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  position: relative;\r\n}\r\n#modal-content {\r\n  overflow: auto;\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  z-index: 40;\r\n  background: #fff;\r\n  transition: all 0.3s ease-in-out 0s;\r\n  transform: translate(-50%, -50%);\r\n  opacity: 0;\r\n  box-shadow: 0 0 24px rgba(0, 0, 0, 0.16);\r\n  padding: 1em;\r\n}\r\n#modal-checkbox:checked ~ #modal-content {\r\n  opacity: 1;\r\n}\r\n#modal-close {\r\n  display: none;\r\n  position: fixed;\r\n  z-index: 39;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: #000;\r\n  opacity: 0;\r\n  transition: all 0.3s ease-in-out 0s;\r\n}\r\n#modal-checkbox:checked ~ #modal-close {\r\n  display: block;\r\n  opacity: 0.6;\r\n}</code></pre>\n<p>ドロワーと<code>:checked</code>の時の表示のさせ方を変えているだけです。モーダルでは、画面全体の中央に<code>opacity: 0;</code>から<code>opacity: 1;</code>で表示させるというやり方です。</p>\n<h2><span id=\"i-6\">おわり</span></h2><div class=\"matome\"><div class=\"matome-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"></div><div class=\"matome-twitter\"><a href=\"https://twitter.com/haniwa008?ref_src=twsrc%5Etfw\" class=\"twitter-follow-button\" data-show-screen-name=\"false\" data-size=\"large\" data-lang=\"ja\" data-show-count=\"true\">Follow @haniwa008</a><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></div></div><!-- /matome -->\n<p>CSSでドロワーとモーダルを実現する方法でした。この作り方が分かっていたら、jQueryなどのドロワー系のプラグイン等を使わなくても簡単に作成することができると思います。</p>\n<p>閉じるボタンも好きなだけ増やせますし、CSSのスキル次第で色んなカスタマイズができるはずです。</p>\n<p>ぜひ、チェックボックスの<code>:checked</code>を覚えて自由自在にドロワーやモーダルを操ってみましょう！</p>\n","date":"December 11, 2018","categories":[{"name":"CSS","slug":"css"}],"tags":null,"author":{"name":"はにわまん","slug":"haniwaman"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"55eb9b67-955d-57a9-832a-80b8866b0aef"}}}