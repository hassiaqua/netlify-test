{"componentChunkName":"component---src-templates-post-js","path":"/on-off/","result":{"data":{"wordpressPost":{"id":"75be1a53-e0bb-5c49-9ca1-08fbea375e4b","title":"要素をクリックした時の処理をjQueryで制御する方法【on / off】","slug":"on-off","content":"<p><strong class=\"marker\">ある要素をクリックされた時の挙動をjQueryで制御する</strong>ことはよくあります。1枚のLPページから、コーポレートサイトまで、サイトの形態は関係なく、ページ上で（遷移なしに）動的に動かしたい場合によく登場します。</p>\n<p>この記事では、要素をクリックした時の処理をjQueryで制御する方法と、どういった場面で使うことが多いかの具体例を出していけたらと思っています。</p>\n<p>jQueryでの制御を覚えて、サイトの表現の幅を少しだけ増やしましょう！</p>\n<div class=\"chat\"><figure class=\"chat-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"><figcaption>はにわまん</figcaption></figure><div class=\"chat-content\">jQueryは要素へのアプローチが簡単でとても使いやすいです！</div></div>\n<div id=\"toc_container\" class=\"no_bullets\"><p class=\"toc_title\">目次</p><ul class=\"toc_list\"><li><a href=\"#jQuery\"><span class=\"toc_number toc_depth_1\">1</span> 要素をクリックした時の処理をjQueryで制御する方法</a><ul><li><a href=\"#i\"><span class=\"toc_number toc_depth_2\">1.1</span> クリックイベントを取得する「オンクリック」</a></li><li><a href=\"#jQuery-2\"><span class=\"toc_number toc_depth_2\">1.2</span> 要素に対するjQueryの処理の書き方</a></li><li><a href=\"#a\"><span class=\"toc_number toc_depth_2\">1.3</span> aタグの遷移を無効化する</a></li></ul></li><li><a href=\"#jQuery-3\"><span class=\"toc_number toc_depth_1\">2</span> jQueryオンクリックの使用例</a><ul><li><a href=\"#i-2\"><span class=\"toc_number toc_depth_2\">2.1</span> アコーディオン</a></li><li><a href=\"#i-3\"><span class=\"toc_number toc_depth_2\">2.2</span> スムーススクロール</a></li><li><a href=\"#i-4\"><span class=\"toc_number toc_depth_2\">2.3</span> ドロワーのページ内リンク</a></li></ul></li><li><a href=\"#jQuery-4\"><span class=\"toc_number toc_depth_1\">3</span> jQueryで要素を操作できると心の余裕が生まれる</a></li><li><a href=\"#i-5\"><span class=\"toc_number toc_depth_1\">4</span> おわり</a></li></ul></div>\n<h2><span id=\"jQuery\">要素をクリックした時の処理をjQueryで制御する方法</span></h2>\n<p>早速ですが、実演してみましょう。以下をクリックすると、オレンジから青に変わることが分かると思います。</p>\n<div class=\"demo\">DEMO（デモ）</div>\n<div style=\"margin-bottom: 32px;\"><a href=\"\" class=\"target\">クリック対象</a></div>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-0\">コピー</span><code id=\"code-0\" class=\"html\">&lt;a href=\"\" class=\"target\"&gt;クリック対象&lt;/a&gt;\r\n</code></pre>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-1\">コピー</span><code id=\"code-1\" class=\"css\">.target {\r\n\tcolor: #efa336;\r\n}</code></pre>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-2\">コピー</span><code id=\"code-2\" class=\"js\">jQuery(\".target\").on(\"click\", function() {\r\n\tjQuery(\".target\").css(\"color\", \"#01579B\");\r\n\r\n\treturn false;\r\n});</code></pre>\n<h3><span id=\"i\">クリックイベントを取得する「オンクリック」</span></h3>\n<p>jQueryでクリックされたことを検知するなら、クリック対象の要素に対して「<strong>オンリック</strong>」させることです。</p>\n<p>書き方としては<code>[要素].on(\"click\", [処理内容]);</code>となります。これはテンプレのように覚えておくといいでしょう。どんなクリックイベントを取得するにしても基本はこの書き方です。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-3\">コピー</span><code id=\"code-3\" class=\"js\">jQuery(\"[対象の要素]\").on(\"click\", function() {\r\n/* 処理内容 */\r\n});</code></pre>\n<p><code>[対象の要素]</code>への書き方は、<strong class=\"marker\">CSSの指定の仕方と全く同じ</strong>です。クラスなら<code>.target</code>。もしidだったら、<code>#target</code>になります。</p>\n<p>もちろん、<code>a.target</code>みたいな書き方も可能です。</p>\n<h3><span id=\"jQuery-2\">要素に対するjQueryの処理の書き方</span></h3>\n<p>基本的な書き方は、<strong class=\"marker\">〇〇の要素に対して、□□の処理をさせる</strong>という書き方になります。先ほどの文字の色がオレンジから青に変わった例だと、</p>\n<p><code>.target</code>の要素に対して、CSSを<code>color: #01579B</code>で適応させるというものです。</p>\n<p>このクリックした処理が走った後はどういう動きをするかと言うと、以下のように要素に対して<code>style=\"\"</code>で<strong class=\"marker\">直接的に書き込まれる</strong>といった感じです。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/01/on-off-700x284.png\" alt=\"\" class=\"alignnone size-medium wp-image-12694\" srcset=\"https://haniwaman.com/wp-content/uploads/2019/01/on-off-700x284.png 700w, https://haniwaman.com/wp-content/uploads/2019/01/on-off-768x311.png 768w, https://haniwaman.com/wp-content/uploads/2019/01/on-off-1200x487.png 1200w, https://haniwaman.com/wp-content/uploads/2019/01/on-off.png 1364w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<p>jQueryでは、<strong class=\"marker\">CSS以外にもHTML内のテキストを操作したり属性値を操作したり</strong>と、いろいろと対応できます。</p>\n<p>基本的な使い方はドットインストールのjQuery入門でサラッと使い方を学ぶと、表現の幅が広がるので目を通してみてください。<br />\n→ <a href=\"https://dotinstall.com/lessons/basic_jquery_v2\" rel=\"noopener\" target=\"_blank\">jQuery入門 (全20回) &#8211; プログラミングならドットインストール</a></p>\n<h3><span id=\"a\"><code>a</code>タグの遷移を無効化する</span></h3>\n<p>最後の<code>return false;</code>もよく使います。これを記載しておくと、<code>a</code>タグの遷移を無効化してくれます。</p>\n<p>文字の色を変更しても、遷移が動いてしまったら、また初期の状態に戻ってしまいます。<code>a</code>タグに対してオンクリックする場合は、<code>return false;</code>をセットで使う癖をつけるといいかもしれません。</p>\n<h2><span id=\"jQuery-3\">jQueryオンクリックの使用例</span></h2>\n<p>どういった場面で利用するかの具体的を見ていこうと思います。自分が仕事でもよく使う実践的な例を集めまてみました！</p>\n<h3><span id=\"i-2\">アコーディオン</span></h3>\n<p>アコーディオンは、オンクリックした時にトグル（<code>slideToggle</code>）してやることで簡単に実装できます！Q and Aとかで頻出する表現方法かと思います。</p>\n<p>参考 → <a href=\"http://semooh.jp/jquery/api/effects/slideToggle/%5Bspeed%5D%2C+%5Bcallback%5D/\" rel=\"noopener\" target=\"_blank\">slideToggle([speed], [callback]) &#8211; jQuery 日本語リファレンス</a></p>\n<div class=\"demo\">DEMO（デモ）</div>\n<dl class=\"q-and-a\">\n<dt>Q1、ここをクリックするとどうなりますか？</dt>\n<dd>A1、回答が表示されます！</dd>\n<dt>Q2、ここをクリックするとどうなりますか？</dt>\n<dd>A2、回答が表示されます！</dd>\n</dl>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-4\">コピー</span><code id=\"code-4\" class=\"html\">&lt;dl class=\"q-and-a\"&gt;\r\n\t&lt;dt&gt;Q1、ここをクリックするとどうなりますか？&lt;/dt&gt;\r\n\t&lt;dd&gt;A1、回答が表示されます！&lt;/dd&gt;\r\n\t&lt;dt&gt;Q2、ここをクリックするとどうなりますか？&lt;/dt&gt;\r\n\t&lt;dd&gt;A2、回答が表示されます！&lt;/dd&gt;\r\n&lt;/dl&gt;</code></pre>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-5\">コピー</span><code id=\"code-5\" class=\"css\">.q-and-a dt {\r\n\tcursor: pointer;\r\n}\r\n\r\n.q-and-a dd {\r\n\tdisplay: none;\r\n\tmargin: 0;\r\n}</code></pre>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-6\">コピー</span><code id=\"code-6\" class=\"js\">jQuery(\".q-and-a dt\").on(\"click\", function() {\r\n\tjQuery(this)\r\n\t\t.next(\"dd\")\r\n\t\t.slideToggle();\r\n});</code></pre>\n<p>実装方法は簡単にですが、以下にまとめています。</p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"8k0ZfqH7A2\"><p><a href=\"https://haniwaman.com/jquery-accordion/\">jQueryで簡単アコーディオンメニューの作り方！</a></p></blockquote>\n<p><iframe title=\"&#8220;jQueryで簡単アコーディオンメニューの作り方！&#8221; &#8212; HPcode\" class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" src=\"https://haniwaman.com/jquery-accordion/embed/#?secret=8k0ZfqH7A2\" data-secret=\"8k0ZfqH7A2\" width=\"500\" height=\"282\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></p>\n<h3><span id=\"i-3\">スムーススクロール</span></h3>\n<p><img src=\"https://haniwaman.com/wp-content/uploads/2018/07/smooth-scroll2.gif\" alt=\"\" /></p>\n<p>スムーススクロールを自作する場合は<code>a[href^=\"#\"]</code>のクリック有無を検知して該当のidの元へスクロールさせるという処理をさせます。コードしては以下のような感じですね。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-7\">コピー</span><code id=\"code-7\" class=\"js\">jQuery('a[href^=\"#\"]').on(\"click\", function() {\r\n\tvar speed = 500;\r\n\tvar href = jQuery(this).attr(\"href\");\r\n\tvar target = jQuery(href == \"#\" ? \"html\" : href);\r\n\tvar position = target.offset().top;\r\n\tjQuery(\"html,body\").animate({ scrollTop: position }, speed);\r\n\treturn false;\r\n});</code></pre>\n<p>紹介しておいてなんですが、、、自作せずとも、JavaScriptのライブラリを使うと楽だったりします。</p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"pqCSFJZtaE\"><p><a href=\"https://haniwaman.com/smooth-scroll-js/\">スムーズな移動！「smooth-scroll.js」で固定ヘッダーも考慮したページ内リンク</a></p></blockquote>\n<p><iframe title=\"&#8220;スムーズな移動！「smooth-scroll.js」で固定ヘッダーも考慮したページ内リンク&#8221; &#8212; HPcode\" class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" src=\"https://haniwaman.com/smooth-scroll-js/embed/#?secret=pqCSFJZtaE\" data-secret=\"pqCSFJZtaE\" width=\"500\" height=\"282\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></p>\n<p>また、関連しているという意味で、遷移先のページ内リンクで固定ヘッダーでズレる場合は、こちらの方法で（一応）解消できます。</p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"ehFJ2c0Cb6\"><p><a href=\"https://haniwaman.com/page-link-position/\">ヘッダー固定でページ内リンクをページ遷移で指定した時のズレを解消するJavaScript</a></p></blockquote>\n<p><iframe title=\"&#8220;ヘッダー固定でページ内リンクをページ遷移で指定した時のズレを解消するJavaScript&#8221; &#8212; HPcode\" class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" src=\"https://haniwaman.com/page-link-position/embed/#?secret=ehFJ2c0Cb6\" data-secret=\"ehFJ2c0Cb6\" width=\"500\" height=\"282\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></p>\n<h3><span id=\"i-4\">ドロワーのページ内リンク</span></h3>\n<p>スムーススクロールに関連していますが、ドロワーのページ内リンクが押された時に、ドロワーが消えてくれないと邪魔になると思います。そのままページ内リンクさせると以下のようにドロワーがそのままで後ろが動いている状態です。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/01/on-off.gif\" width=\"320\" alt=\"\" class=\"alignnone size-full wp-image-12704\" /></p>\n<p>書き方によりますが、チェックボックスのオンオフで開閉を管理している場合は、以下のような記述でクリック時に消すことができます。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-8\">コピー</span><code id=\"code-8\" class=\"js\">jQuery(\".drawer-item a\").on(\"click\", function() {\r\n\tjQuery(\"#drawer-check\").prop(\"checked\", false);\r\n});</code></pre>\n<p>クリックした時に閉じつつスクロールしてくれるようになりました。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/01/on-off2.gif\" width=\"320\" alt=\"\" class=\"alignnone size-full wp-image-12710\" /></p>\n<p>チェックボックスのオンオフで開閉を管理するドロワーの作り方は、以下の記事にまとめているので、同様の表現をしたい方は参考にしてください！</p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"zbMwj7ALLb\"><p><a href=\"https://haniwaman.com/css-modal-drawer/\">ドロワーやモーダルをCSSだけで実現する方法</a></p></blockquote>\n<p><iframe title=\"&#8220;ドロワーやモーダルをCSSだけで実現する方法&#8221; &#8212; HPcode\" class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" src=\"https://haniwaman.com/css-modal-drawer/embed/#?secret=zbMwj7ALLb\" data-secret=\"zbMwj7ALLb\" width=\"500\" height=\"282\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></p>\n<h2><span id=\"jQuery-4\">jQueryで要素を操作できると心の余裕が生まれる</span></h2>\n<p>jQueryで要素を操作できるようになると、ある程度は「<strong class=\"marker\">ゴリゴリ書けばなんとかなりそう</strong>」っていう考えを持つことができるようになります。</p>\n<p>誰かが作ったライブラリしか使えないと、それが機能しなかった瞬間に終わりますが、、なんとなく中身が読めたりすると、ちょっと修正しただけで解決できたりします。</p>\n<p>そのためには、jQueryの書き方を覚えたり、JavaScriptの作法や、プログラミングの基本的な知識を持っていないといけません。。この辺りの基本的な部分はドットインストールで学べるので、時間を作ってぜひ何周かしてみてください！</p>\n<div class=\"box box-link\">\n<ul>\n<li>JavaScript → <a href=\"https://dotinstall.com/lessons/basic_javascript_v3\" rel=\"noopener\" target=\"_blank\">はじめてのJavaScript (全11回) &#8211; プログラミングならドットインストール</a></li>\n<li>jQuery → <a href=\"https://dotinstall.com/lessons/basic_jquery_v2\" rel=\"noopener\" target=\"_blank\">jQuery入門 (全20回) – プログラミングならドットインストール</a></li>\n</ul>\n</div>\n<h2><span id=\"i-5\">おわり</span></h2><div class=\"matome\"><div class=\"matome-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"></div><div class=\"matome-twitter\"><a href=\"https://twitter.com/haniwa008?ref_src=twsrc%5Etfw\" class=\"twitter-follow-button\" data-show-screen-name=\"false\" data-size=\"large\" data-lang=\"ja\" data-show-count=\"true\">Follow @haniwa008</a><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></div></div><!-- /matome -->\n<p>要素をクリックした時の処理をjQueryで制御する方法でした。わたしの脳内では、オン・オフって感じでイメージしています。</p>\n<p>jQueryでオンクリックを書く時の雛形と要素を操作するためのjQueryの処理方法を覚えておくと、ちょっとだけサイトでの表現の幅が広がるのではないかなと思うので、ぜひ使えるようになっておきましょう！</p>\n","date":"January 19, 2019","categories":[{"name":"JavaScript","slug":"javascript"}],"tags":null,"author":{"name":"はにわまん","slug":"haniwaman"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"75be1a53-e0bb-5c49-9ca1-08fbea375e4b"}}}