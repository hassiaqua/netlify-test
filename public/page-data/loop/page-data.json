{"componentChunkName":"component---src-templates-post-js","path":"/loop/","result":{"data":{"wordpressPost":{"id":"c46d68b1-2552-5441-8ad9-49e8e58f7afe","title":"WordPressの任意のループ（サブループ）を作る方法と覚えておきたい指定方法","slug":"loop","content":"<p>WordPressでサイト制作する上で絶対に<strong class=\"marker\">押さえておくべき仕組みの1つに「任意のループを作る」</strong>があると思っています。</p>\n<p>「ループ」とは管理画面から投稿した記事をまとめて一覧で表示させる仕組みとイメージしていただければいいと思います。これをテンプレートの好きな場所に好きな条件で表示させられうかどうかが、思い通りのサイトを作れるかどうかの分かれ道になるかもしれません。</p>\n<p>よくあるのが、コーポレートサイトのトップページの一部に「新着ニュース」を部分的に表示されるみたいな書き方ですね。</p>\n<p>この記事では、WordPressで好きな箇所に好きなループを作る方法を紹介していきます。</p>\n<div class=\"chat\"><figure class=\"chat-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"><figcaption>はにわまん</figcaption></figure><div class=\"chat-content\">好きなようにループが書けるとWordPressが楽しくなってくるかもしれません！</div></div>\n<div id=\"toc_container\" class=\"no_bullets\"><p class=\"toc_title\">目次</p><ul class=\"toc_list\"><li><a href=\"#WordPress\"><span class=\"toc_number toc_depth_1\">1</span> WordPressの任意のループを作る方法</a><ul><li><a href=\"#i\"><span class=\"toc_number toc_depth_2\">1.1</span> メインループを知る</a></li><li><a href=\"#i-2\"><span class=\"toc_number toc_depth_2\">1.2</span> サブループを知る</a></li><li><a href=\"#i-3\"><span class=\"toc_number toc_depth_2\">1.3</span> サブループはいくつでも書ける</a></li></ul></li><li><a href=\"#i-4\"><span class=\"toc_number toc_depth_1\">2</span> サブループのページャーは癖がある</a></li><li><a href=\"#WP_Query\"><span class=\"toc_number toc_depth_1\">3</span> WP_Queryで覚えておきたいプロパティ</a></li><li><a href=\"#i-5\"><span class=\"toc_number toc_depth_1\">4</span> おわり</a></li></ul></div>\n<h2><span id=\"WordPress\">WordPressの任意のループを作る方法</span></h2>\n<p>説明の順番としてメインループが一応いると思ったので、メインループ → サブループ（任意のループ）の順に説明していきます。</p>\n<h3><span id=\"i\">メインループを知る</span></h3>\n<p>通常のループは以下のような書き方をします。この何もカスタマイズしていないループをメインループと呼びます。一般的なテーマでこの記述がないテーマは存在しないはずです。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-0\">コピー</span><code id=\"code-0\" class=\"php\">&lt;?php if ( have_posts() ) : ?&gt;\r\n\t&lt;?php while ( have_posts() ) : ?&gt;\r\n\t\t&lt;?php the_post(); ?&gt;\r\n\t\t&lt;p&gt;処理内容&lt;/p&gt;\r\n\t&lt;?php endwhile; ?&gt;\r\n&lt;?php endif; ?&gt;\r\n</code></pre>\n<p>ここでループする内容は呼び出されるテンプレートごとに異なるのですが、</p>\n<ul>\n<li><span class=\"filename\">page.php</span>から呼ばれたなら、固定ページの該当記事</li>\n<li><span class=\"filename\">category.php</span>から呼ばれたなら、該当カテゴリーの一覧</li>\n</ul>\n<p>みたいな感じです。</p>\n<p><span class=\"filename\">category.php</span>や<span class=\"filename\">archive.php</span>から呼ばれる時の表示件数は、管理画面の「表示設定」で決まっています。<br />\n<img width=\"520\" src=\"https://haniwaman.com/wp-content/uploads/2018/12/loop-700x399.png\" alt=\"\" class=\"alignnone size-medium wp-image-11878\" srcset=\"https://haniwaman.com/wp-content/uploads/2018/12/loop-700x399.png 700w, https://haniwaman.com/wp-content/uploads/2018/12/loop-768x438.png 768w, https://haniwaman.com/wp-content/uploads/2018/12/loop.png 842w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<p>この設定は<strong class=\"marker\">全体のループに反映される</strong>ことになるので、例えばカテゴリーが「news」の投稿の記事を部分的に5記事だけ表示させたいといったことはメインループを使うことでは実現ができません。</p>\n<h3><span id=\"i-2\">サブループを知る</span></h3>\n<p>サブループは<strong class=\"marker\">メインループから一時的に外れたループ</strong>という覚え方をするといいかと思います。一時的という表現を使ったのは、「<strong>サブループを使った後はメインループに戻しましょう</strong>」という意味をこめています。</p>\n<p>先ほど例に出した、「カテゴリーが「news」の投稿の記事を部分的に5記事だけ」をサブループで表現すると以下のようになります。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-1\">コピー</span><code id=\"code-1\" class=\"php\">&lt;?php\r\n$news_query = new WP_Query(\r\n\tarray(\r\n\t\t'post_type'      =&gt; 'post',\r\n\t\t'category_name' =&gt; 'news',\r\n\t\t'posts_per_page' =&gt; 5,\r\n\t)\r\n);\r\n?&gt;\r\n&lt;?php if ( $news_query-&gt;have_posts() ) : ?&gt;\r\n\t&lt;?php while ( $news_query-&gt;have_posts() ) : ?&gt;\r\n\t\t&lt;?php $news_query-&gt;the_post(); ?&gt;\r\n\t\t&lt;p&gt;処理内容&lt;/p&gt;\r\n\t&lt;?php endwhile; ?&gt;\r\n&lt;?php endif; ?&gt;\r\n&lt;?php wp_reset_postdata(); ?&gt;</code></pre>\n<p>今回のサブループを使うことによって、例えば以下のようなページを作ることができます。<br />\n（参考）→ <a href=\"https://haniwaman.com/static-to-wordpress/\">静的HTMLサイトをWordPress化するときの具体的な移行手順</a><br />\n<a href=\"https://haniwaman.com/static-to-wordpress/\"><img src=\"https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress9.png\" alt=\"\" /></a></p>\n<p>メインループから追加された内容を解説していきます。</p>\n<h4>１、WP_Queryでループ内容をカスタマイズ</h4>\n<p>任意のループを作る上で必須で覚えておくべきが<code>WP_Query</code>です。<strong class=\"marker\">ループの条件を指定するもの</strong>と捉えていただければと思います。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-2\">コピー</span><code id=\"code-2\" class=\"php\">$news_query = new WP_Query(\r\n\tarray(\r\n\t\t'post_type'      =&gt; 'post',\r\n\t\t'category_name' =&gt; 'news',\r\n\t\t'posts_per_page' =&gt; 5,\r\n\t)\r\n);</code></pre>\n<p>投稿タイプを「post」、カテゴリーのスラッグ名を「news」、1ページあたりに取得する記事数を「3」という条件を指定しています。ここで作った条件をループでループさせていきます。</p>\n<p>ちなみに一昔前によく使われた<code><a href=\"https://wpdocs.osdn.jp/%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E3%82%BF%E3%82%B0/query_posts\" rel=\"noopener\" target=\"_blank\">query_posts();</a></code>はあまり推奨されない書き方なので、使わないようにしましょう。</p>\n<h4>２、ループに条件を反映</h4>\n<p><code>have_posts()</code>と<code>the_post()</code>の前に<code>$news_query-&gt;</code>が追加されているのが分かるかと思います。このように<code>WP_Query</code>で作成した条件をループ処理に反映させています。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-3\">コピー</span><code id=\"code-3\" class=\"php\">&lt;?php if ( $news_query-&gt;have_posts() ) : ?&gt;\r\n\t&lt;?php while ( $news_query-&gt;have_posts() ) : ?&gt;\r\n\t\t&lt;?php $news_query-&gt;the_post(); ?&gt;</code></pre>\n<h4>３、メインループに戻す</h4>\n<p>サブループが終わった後のお約束として、以下の記述を書いてあげます。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-4\">コピー</span><code id=\"code-4\" class=\"php\">&lt;?php wp_reset_postdata(); ?&gt;\r\n</code></pre>\n<p><code>WP_Query</code>で書き換わったループをなかったことにするというイメージでいいかと思います。</p>\n<p>書かないといつまでも、グローバル変数の<code>$post</code>などが書き換えられていて正しく取得できない可能性があります。<code>WP_Query</code>と<code>wp_reset_postdata()</code>はセットで書くことを覚えておきましょう！</p>\n<h3><span id=\"i-3\">サブループはいくつでも書ける</span></h3>\n<p>そして<code>WP_Query</code>で作るサブループはテンプレート内でいくつでも作成が可能です。</p>\n<p>今回のサブループの例で出した、投稿のカテゴリースラッグ名を指定して新着3件を表示するというサブループをいくつかのカテゴリーで作れば、3件ごとにカテゴリーで分けられたページが作ることができたりします（ブログのトップページとかでよく見ますね）</p>\n<p>テスト的にわたしの「wordpress」「css」「javascript」で作ってみました。これは、<code>$news_query</code>と<code>'category_name'</code>の値だけを変えて、並べただけです（長さの関係上、3件ずつにしました。）<br />\n※ Gif動画<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/12/loop.gif\" alt=\"\" class=\"alignnone size-medium wp-image-11892\" /></p>\n<h2><span id=\"i-4\">サブループのページャーは癖がある</span></h2>\n<p>サブループでページャーを設置したい場合は、少し癖があります。訳の分からない<code>$big</code>などがありますが、公式を参考に「こういうもんだ」と割り切って使うのがいいのかなと思っています・・・（わたしが理解できていないだけ）<br />\n公式の参考 → <a href=\"https://wpdocs.osdn.jp/%E9%96%A2%E6%95%B0%E3%83%AA%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9/paginate_links#.E3.82.AB.E3.82.B9.E3.82.BF.E3.83.A0.E3.82.AF.E3.82.A8.E3.83.AA.E3.82.92.E4.BD.BF.E7.94.A8.E3.81.97.E3.81.9F.E4.BE.8B\" rel=\"noopener\" target=\"_blank\">関数リファレンス/paginate links &#8211; WordPress Codex 日本語版</a></p>\n<p><code>'total'</code>で指定している<code>$news_query</code>だけは、<code>WP_Query</code>で作成した時の変数に置き換えてあげる必要があります。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-5\">コピー</span><code id=\"code-5\" class=\"php\">$big        = 999999999;\r\necho paginate_links( array(\r\n\t'base'      =&gt; str_replace( $big, '%#%', esc_url( get_pagenum_link( $big ) ) ),\r\n\t'current'   =&gt; max( 1, get_query_var( 'paged' ) ),\r\n\t'total'     =&gt; $news_query-&gt;max_num_pages,\r\n\t'mid_size'  =&gt; 1,\r\n\t'end_size'  =&gt; 1,\r\n\t'prev_text' =&gt; '前',\r\n\t'next_text' =&gt; '次',\r\n\t'type'      =&gt; 'plane',\r\n) );</code></pre>\n<h2><span id=\"WP_Query\">WP_Queryで覚えておきたいプロパティ</span></h2>\n<p>WP_Queryではありとあらゆるパターンでループをカスタマイズできます。めちゃくちゃ多いので覚えることはできないと思いますが、カスタマイズしたくなった際は以下のページのプロパティを参考に設定してみてください。<br />\n→ <a href=\"https://wpdocs.osdn.jp/%E9%96%A2%E6%95%B0%E3%83%AA%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9/WP_Query\" rel=\"noopener\" target=\"_blank\">関数リファレンス/WP Query &#8211; WordPress Codex 日本語版</a></p>\n<p>この記事ではわたしが個人的によく使う<code>WP_Query</code>のプロパティを紹介していきます。</p>\n<table class=\"table\">\n<tr>\n<th width=\"116\">プロパティ</th>\n<th>意味</th>\n</tr>\n<tr>\n<td><code>posts_per_page</code></td>\n<td><strong>1ページあたりにどれだけ表示させるか</strong><br />\n\t\t管理画面の表示設定に縛られずに表示させるには、この指定は書かせません。<code>-1</code>で指定すると、件数指定なして全件が表示させるようにできます。<br />\n\t\t→ <a href=\"https://wpdocs.osdn.jp/%E9%96%A2%E6%95%B0%E3%83%AA%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9/WP_Query#.E3.83.9A.E3.83.BC.E3.82.B8.E9.80.81.E3.82.8A.E3.83.91.E3.83.A9.E3.83.A1.E3.83.BC.E3.82.BF\" rel=\"noopener\" target=\"_blank\">ページ送りパラメータ</a></td>\n</tr>\n<tr>\n<td><code>cat</code></td>\n<td><strong>カテゴリーIDの指定</strong><br />\n\t\tカテゴリーIDを絞ってループを回したい場合に使います。<br />\n\t\t→ <a href=\"https://wpdocs.osdn.jp/%E9%96%A2%E6%95%B0%E3%83%AA%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9/WP_Query#.E3.82.AB.E3.83.86.E3.82.B4.E3.83.AA.E3.83.BC.E3.81.AE.E3.83.91.E3.83.A9.E3.83.A1.E3.83.BC.E3.82.BF\" rel=\"noopener\" target=\"_blank\">カテゴリーのパラメータ</a></td>\n</tr>\n<tr>\n<td><code>post_type</code></td>\n<td><strong>投稿タイプの指定</strong><br />\n\t\tカスタム投稿タイプを作成している場合に指定を書き換えたりします。「お知らせ」用の投稿タイプをトップページにちょっと出したいときとか。<br />\n\t\t→ <a href=\"https://wpdocs.osdn.jp/%E9%96%A2%E6%95%B0%E3%83%AA%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9/WP_Query#.E6.8A.95.E7.A8.BF.E3.82.BF.E3.82.A4.E3.83.97.E3.81.AE.E3.83.91.E3.83.A9.E3.83.A1.E3.83.BC.E3.82.BF\" rel=\"noopener\" target=\"_blank\">投稿タイプのパラメータ</a></td>\n</tr>\n<tr>\n<td><code>paged</code></td>\n<td><strong>ページ番号</strong><br />\n\t\t一覧ページなどを作る際は2ページ以降も必要です。このパラメーターは○ページを指定できます。<br />\n\t\t→ <a href=\"https://wpdocs.osdn.jp/%E9%96%A2%E6%95%B0%E3%83%AA%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9/WP_Query#.E3.83.9A.E3.83.BC.E3.82.B8.E9.80.81.E3.82.8A.E3.83.91.E3.83.A9.E3.83.A1.E3.83.BC.E3.82.BF\" rel=\"noopener\" target=\"_blank\">ページ送りパラメータ</a></td>\n</tr>\n<tr>\n<td><code>s</code></td>\n<td><strong>検索キーワードの指定</strong><br />\n\t\t<span class=\"filename\">search.php</span>をカスタマイズしてループ処理を変更させるときに使ったりします。<br />\n\t\t→ <a href=\"https://wpdocs.osdn.jp/%E9%96%A2%E6%95%B0%E3%83%AA%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9/WP_Query#.E6.A4.9C.E7.B4.A2.E3.83.91.E3.83.A9.E3.83.A1.E3.83.BC.E3.82.BF\" rel=\"noopener\" target=\"_blank\">検索パラメータ</a></td>\n</tr>\n<tr>\n<td><code>order</code><br />\n\t\t<code>orderby</code></td>\n<td><strong>並び順の指定</strong><br />\n\t\t日付やタイトル、投稿ID、ランダムなど、並び順を制御できます。<br />\n\t\t→ <a href=\"https://wpdocs.osdn.jp/%E9%96%A2%E6%95%B0%E3%83%AA%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9/WP_Query#.E9.A0.86.E5.BA.8F.E3.81.A5.E3.81.91.E3.83.91.E3.83.A9.E3.83.A1.E3.83.BC.E3.82.BF\" rel=\"noopener\" target=\"_blank\">順序づけパラメータ</a></td>\n</tr>\n</table>\n<h2><span id=\"i-5\">おわり</span></h2><div class=\"matome\"><div class=\"matome-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"></div><div class=\"matome-twitter\"><a href=\"https://twitter.com/haniwa008?ref_src=twsrc%5Etfw\" class=\"twitter-follow-button\" data-show-screen-name=\"false\" data-size=\"large\" data-lang=\"ja\" data-show-count=\"true\">Follow @haniwa008</a><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></div></div><!-- /matome -->\n<p>WordPressの任意のループを作る方法、任意のループを使っている時のページャーの癖、覚えておきたい指定方法について紹介しました。</p>\n<p>とにかく覚えるべきは<code>WP_Query</code>の書き方とパラメーターです。<a href=\"https://wpdocs.osdn.jp/%E9%96%A2%E6%95%B0%E3%83%AA%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9/WP_Query\" rel=\"noopener\" target=\"_blank\">WP_Queryの関数リファレンス</a>はもう100回以上は見てるかもしれません笑</p>\n<p>それくらいWordPressでテーマ作成する際に登場する仕組みなので、サブループ（任意のループ）という概念はしっかりと押さえておきましょう！</p>\n","date":"December 29, 2018","categories":[{"name":"WordPress","slug":"wordpress"}],"tags":null,"author":{"name":"はにわまん","slug":"haniwaman"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"c46d68b1-2552-5441-8ad9-49e8e58f7afe"}}}