{"componentChunkName":"component---src-templates-post-js","path":"/static-to-wordpress/","result":{"data":{"wordpressPost":{"id":"6e14f3cf-2180-5e59-b5b7-ad0d1001ae01","title":"静的HTMLサイトをWordPress化するときの具体的な移行手順","slug":"static-to-wordpress","content":"<p>静的HTMLサイトをWordPress化するときの具体的な手順をまとめました。色々な手順が必要です。</p>\n<p>範囲が広すぎるため、深くまで掘り下げていない部分もありますがご了承いただければと思います。ザックリとした全体像を把握できることを目的としています。</p>\n<p>下記の静的HTMLサイトを実際にWordPress化していきます。<br />\n<a href=\"https://haniwaman.com/sample/part3/template_08/\" rel=\"noopener\" target=\"_blank\">https://haniwaman.com/sample/part3/template_08/</a><br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/02/template_08-700x748.png\" /></p>\n<div class=\"chat\"><figure class=\"chat-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"><figcaption>はにわまん</figcaption></figure><div class=\"chat-content\">わたしもWordPress化のご依頼も承っていますので、お気軽にご相談いただければと思います！ → <a href=\"https://haniwaman.com/lp/\" rel=\"noopener\" target=\"_blank\">はにわまんに無料で相談してみる</a></div></div>\n<div id=\"toc_container\" class=\"no_bullets\"><p class=\"toc_title\">目次</p><ul class=\"toc_list\"><li><a href=\"#HTMLWordPress\"><span class=\"toc_number toc_depth_1\">1</span> 静的HTMLサイトをWordPress化するときの手順</a><ul><li><a href=\"#i\"><span class=\"toc_number toc_depth_2\">1.1</span> テーマフォルダを作成</a></li><li><a href=\"#CSSJavaScript\"><span class=\"toc_number toc_depth_2\">1.2</span> CSS、JavaScript、画像ファイルをテーマフォルダにコピー &amp; 読み込み</a></li><li><a href=\"#i-2\"><span class=\"toc_number toc_depth_2\">1.3</span> テーマの宣言</a></li><li><a href=\"#indexphp\"><span class=\"toc_number toc_depth_2\">1.4</span> index.phpを「とりあえず」作成</a></li><li><a href=\"#i-3\"><span class=\"toc_number toc_depth_2\">1.5</span> テンプレートファイル分割</a></li><li><a href=\"#i-4\"><span class=\"toc_number toc_depth_2\">1.6</span> 固定ページ作成</a></li><li><a href=\"#i-5\"><span class=\"toc_number toc_depth_2\">1.7</span> 投稿ページ作成</a></li></ul></li><li><a href=\"#WordPress\"><span class=\"toc_number toc_depth_1\">2</span> WordPress化の検討事項</a><ul><li><a href=\"#URL\"><span class=\"toc_number toc_depth_2\">2.1</span> URL構造</a></li><li><a href=\"#i-6\"><span class=\"toc_number toc_depth_2\">2.2</span> メニュー機能</a></li><li><a href=\"#i-7\"><span class=\"toc_number toc_depth_2\">2.3</span> ウィジェット機能</a></li><li><a href=\"#i-8\"><span class=\"toc_number toc_depth_2\">2.4</span> カスタム投稿タイプ</a></li><li><a href=\"#i-9\"><span class=\"toc_number toc_depth_2\">2.5</span> 記事のトレース</a></li></ul></li><li><a href=\"#WordPress-2\"><span class=\"toc_number toc_depth_1\">3</span> WordPress移行後のチェック</a><ul><li><a href=\"#URL-2\"><span class=\"toc_number toc_depth_2\">3.1</span> URL構造のチェック</a></li><li><a href=\"#i-10\"><span class=\"toc_number toc_depth_2\">3.2</span> リンク切れがないかチェック</a></li></ul></li><li><a href=\"#i-11\"><span class=\"toc_number toc_depth_1\">4</span> おわり</a></li></ul></div>\n<h2><span id=\"HTMLWordPress\">静的HTMLサイトをWordPress化するときの手順</span></h2>\n<p>静的HTMLサイトをWordPress化するときの手順です。</p>\n<p><a href=\"https://haniwaman.com/sample/part3/template_08/\" rel=\"noopener\" target=\"_blank\">https://haniwaman.com/sample/part3/template_08/</a>のフォルダ構成は以下のとおりです。</p>\n<p>index.html<br />\nclinic.html<br />\naccess.html<br />\nservice.html<br />\nstaff.html<br />\ncommon<br />\n&#8211; css<br />\n&#8211; images<br />\n&#8211; js</p>\n<h3><span id=\"i\">テーマフォルダを作成</span></h3>\n<p>オリジナルのテーマを作成します。名前は何でもいいのでテーマフォルダを用意してください。</p>\n<p>今回は「template_08」という名前で作りました。また、空のファイルでいいので「index.php」「style.css」「functions.php」も作成しておきましょう。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress.png\" alt=\"\" class=\"alignnone size-full wp-image-6808\" /></p>\n<h3><span id=\"CSSJavaScript\">CSS、JavaScript、画像ファイルをテーマフォルダにコピー &amp; 読み込み</span></h3>\n<p>元のサイトを構成しているリソースをとりあえず全部テーマフォルダに移動させます。</p>\n<p>今回の例でいうと、commonフォルダの中にある下記の3点。</p>\n<ul>\n<li>css</li>\n<li>js</li>\n<li>images</li>\n</ul>\n<p><img src=\"https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress2.png\" alt=\"\" class=\"alignnone size-full wp-image-6809\" /></p>\n<h4>CSSとJavaScriptを読み込む</h4>\n<p>テーマに格納したcssフォルダ内とjsフォルダ内をWordPressで読み込むようにしてあげましょう。</p>\n<pre><span class=\"filename\">functions.php</span><span class=\"code-copy\" data-clipboard-target=\"#code-0\">コピー</span><code id=\"code-0\" class=\"php\">function my_scripts() {\r\n\twp_enqueue_style( 'style-name', get_template_directory_uri() . '/css/style.css', array(), '1.0.0', 'all' );\r\n  wp_enqueue_script( 'script-name', get_template_directory_uri() . '/js/setting.js', array( 'jquery' ), '1.0.0', true );\r\n}\r\nadd_action( 'wp_enqueue_scripts', 'my_scripts' );\r\n</code></pre>\n<p>※ 読み込む順番については静的ファイルが読み込んでいた順番を参考にしてください。<br />\n<span class=\"filename\">index.html</span><br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress3-700x53.png\" alt=\"\" class=\"alignnone size-medium wp-image-6810\" srcset=\"https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress3-700x53.png 700w, https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress3.png 741w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<p>jQueryはWordPressで標準で読み込まれるので不要です。</p>\n<h3><span id=\"i-2\">テーマの宣言</span></h3>\n<p>今のままではテーマとして機能しません。<span class=\"filename\">style.css</span>にテーマ名を記載してあげましょう。<br />\n<span class=\"filename\">index.php</span>と同じ階層にある<span class=\"filename\">style.css</span>です。</p>\n<pre><span class=\"filename\">style.css</span><span class=\"code-copy\" data-clipboard-target=\"#code-1\">コピー</span><code id=\"code-1\" class=\"css\">/*\r\nTheme Name: Template08\r\n*/</code></pre>\n<p>これでテーマとして認識されるようになります。「有効化」しておきましょう。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress4-700x471.png\" alt=\"\" class=\"alignnone size-medium wp-image-6827\" srcset=\"https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress4-700x471.png 700w, https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress4-768x516.png 768w, https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress4.png 815w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<h3><span id=\"indexphp\">index.phpを「とりあえず」作成</span></h3>\n<p>とりあえずindex.phpにトップページをまるごとコピーします。今回の例だとindex.htmlの中身を全部移す感じですね。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress5-700x469.png\" alt=\"\" class=\"alignnone size-medium wp-image-6814\" srcset=\"https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress5-700x469.png 700w, https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress5-768x515.png 768w, https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress5.png 944w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<h4>ヘッダーとフッターにお決まりのタグを挿入</h4>\n<p><code>&lt;/head&gt;</code>の直前に<code>&lt;?php wp_head(); ?&gt;</code><br />\n<code>&lt;/body&gt;</code>の直前に<code>&lt;?php wp_footer(); ?&gt;</code></p>\n<p>を挿入してあげてください。これでfunctions.phpに記載したCSSとJavaScriptが読み込まれるようになります！<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress6-1.png\" alt=\"\" class=\"alignnone size-full wp-image-6817\" /></p>\n<p><img src=\"https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress7.png\" alt=\"\" class=\"alignnone size-full wp-image-6818\" /></p>\n<h4>トップページ表示確認</h4>\n<p>それではトップページを開いてみましょう。デザインが当たってそれっぽい見栄えになっていることが分かります。</p>\n<p><img src=\"https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress8-700x514.png\" alt=\"\" class=\"alignnone size-medium wp-image-6830\" srcset=\"https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress8-700x514.png 700w, https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress8-768x564.png 768w, https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress8.png 953w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<h4>画像へのパスを通す</h4>\n<p>画像はすべてテーマフォルダに移動したので、そこにパスを通してあげる必要があります。</p>\n<ul>\n<li>テンプレートファイルからなら、<code>get_template_directory_uri()</code>を使って</li>\n<li>cssファイルからなら、相対パス</li>\n<li>記事内からなら、ルートパス</li>\n</ul>\n<p>といった具合で書き換えていきます。</p>\n<p>画像については一括置換すると楽です。<br />\n（記事内については、「<a href=\"https://ja.wordpress.org/plugins/search-regex/\" rel=\"noopener\" target=\"_blank\">Search Regex</a>」で置換できます。）</p>\n<p>はい、どんどんと説明が省略されていきますね・・・。</p>\n<h3><span id=\"i-3\">テンプレートファイル分割</span></h3>\n<p>テンプレートファイルをheader.php、footer.php、sidebar.phpに分割していきます。共通で仕様するパーツとなります。静的サイトの他のページを確認したりしてどこまでを「共通」にするかを考えてください。</p>\n<p>共通となるのは、主には以下の3つです。</p>\n<ul>\n<li>header.php</li>\n<li>footer.php</li>\n<li>sidebar.php</li>\n</ul>\n<p>それぞれのファイルは以下の関数で読み込むことができます。</p>\n<ul>\n<li><code>get_header()</code></li>\n<li><code>get_footer()</code></li>\n<li><code>get_sidebar()</code></li>\n</ul>\n<h4>header.php</h4>\n<p>不要に読み込んでいるcssやjsファイルを削除します。<span class=\"filename\">functions.php</span>で読み込んでいるので直書きする必要はありません。</p>\n<p>また、title、description、keywordも不要です。「<a href=\"https://ja.wordpress.org/plugins/all-in-one-seo-pack/\" rel=\"noopener\" target=\"_blank\">All in one SEO Pack</a>」で自動挿入されます。</p>\n<h4>sidebar.php</h4>\n<p>ウィジェットに対応させるかどうかはクライアントと相談して決めてください。今回は直打ちしています。</p>\n<h3><span id=\"i-4\">固定ページ作成</span></h3>\n<p>固定テンプレートページもしくは、テキストでコンテンツ部分を貼り付けます。わたしはとりあえず固定テンプレートで作るケースが多いです（見栄え確認してからあとで管理画面に入れます）</p>\n<p>静的ページってほとんど固定ページになります。数ページしかありませんし、役割として固定ページであることがほとんどです。</p>\n<p>テンプレートファイルとしては以下のあたり。</p>\n<ul>\n<li>page.php</li>\n<li>page-{slug}.php</li>\n</ul>\n<p>今回のケースだと下記のファイルは固定ページに該当します。</p>\n<ul>\n<li><span class=\"filename\">clinic.html</span></li>\n<li><span class=\"filename\">access.html</span></li>\n<li><span class=\"filename\">service.html</span></li>\n<li><span class=\"filename\">staff.html</span></li>\n</ul>\n<h4>プラグイン「Custom Permalinks」でURLを同じにする</h4>\n<p>WordPressで出力するURLは、静的ファイルのように「.html」になることはありません。SEO的には合わせておいたほうが無難です。URL構造をどうするかはクライアントと相談したほうがいいかもしれませんね。</p>\n<p>URL構造の変更は、プラグイン「<a href=\"https://ja.wordpress.org/plugins/custom-permalinks/\" rel=\"noopener\" target=\"_blank\">Custom Permalinks</a>」を使うと、任意に設定できるようになります！<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress11.png\" alt=\"\" class=\"alignnone size-full wp-image-6841\" /></p>\n<h4>タイトル、ディスクリプションを合わせる</h4>\n<p>プラグイン「<a href=\"https://ja.wordpress.org/plugins/all-in-one-seo-pack/\" rel=\"noopener\" target=\"_blank\">All in One SEO Pack</a>」を使えば、記事ごとにタイトルとディスクリプションを設定できます。</p>\n<p><img src=\"https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress12-700x417.png\" alt=\"\" class=\"alignnone size-medium wp-image-6845\" srcset=\"https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress12-700x417.png 700w, https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress12.png 739w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<h3><span id=\"i-5\">投稿ページ作成</span></h3>\n<p>WordPress化する目的の多くは「<strong class=\"marker\">自分で投稿管理しやすいようにしたい！</strong>」というものです。</p>\n<p>今回のケースだと、トップページにある「新着情報」を自分で更新できるようにしていきます。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress9.png\" alt=\"\" class=\"alignnone size-full wp-image-6835\" /></p>\n<p>カスタム投稿タイプとして作成するかどうかは、他に投稿に該当する箇所がないかどうか、などを考慮して決めます。今回は他に投稿するページがなさそうなので、標準の「投稿」に入れていきます。</p>\n<p>日付も合わせて作りましょう。作成したものがこちら。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress10-700x554.png\" alt=\"\" class=\"alignnone size-medium wp-image-6836\" srcset=\"https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress10-700x554.png 700w, https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress10.png 742w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<p>トップページで表示されるように<span class=\"filename\">index.php</span>を修正します。</p>\n<pre><span class=\"filename\">index.php</span><span class=\"code-copy\" data-clipboard-target=\"#code-2\">コピー</span><code id=\"code-2\" class=\"html\">&lt;div class=\"inner\"&gt;\r\n\t&lt;!-- 新着情報 ここから --&gt;\r\n\t&lt;h2 class=\"subMidashi\"&gt;&lt;span class=\"midashiText\"&gt;新着情報&lt;/span&gt;&lt;/h2&gt;\r\n\r\n\t&lt;div class=\"news\"&gt;\r\n\t\t&lt;dl&gt;\r\n\t\t\t&lt;dt&gt;&lt;span class=\"date\"&gt;2012年08月01日&lt;/span&gt;&lt;/dt&gt;\r\n\t\t\t&lt;dd&gt;【診療時間変更のお知らせ】長期休診の前日8月11日は、通常より1時間長く診療をすることにしました。ご予約をお待ちしております。&lt;/dd&gt;\r\n\t\t\t&lt;dt&gt;&lt;span class=\"date\"&gt;2012年07月24日&lt;/span&gt;&lt;/dt&gt;\r\n\t\t\t&lt;dd&gt;【8月の休診のお知らせ】8月12日～16日の間は休診とさせていただきます。何卒よろしくお願いいたします。&lt;/dd&gt;\r\n\t\t\t&lt;dt&gt;&lt;span class=\"date\"&gt;2012年07月02日&lt;/span&gt;&lt;/dt&gt;\r\n\t\t\t&lt;dd&gt;【こどもデンタル教室のご案内】毎月第2土曜日に行っているこどもデンタル教室では、参加してくださるお子様を募集しております。&lt;/dd&gt;\r\n\t\t\t&lt;dt&gt;&lt;span class=\"date\"&gt;2012年06月20日&lt;/span&gt;&lt;/dt&gt;\r\n\t\t\t&lt;dd&gt;【7月休診日のお知らせ】7月は土日祝日以外の休診日はありません。ご来院お待ちしております。&lt;/dd&gt;\r\n\t\t\t&lt;dt&gt;&lt;span class=\"date\"&gt;2012年06月01日&lt;/span&gt;&lt;/dt&gt;\r\n\t\t\t&lt;dd&gt;ホームページをリニューアルしました。&lt;/dd&gt;\r\n\t\t&lt;/dl&gt;\r\n\t&lt;/div&gt;\r\n\t&lt;!-- 新着情報 ここまで --&gt;\r\n&lt;/div&gt;</code></pre>\n<p>こんな感じで変更します。</p>\n<pre><span class=\"filename\">index.php</span><span class=\"code-copy\" data-clipboard-target=\"#code-3\">コピー</span><code id=\"code-3\" class=\"php\">&lt;?php $the_query = new WP_Query( array( 'post_type' =&gt; 'post', 'posts_per_page' =&gt; -1 ) ); ?&gt;\r\n&lt;?php if ( $the_query-&gt;have_posts() ) : ?&gt;\r\n&lt;div class=\"inner\"&gt;\r\n\t&lt;!-- 新着情報 ここから --&gt;\r\n\t&lt;h2 class=\"subMidashi\"&gt;&lt;span class=\"midashiText\"&gt;新着情報&lt;/span&gt;&lt;/h2&gt;\r\n\r\n\t&lt;div class=\"news\"&gt;\r\n\r\n\t\t&lt;dl&gt;\r\n\t\t\t&lt;?php while ( $the_query-&gt;have_posts() ) : $the_query-&gt;the_post(); ?&gt;\r\n\t\t\t&lt;dt&gt;&lt;span class=\"date\"&gt;&lt;?php the_time( 'Y年m月d日' ); ?&gt;&lt;/span&gt;&lt;/dt&gt;\r\n\t\t\t&lt;dd&gt;&lt;?php the_content(); ?&gt;&lt;/dd&gt;\r\n\t\t\t&lt;?php endwhile; ?&gt;\r\n\t\t&lt;/dl&gt;\r\n\t\t&lt;?php wp_reset_postdata(); ?&gt;\r\n\t&lt;/div&gt;\r\n\t&lt;!-- 新着情報 ここまで --&gt;\r\n&lt;/div&gt;\r\n&lt;?php endif; ?&gt;</code></pre>\n<p>WordPressの管理画面から登録した投稿ページの日付でソートされたコンテンツが表示されるようになります。</p>\n<h2><span id=\"WordPress\">WordPress化の検討事項</span></h2>\n<h3><span id=\"URL\">URL構造</span></h3>\n<p>WordPress標準のものにしていいのか、静的ファイルのままにしたほうがいいのか、など。</p>\n<p>SEO的に考えるとURL構造は絶対に変えるべきではありません。変えるなら301リダイレクトの対応をすべきかと思います。</p>\n<p>見積もりと合わせてクライアントと相談しましょう。</p>\n<h3><span id=\"i-6\">メニュー機能</span></h3>\n<p>WordPressにはメニュー機能があります。グローバルメニューは基本的には標準のメニュー機能を用いて作られていますが、静的ファイルから移行する際は、メニュー機能を使うかどうかは工数もお金も発生するので、クライアントと相談して決めるといいと思います。</p>\n<h3><span id=\"i-7\">ウィジェット機能</span></h3>\n<p>メニューと似ていますが、サイドメニューはウィジェットと呼ばれる機能で管理しやすくすることが可能です。</p>\n<p><span class=\"filename\">sidebar.php</span>に直打ちでも問題ないので、ここもクライアントと相談して決めてください。</p>\n<h3><span id=\"i-8\">カスタム投稿タイプ</span></h3>\n<p>お客様が自分たちで投稿したいページのパターンに応じて投稿タイプを作っていく必要があります。</p>\n<ul>\n<li>「どこを更新対象にするか」</li>\n<li>「更新する投稿タイプはいくつ必要か」</li>\n</ul>\n<p>など、クライアントと事前に決めておくことが大切です。</p>\n<h3><span id=\"i-9\">記事のトレース</span></h3>\n<p>記事が数ページなら特に苦にはなりません（全体の見積もりにちょこっと入れておけばいいです）が、大量にページがあってインポートできない場合など。</p>\n<p>投稿タイプの型だけ作ってお客様に移し替えてもらうのか、こちらで全ページを移し替えるのか。手間も変わってくるので事前に決めておくことが大事です。</p>\n<h2><span id=\"WordPress-2\">WordPress移行後のチェック</span></h2>\n<p>移行後に最低限チェックしておきたいポイントです。<a href=\"https://www.screamingfrog.co.uk/\" rel=\"noopener\" target=\"_blank\">Screaming Frog SEO Spider Tool</a>でチェック可能です！</p>\n<p>URLを入力して「START」<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress13-700x527.png\" alt=\"\" class=\"alignnone size-medium wp-image-6848\" srcset=\"https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress13-700x527.png 700w, https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress13-768x579.png 768w, https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress13.png 1010w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<h3><span id=\"URL-2\">URL構造のチェック</span></h3>\n<p>構造に相違がないか、確認しましょう！</p>\n<p>「HTML」選択して、サイトマップみたいなアイコン押すといい感じに並べてくれます。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress15.png\" alt=\"\" class=\"alignnone size-full wp-image-6849\" /></p>\n<h3><span id=\"i-10\">リンク切れがないかチェック</span></h3>\n<p>一番気をつけなければならないのが内部リンクのミス。頻繁に起きます。WordPress化するとあらゆるパスが書き換わります。</p>\n<p>img、js、css、各種内部リンクにミスがないかチェックしましょう。「All」を選択して「Status Code」をソートして404をすべてチェックしてください。<img src=\"https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress16-700x334.png\" alt=\"\" class=\"alignnone size-medium wp-image-6850\" srcset=\"https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress16-700x334.png 700w, https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress16-768x367.png 768w, https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress16.png 890w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<p>どこからリンクされているかは、下のタブ「Inlinks」に情報が載っているので該当のページを確認して修正するようにしましょう。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/06/static-to-wordpress17.png\" alt=\"\" class=\"alignnone size-full wp-image-6851\" /></p>\n<h2><span id=\"i-11\">おわり</span></h2><div class=\"matome\"><div class=\"matome-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"></div><div class=\"matome-twitter\"><a href=\"https://twitter.com/haniwa008?ref_src=twsrc%5Etfw\" class=\"twitter-follow-button\" data-show-screen-name=\"false\" data-size=\"large\" data-lang=\"ja\" data-show-count=\"true\">Follow @haniwa008</a><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></div></div><!-- /matome -->\n<p>めちゃくちゃ駆け足で、静的HTMLファイルからWordPress化する流れを紹介しました。WordPressの知識がある方なら、ここまでの説明で対応できるようになるはずです。<br />\n（分からない方はわたしに依頼してください笑）</p>\n<p>静的ファイルで作られたサイトの方が少ないんじゃないかってくらい最近は見なくなりましたね。この記事がWordPress化を考えている人の少しでも役に立てば嬉しく思います。</p>\n","date":"June 22, 2018","categories":[{"name":"WordPress","slug":"wordpress"}],"tags":null,"author":{"name":"はにわまん","slug":"haniwaman"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"6e14f3cf-2180-5e59-b5b7-ad0d1001ae01"}}}