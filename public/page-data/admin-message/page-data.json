{"componentChunkName":"component---src-templates-post-js","path":"/admin-message/","result":{"data":{"wordpressPost":{"id":"393920b6-f89f-5cf5-a401-01366f931d1a","title":"プラグインでよく見るWordPresssの管理画面に独自のメッセージを表示する方法","slug":"admin-message","content":"<p>管理画面に独自のメッセージを表示させる方法です。プラグインを作る時によく使われる書き方なので、覚えておくと自作した管理画面を作る時に抵抗がなくなるかもしれません。</p>\n<p>メッセージはユーザーが分かりやすく安心して使ってもらうために大事な要素だと思っています。管理画面にメッセージを追加してより使いやすい管理画面にしてあげましょう！</p>\n<div class=\"chat\"><figure class=\"chat-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"><figcaption>はにわまん</figcaption></figure><div class=\"chat-content\">メッセージばかりも邪魔になるので、バランスは大事かもしれません。</div></div>\n<div id=\"toc_container\" class=\"no_bullets\"><p class=\"toc_title\">目次</p><ul class=\"toc_list\"><li><a href=\"#i\"><span class=\"toc_number toc_depth_1\">1</span> 管理画面にメッセージを表示する方法</a><ul><li><a href=\"#i-2\"><span class=\"toc_number toc_depth_2\">1.1</span> 常に表示させているパターン</a></li><li><a href=\"#i-3\"><span class=\"toc_number toc_depth_2\">1.2</span> 特定のタイミングだけ表示させるパターン</a></li></ul></li><li><a href=\"#HTML\"><span class=\"toc_number toc_depth_1\">2</span> メッセージを表示させるHTMLパターン</a><ul><li><a href=\"#i-4\"><span class=\"toc_number toc_depth_2\">2.1</span> 赤のメッセージ</a></li><li><a href=\"#i-5\"><span class=\"toc_number toc_depth_2\">2.2</span> 緑のメッセージ</a></li><li><a href=\"#i-6\"><span class=\"toc_number toc_depth_2\">2.3</span> 独自の見栄えも可能</a></li></ul></li><li><a href=\"#i-7\"><span class=\"toc_number toc_depth_1\">3</span> おわり</a></li></ul></div>\n<h2><span id=\"i\">管理画面にメッセージを表示する方法</span></h2>\n<p>管理画面にメッセージをっ表示させる方法をいろんなパターンで見ていきたいと思います！</p>\n<h3><span id=\"i-2\">常に表示させているパターン</span></h3>\n<p>管理画面の全てで登場するようになります。<strong class=\"marker\">管理画面でメッセージを表示させるための基本の書き方</strong>です。</p>\n<pre><span class=\"filename\">functions.php</span><span class=\"code-copy\" data-clipboard-target=\"#code-0\">コピー</span><code id=\"code-0\" class=\"php\">function my_admin_notices() {\r\n\techo '&lt;div class=\"error\"&gt;&lt;p&gt;メッセージ内容&lt;/p&gt;&lt;/div&gt;';\r\n}\r\nadd_action( 'admin_notices', 'my_admin_notices' );</code></pre>\n<p><span class=\"filename\">functions.php</span>に上記の記述を追記すれば、常に管理画面で表示される状態となります。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/07/admin-messege2.png\" alt=\"\" width=\"250\" class=\"alignnone size-full wp-image-15914\" /></p>\n<h3><span id=\"i-3\">特定のタイミングだけ表示させるパターン</span></h3>\n<p>なにか管理画面でアクションを行った時にメッセージを表示してほしいケースがほとんどだと思います。特定のタイミングでメッセージを表示させるには、なにか特定の条件を指定してあげましょう。</p>\n<h4>特定の投稿タイプだけ表示させたいパターン</h4>\n<p><code>store</code>という投稿タイプのときだけ表示させたい場合は以下のように記述します。</p>\n<pre><span class=\"filename\">functions.php</span><span class=\"code-copy\" data-clipboard-target=\"#code-1\">コピー</span><code id=\"code-1\" class=\"php\">function my_admin_notices() {\r\n\tglobal $post;\r\n\tif ( isset( $post ) ) {\r\n\t\tif ( 'store' === $post-&gt;post_type ) {\r\n\t\t\techo '&lt;div class=\"error\"&gt;&lt;p&gt;メッセージ内容&lt;/p&gt;&lt;/div&gt;';\r\n\t\t}\r\n\t}\r\n}\r\nadd_action( 'admin_notices', 'my_admin_notices' );</code></pre>\n<h4>特定の管理画面のページだけ表示させたいパターン</h4>\n<p>管理画面用のグローバル変数<code>$pagenow</code>を使うことで、管理画面内のページを判定してメッセージを表示させることができます。以下は外観 → テーマでのみ表示させる例です。</p>\n<pre><span class=\"filename\">functions.php</span><span class=\"code-copy\" data-clipboard-target=\"#code-2\">コピー</span><code id=\"code-2\" class=\"php\">function my_admin_notices() {\r\n\tglobal $pagenow;\r\n\tif ( 'themes.php' === $pagenow ) {\r\n\t\techo '&lt;div class=\"error\"&gt;&lt;p&gt;メッセージ内容&lt;/p&gt;&lt;/div&gt;';\r\n\t}\r\n}\r\nadd_action( 'admin_notices', 'my_admin_notices' );</code></pre>\n<p>ifの中で指定している「themes.php」は管理画面のURLの「/wp-admin/」の後に続くphpファイル名を指定してあげればOKかと思います。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/07/admin-messege4.png\" alt=\"\" width=\"200\" class=\"alignnone size-full wp-image-15921\" /></p>\n<p>例えば、以下のような対応です。</p>\n<ul>\n<li>設定→一般・・・options-general.php</li>\n<li>設定→パーマリンク設定・・・options-permalink.php</li>\n<li>プラグイン→インストール済みプラグイン・・・plugins.php</li>\n<li>外観→ウィジェット・・・widgets.php</li>\n<li>外観→テーマ・・・themes.php</li>\n<li>外観→メニュー・・・nav-menus.php</li>\n</ul>\n<h4>更新直後だけに表示させたいパターン</h4>\n<p>標準でも管理画面から記事を更新すると、「更新しました」みたいなメッセージが表示されるかと思います。この判定はカスタムフィールドやオプションとしてデータベースに判定用の値を持たせることで実現しています。</p>\n<p>手順としては、保存時に判定用の値も保存 → 保存した値を判定してメッセージを表示 → 判定用の値を元に戻して2回目は表示されないようにする、という流れになります。</p>\n<p>保存の場所はどこでもいいのですが、ユーザー情報を更新する時を例にしてみました。まずは、<code>pre_user_first_name</code>でユーザー情報の保存と一緒に判定用の値（<code>_is_my_update</code>）も登録します。</p>\n<pre><span class=\"filename\">functions.php</span><span class=\"code-copy\" data-clipboard-target=\"#code-3\">コピー</span><code id=\"code-3\" class=\"php\">function my_pre_user_first_name() {\r\n\tset_theme_mod( '_is_my_update', 'true' );\r\n}\r\nadd_filter( 'pre_user_first_name', 'my_pre_user_first_name' );</code></pre>\n<p>続いて、保存した値を判定してメッセージを表示 + 判定用の値を元に戻して2回目は表示されないようにするの記述をメッセージの表示部分に記載します。</p>\n<pre><span class=\"filename\">functions.php</span><span class=\"code-copy\" data-clipboard-target=\"#code-4\">コピー</span><code id=\"code-4\" class=\"php\">function my_admin_notices() {\r\n\r\n\tif ( 'true' === get_theme_mod( '_is_my_update' ) ) {\r\n\t\techo '&lt;div class=\"error\"&gt;&lt;p&gt;メッセージ内容&lt;/p&gt;&lt;/div&gt;';\r\n\t\tset_theme_mod( '_is_my_update', 'false' );\r\n\t}\r\n}\r\nadd_action( 'admin_notices', 'my_admin_notices' );</code></pre>\n<p>保存時に<code>_is_my_update</code>の値を<code>true</code>として指定して、メッセージを呼び出した後は<code>false</code>に変更することで、「<strong class=\"marker\">保存したタイミングだけメッセージを表示する</strong>」という見かけ上の動きをさせることが可能になります。</p>\n<p>このデータベースに判定用の値を保存するという方法は自作プラグインを作る時に使えるかと思います。</p>\n<h2><span id=\"HTML\">メッセージを表示させるHTMLパターン</span></h2>\n<p>メッセージを表示させるための基本的な型としては以下のような感じです。このクラスの値を変えることで赤や緑といった色の違いを出しています。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-5\">コピー</span><code id=\"code-5\" class=\"html\">&lt;div class=\"error\"&gt;&lt;p&gt;メッセージ内容&lt;/p&gt;&lt;/div&gt;\r\n</code></pre>\n<h3><span id=\"i-4\">赤のメッセージ</span></h3>\n<p><code>error</code>クラスを適応すると、赤色のメッセージとなります。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/07/admin-messege2.png\" alt=\"\" width=\"250\" class=\"alignnone size-full wp-image-15914\" /></p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-5\">コピー</span><code id=\"code-5\" class=\"html\">&lt;div class=\"error\"&gt;&lt;p&gt;メッセージ内容&lt;/p&gt;&lt;/div&gt;\r\n</code></pre>\n<h3><span id=\"i-5\">緑のメッセージ</span></h3>\n<p><code>updated</code>クラスを適応すると、緑色のメッセージとなります。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/07/admin-messege1.png\" alt=\"\" width=\"250\" class=\"alignnone size-full wp-image-15915\" /></p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-7\">コピー</span><code id=\"code-7\" class=\"html\">&lt;div class=\"updated\"&gt;&lt;p&gt;メッセージ内容&lt;/p&gt;&lt;/div&gt;\r\n</code></pre>\n<h3><span id=\"i-6\">独自の見栄えも可能</span></h3>\n<p>HTMLやCSSが自由に設定できるということは、独自の見栄えで表現することが可能ということです。簡単に独自のスタイルを適応させる方法を見ていこうと思います。</p>\n<p>めっちゃ簡単な変更ですが背景を赤くして文字を白くするっていう変更を行います。こんな感じです。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/07/admin-messege3.png\" alt=\"\" width=\"250\" class=\"alignnone size-full wp-image-15917\" /></p>\n<h4>管理画面用のCSS追加</h4>\n<p>まずは、管理画面用に独自のCSSを読み込ませてあげる必要があります。</p>\n<pre><span class=\"filename\">functions.php</span><span class=\"code-copy\" data-clipboard-target=\"#code-8\">コピー</span><code id=\"code-8\" class=\"php\">function my_admin_style() {\r\n\twp_enqueue_style( 'my-admin', get_template_directory_uri() . '/css/my_admin.css', array(), '1.0.0', 'all' );\r\n}\r\nadd_action( 'admin_enqueue_scripts', 'my_admin_style' );</code></pre>\n<p><code>wp_enqueue_scripts</code>の管理画面版というイメージを持ってもらえたらと思います。テーマフォルダ内にある<span class=\"folder\">css</span>フォルダ配下に<span class=\"filename\">my_admin.css</span>ファイルを追加してあげてください。</p>\n<h4>CSSの追加</h4>\n<p>そして、<span class=\"filename\">my_admin.css</span>に独自のCSSを書いていきます。これはもともとの<code>.error</code>クラスを上書きする形で、背景を赤くして文字を白くするという指定ですね。</p>\n<pre><span class=\"filename\">css/my_admin.css</span><span class=\"code-copy\" data-clipboard-target=\"#code-9\">コピー</span><code id=\"code-9\" class=\"css\">.error.my-error {\r\n\tbackground: #e57373;\r\n\tcolor: #fff;\r\n}</code></pre>\n<h4>クラスの追加</h4>\n<p>最後に表示させるHTMLに<code>my-error</code>の独自のクラスを追加してあげます。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-10\">コピー</span><code id=\"code-10\" class=\"php\">function my_admin_notices() {\r\n\techo '&lt;div class=\"my-error error\"&gt;&lt;p&gt;メッセージ内容&lt;/p&gt;&lt;/div&gt;';\r\n}\r\nadd_action( 'admin_notices', 'my_admin_notices' );</code></pre>\n<h2><span id=\"i-7\">おわり</span></h2><div class=\"matome\"><div class=\"matome-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"></div><div class=\"matome-twitter\"><a href=\"https://twitter.com/haniwa008?ref_src=twsrc%5Etfw\" class=\"twitter-follow-button\" data-show-screen-name=\"false\" data-size=\"large\" data-lang=\"ja\" data-show-count=\"true\">Follow @haniwa008</a><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></div></div><!-- /matome -->\n<p>WordPresssの管理画面に独自のメッセージを表示する方法でした。管理画面がグーテンベルクになってこういった昔風のメッセージ表示は淘汰されていくのかもと思ったり&#8230;</p>\n<p>自作プラグインを作る上でメッセージはユーザーに分かりやすく安心して使ってもらう上で大事だと思います。<code>admin_notices</code>は管理画面を更新するたびに常に呼び出されているっぽい動きなので、条件分岐して好きなタイミングで表示させてあげてください！</p>\n","date":"July 10, 2019","categories":[{"name":"WordPress","slug":"wordpress"}],"tags":null,"author":{"name":"はにわまん","slug":"haniwaman"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"393920b6-f89f-5cf5-a401-01366f931d1a"}}}