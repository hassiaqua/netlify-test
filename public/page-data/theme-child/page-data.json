{"componentChunkName":"component---src-templates-post-js","path":"/theme-child/","result":{"data":{"wordpressPost":{"id":"c4b5fe68-a31c-5e96-9e1b-0cd03b3a2d83","title":"子テーマの作り方と親テーマのテンプレートファイルとの関係","slug":"theme-child","content":"<p><strong style=\"color:#0288D1\">クライアント「テーマ更新したら前に対応してもらったカスタマイズが消えました( ；∀；)」</strong><br />\n<strong>わたし（・・・やってしまった）</strong></p>\n<p>これは、わたしがWordPressカスタマイズ対応を始めて間もないころに対応したお客様とのやり取りになります。カスタマイズした<strong class=\"marker\">テーマがアップデートされて更新すると、わたしが対応したファイルは無慈悲に跡形もなく上書きされてしまう</strong>のです。</p>\n<p>この悲劇を防ぐために、テーマが更新されようとも影響を受けない「子テーマ」で作らなければなりませんでした。子テーマとは、元となるテーマの機能を引き継ぎつつも、上乗せで機能を追加することのできるテーマのことです。元とするテーマの更新に依存しません。</p>\n<p><strong>WordPressをカスタマイズする時は、子テーマを作ることを推奨します。</strong><br />\n（子テーマにしないならテーマの更新はしないようにしましょう）</p>\n<p>ということで、子テーマの作り方とカスタマイズ方法について紹介していきます。</p>\n<div class=\"chat\"><figure class=\"chat-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"><figcaption>はにわまん</figcaption></figure><div class=\"chat-content\">基本的に親テーマには触ってはいけません！</div></div>\n<div id=\"toc_container\" class=\"no_bullets\"><p class=\"toc_title\">目次</p><ul class=\"toc_list\"><li><a href=\"#i\"><span class=\"toc_number toc_depth_1\">1</span> 子テーマの作り方</a><ul><li><a href=\"#-child\"><span class=\"toc_number toc_depth_2\">1.1</span> [親テーマ名]-childでテーマフォルダ作成</a></li><li><a href=\"#stylecss\"><span class=\"toc_number toc_depth_2\">1.2</span> style.cssに親テーマを指定</a></li></ul></li><li><a href=\"#i-2\"><span class=\"toc_number toc_depth_1\">2</span> 子テーマのカスタマイズ方法</a><ul><li><a href=\"#i-3\"><span class=\"toc_number toc_depth_2\">2.1</span> 親テーマと一緒に読み込まれるパターン</a></li><li><a href=\"#i-4\"><span class=\"toc_number toc_depth_2\">2.2</span> 親テーマが無効化されるパターン</a></li></ul></li><li><a href=\"#i-5\"><span class=\"toc_number toc_depth_1\">3</span> 親テーマから編集したい箇所だけ子テーマに足していく</a></li><li><a href=\"#i-6\"><span class=\"toc_number toc_depth_1\">4</span> おわり</a></li></ul></div>\n<h2><span id=\"i\">子テーマの作り方</span></h2>\n<p>子テーマはめっちゃ簡単に作れます。</p>\n<p>WordPressをインストールしたら標準で入っている「<a href=\"https://ja.wordpress.org/themes/twentyseventeen/\" rel=\"noopener\" target=\"_blank\">Twenty Seventeen</a>」を例に、この子テーマを作っていきます。</p>\n<h3><span id=\"-child\"><span class=\"folder\">[親テーマ名]-child</span>でテーマフォルダ作成</span></h3>\n<p><span class=\"folder\">[親テーマ名]-child</span> でフォルダを作成します。（名前は何でもいいのですが、「-child」とつけるのが一般的な気がします）<br />\n<span class=\"folder\">/wp-content/themes/</span>フォルダの中に作成します。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/06/theme-child.png\" alt=\"\" class=\"alignnone size-full wp-image-7150\" /></p>\n<h3><span id=\"stylecss\"><span class=\"filename\">style.css</span>に親テーマを指定</span></h3>\n<p>作成した子テーマ用フォルダ内に<span class=\"filename\">style.css</span>を作成します。そして、機能を引き継ぐ元となる<strong class=\"marker\">親テーマのテーマフォルダ名</strong>を指定してください。</p>\n<p>親テーマフォルダ名とは以下の名前のことです！<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/06/theme-child3.png\" alt=\"\" class=\"alignnone size-full wp-image-7161\" /></p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-0\">コピー</span><code id=\"code-0\" class=\"css\">/* \r\n\tTemplate: twentyseventeen\r\n*/\r\n</code></pre>\n<p>すると、管理画面上にも子テーマとして反映されるようになります！<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/06/theme-child2-700x317.png\" alt=\"\" class=\"alignnone size-medium wp-image-7151\" srcset=\"https://haniwaman.com/wp-content/uploads/2018/06/theme-child2-700x317.png 700w, https://haniwaman.com/wp-content/uploads/2018/06/theme-child2-768x348.png 768w, https://haniwaman.com/wp-content/uploads/2018/06/theme-child2.png 886w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<p>テーマの詳細を見てみると、「これは Twenty Seventeen の子テーマです。」としっかりと記載されています。</p>\n<p>これで子テーマが作成できました。親テーマを指定しただけなので「有効化」しても<strong class=\"marker\">親テーマと全く同じデザイン、振る舞い（機能）になります</strong>。</p>\n<p>子テーマの作成ってめちゃくちゃ簡単じゃないですか？</p>\n<h2><span id=\"i-2\">子テーマのカスタマイズ方法</span></h2>\n<p>テーマにはテンプレートファイルがあります。今は<span class=\"filename\">style.css</span>しか設置していない状況ですが、他のファイルを置いたときの振舞いはどうなるのでしょうか？</p>\n<p>テンプレートファイルによって扱われ方が変わってくるので、少し見ていきましょう。</p>\n<h3><span id=\"i-3\">親テーマと一緒に読み込まれるパターン</span></h3>\n<p>子テーマに置いてあるテンプレートファイルも、親テーマに置いてあるテンプレートファイルも読み込まれるパターンです。</p>\n<ul>\n<li><span class=\"filename\">style.css</span></li>\n<li><span class=\"filename\">functions.php</span></li>\n</ul>\n<p><span class=\"filename\">style.css</span>の読み込まれる順番は、</p>\n<ol>\n<li>子テーマの<span class=\"filename\">style.css</span></li>\n<li>親テーマの<span class=\"filename\">style.css</span></li>\n</ol>\n<p>という風に<strong class=\"marker\">なぜか子テーマが先に読み込まれます</strong>。親テーマ → 子テーマの順でCSSを読み込ませたい場合は、以下のよう子テーマの<span class=\"filename\">functions.php</span>に指定しましょう。</p>\n<pre><span class=\"filename\">functions.php</span><span class=\"code-copy\" data-clipboard-target=\"#code-1\">コピー</span><code id=\"code-1\" class=\"php\">&lt;?php\r\nadd_action( 'wp_enqueue_scripts', 'theme_enqueue_styles' );\r\nfunction theme_enqueue_styles() {\r\n    wp_enqueue_style( 'parent-style', get_template_directory_uri() . '/style.css' );\r\n}\r\n?&gt;</code></pre>\n<p>参考：<a href=\"http://wpdocs.osdn.jp/%E5%AD%90%E3%83%86%E3%83%BC%E3%83%9E\" rel=\"noopener\" target=\"_blank\">子テーマ &#8211; WordPress Codex 日本語版</a></p>\n<p><span class=\"filename\">functions.php</span>は親テーマの「機能」を引き継いで、<span class=\"filename\">style.css</span>は親テーマの「デザイン」を引き継ぐというイメージですね。</p>\n<h3><span id=\"i-4\">親テーマが無効化されるパターン</span></h3>\n<p>子テーマに置くと親テーマのテンプレートファイルが完全に無視されるテンプレートファイルです。</p>\n<ul>\n<li><span class=\"filename\">single.php</span></li>\n<li><span class=\"filename\">page.php</span></li>\n<li><span class=\"filename\">index.php</span></li>\n<li><span class=\"filename\">archive.php</span></li>\n</ul>\n<p>など。<br />\n（<span class=\"filename\">functions.php</span>と<span class=\"filename\">style.css</span>以外のファイルという覚え方でもいいかもしれません）</p>\n<p>これらのファイルが子テーマにあれば、親テーマの同ファイルは完全に無効化されます。</p>\n<p>「個別ページの内容をカスタマイズしたい」という場合なら、親テーマの<span class=\"filename\">page.php</span>をコピーして子テーマ上でカスタマイズしていけば、親テーマは何も編集せずともカスタマイズができるわけです。</p>\n<p>子テーマの内容が反映されるわけなので、親テーマが更新されようとも影響を受けません。</p>\n<h2><span id=\"i-5\">親テーマから編集したい箇所だけ子テーマに足していく</span></h2>\n<p>子テーマを作る際は、親テーマに不足している部分を「<strong>足していく</strong>」という感覚を持つといいかと思います。</p>\n<p>とりあえず、親テーマのファイルを全部コピーしているような子テーマを見かけますが、どの部分が足されているのかが全く分かりません。</p>\n<p><span class=\"filename\">single.php</span>と<span class=\"filename\">header.php</span>しかない子テーマであれば、「あー記事ページとヘッダーに何か追加（カスタマイズ）したんだろうな」って分かりやすくなります。分かりやすいということは管理しやすいということです。</p>\n<p>なので、子テーマを作ってカスタマイズする際にも、どのテンプレートファイルを修正すればいいのか判断する目が必要ってことですね。</p>\n<h2><span id=\"i-6\">おわり</span></h2><div class=\"matome\"><div class=\"matome-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"></div><div class=\"matome-twitter\"><a href=\"https://twitter.com/haniwa008?ref_src=twsrc%5Etfw\" class=\"twitter-follow-button\" data-show-screen-name=\"false\" data-size=\"large\" data-lang=\"ja\" data-show-count=\"true\">Follow @haniwa008</a><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></div></div><!-- /matome -->\n<p>子テーマの作り方と子テーマに設置したテンプレートファイルの親テーマとの関係性でした。</p>\n<p>テーマを直接カスタマイズするのではなく、よほどの理由がない限りは子テーマを作成した方が悲劇は起きづらいです。めっちゃ簡単に作れますので、テーマをカスタマイズする際は、子テーマを作りましょう（自戒も込めて）</p>\n","date":"June 24, 2018","categories":[{"name":"WordPress","slug":"wordpress"}],"tags":null,"author":{"name":"はにわまん","slug":"haniwaman"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"c4b5fe68-a31c-5e96-9e1b-0cd03b3a2d83"}}}