{"componentChunkName":"component---src-templates-post-js","path":"/calc/","result":{"data":{"wordpressPost":{"id":"0571b495-f986-5bd7-9840-ee6bb8d5f99d","title":"CSSの「calc」と「nth-child」を組み合わせて余白を意識した横並び","slug":"calc","content":"<p>レスポンシブサイトでアイテムを横並びにする時のCSSの指定方法です。ウインドウサイズを変更したときに、ガタガタせずにスムーズに均等に縮めたりするには、<strong class=\"marker\">CSSの<code>calc</code>関数を使って余白を計算させながらパーセント指定</strong>すると、いい感じになります。</p>\n<p>また、余白の制御でもう1つ使っていきたいのが、<code>nth-child</code>という疑似クラスです。改行手前のアイテムには余白を持たせないといったような処理ができるので、デザインカンプの再現度を高めることができます。</p>\n<p>この記事では、<code>calc</code>と<code>nth-child</code>を使った再現度の高いアイテムの横並び方法を紹介していきます。</p>\n<div class=\"chat\"><figure class=\"chat-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"><figcaption>はにわまん</figcaption></figure><div class=\"chat-content\">calcはCSSで使える珍らしい演算関数です。</div></div>\n<div id=\"toc_container\" class=\"no_bullets\"><p class=\"toc_title\">目次</p><ul class=\"toc_list\"><li><a href=\"#50px\"><span class=\"toc_number toc_depth_1\">1</span> 左右の余白はゼロ、間の余白が50pxのパターン</a><ul><li><a href=\"#margin\"><span class=\"toc_number toc_depth_2\">1.1</span> １、余白のmarginを指定する</a></li><li><a href=\"#50px-2\"><span class=\"toc_number toc_depth_2\">1.2</span> ２、溢れないように50px分を引いてみる</a></li><li><a href=\"#0px\"><span class=\"toc_number toc_depth_2\">1.3</span> ３、○個目のアイテムの余白は0px、かつ間の余白も調整</a></li><li><a href=\"#i\"><span class=\"toc_number toc_depth_2\">1.4</span> ４、幅に応じて余白を変更する</a></li><li><a href=\"#nth-child\"><span class=\"toc_number toc_depth_2\">1.5</span> ５、表示する列数を変える場合はnth-childの場所も変える</a></li></ul></li><li><a href=\"#i-2\"><span class=\"toc_number toc_depth_1\">2</span> おわり</a></li></ul></div>\n<h2><span id=\"50px\">左右の余白はゼロ、間の余白が50pxのパターン</span></h2>\n<p>よくあるデザインカンプが以下のようにアイテムが並んでいて、左右の余白はゼロでアイテム間の余白だけが存在するパターンかと思います。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/01/calc-700x459.png\" alt=\"\" class=\"alignnone size-medium wp-image-12230\" srcset=\"https://haniwaman.com/wp-content/uploads/2019/01/calc-700x459.png 700w, https://haniwaman.com/wp-content/uploads/2019/01/calc-768x503.png 768w, https://haniwaman.com/wp-content/uploads/2019/01/calc.png 1108w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<p>この例で一覧の作り方をみていこうと思います。横並びの方法としては<code>display: flex;</code>を使用します。</p>\n<p>とりあえず、余白を無視して<code>width: 33.33333333%;</code>で並べた状態を作ってみます。<code>margin:0;</code>なので、びっちり詰まっていますね。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/01/calc2-700x435.png\" alt=\"\" class=\"alignnone size-medium wp-image-12233\" srcset=\"https://haniwaman.com/wp-content/uploads/2019/01/calc2-700x435.png 700w, https://haniwaman.com/wp-content/uploads/2019/01/calc2-768x477.png 768w, https://haniwaman.com/wp-content/uploads/2019/01/calc2-1200x746.png 1200w, https://haniwaman.com/wp-content/uploads/2019/01/calc2.png 1583w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-0\">コピー</span><code id=\"code-0\" class=\"css\">.items {\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n}\r\n\r\n.item {\r\n\tbox-sizing: border-box;\r\n\tborder-radius: 8px;\r\n\tbox-shadow: 0 0 5px rgba(17, 51, 72, 0.2);\r\n\tcolor: #3c3c3c;\r\n\tmargin: 0;\r\n\tpadding: 20px 20px 22px 20px;\r\n\ttext-decoration: none;\r\n\ttransition: all 0.3s ease 0s;\r\n\twidth: 33.33333333%;\r\n}</code></pre>\n<h3><span id=\"margin\">１、余白の<code>margin</code>を指定する</span></h3>\n<p>今回は、アイテム間の余白が50pxなので、とりあえず<code>margin: 0 50px 50px 0;</code>を指定してみます。右と下に50pxを余白をつけるといったものですね。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-1\">コピー</span><code id=\"code-1\" class=\"css\">.item {\r\n\tmargin: 0 50px 50px 0;\r\n}</code></pre>\n<p>カラム落ちしてしまいました。カラム落ちとは、横幅に入りきらないから下に改行されてしまっている状態ですね。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/01/calc3-700x589.png\" alt=\"\" class=\"alignnone size-medium wp-image-12236\" srcset=\"https://haniwaman.com/wp-content/uploads/2019/01/calc3-700x589.png 700w, https://haniwaman.com/wp-content/uploads/2019/01/calc3-768x646.png 768w, https://haniwaman.com/wp-content/uploads/2019/01/calc3-1200x1010.png 1200w, https://haniwaman.com/wp-content/uploads/2019/01/calc3.png 1465w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<p>これは、それぞれの<code>.item</code>が持っている横のサイズが、33.33333333%（width） + 50px（margin-right）となっているためですね。横幅は33.33333333%ですでに限界なので、50pxがそれぞれのアイテムに付いたことで溢れてしまっている状態です。</p>\n<h3><span id=\"50px-2\">２、溢れないように50px分を引いてみる</span></h3>\n<p>ここで<code>calc</code>関数の登場です。calcの優れているところは<strong class=\"marker\">パーセントと固定値でも計算できる</strong>点にあると思っています。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-2\">コピー</span><code id=\"code-2\" class=\"css\">.item {\r\n\tmargin: 0 50px 50px 0;\r\n\twidth: calc(33.33333333% - 50px);\r\n}</code></pre>\n<p>カラム落ちがなくなりました！！！<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/01/calc4-700x475.png\" alt=\"\" class=\"alignnone size-medium wp-image-12238\" srcset=\"https://haniwaman.com/wp-content/uploads/2019/01/calc4-700x475.png 700w, https://haniwaman.com/wp-content/uploads/2019/01/calc4-768x521.png 768w, https://haniwaman.com/wp-content/uploads/2019/01/calc4-1200x814.png 1200w, https://haniwaman.com/wp-content/uploads/2019/01/calc4.png 1461w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<p>ただし、まだ問題があります。それは、３つ目のアイテムにも<code>margin-right: 50px;</code>があることで、左右がピッタリ合わないということです。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/01/calc5-700x476.png\" alt=\"\" class=\"alignnone size-medium wp-image-12240\" srcset=\"https://haniwaman.com/wp-content/uploads/2019/01/calc5-700x476.png 700w, https://haniwaman.com/wp-content/uploads/2019/01/calc5-768x522.png 768w, https://haniwaman.com/wp-content/uploads/2019/01/calc5-1200x816.png 1200w, https://haniwaman.com/wp-content/uploads/2019/01/calc5.png 1463w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<h3><span id=\"0px\">３、○個目のアイテムの余白は<code>0px</code>、かつ間の余白も調整</span></h3>\n<p>まずは、○個目のアイテムの余白は<code>0px</code>にするという指定を入れてみます。利用するCSSは<code>nth-child()</code>という疑似クラスです。これは、○個目のアイテムに対する処理を指定できるものになります。</p>\n<p>3の倍数で処理を当てたいので<code>3n</code>として以下のように指定します。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-3\">コピー</span><code id=\"code-3\" class=\"css\">.item:nth-child(3n) {\r\n    margin-right: 0;\r\n}</code></pre>\n<p>続いて、アイテムの幅を調整します。必要な余白は３つのアイテムの間にある50pxと50pxになります。合計すると100pxです。</p>\n<p>この100pxを３つのアイテムに均等に分け与えてあげると、100px / 3 = 34px（小数点以下を切り上げ）になります。それぞれの33.333333%から34pxを引いてあげれば、余白は常に一定だけをアイテムは可変にすることができます。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-4\">コピー</span><code id=\"code-4\" class=\"css\">.item {\r\n\tmargin: 0 50px 50px 0;\r\n\twidth: calc(33.3333333% - 34px);\r\n}</code></pre>\n<p>もしくは、以下のような書き方でもいいかもしれません。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-5\">コピー</span><code id=\"code-5\" class=\"css\">.item {\r\n\tmargin: 0 50px 50px 0;\r\n\twidth: calc(33.3333333% - 100px / 3);\r\n}</code></pre>\n<p>間の余白が50pxで他は均等にレスポンシブ化されているのが分かります。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/01/calc.gif\" alt=\"\" class=\"alignnone size-full wp-image-12243\" /></p>\n<h3><span id=\"i\">４、幅に応じて余白を変更する</span></h3>\n<p>どの幅でも50pxの余白だととても不格好です。やはりウインドウ幅が小さくなれば応じて余白も小さくしていかなとバランスが取れません。</p>\n<p>例えば、ある一定の幅以下になったら余白は30pxにするとします。アイテムの幅の計算方法も上記と同じで、30pxの余白が2つで60px。これを3つのアイテムで割る、ということを行えばOKです。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-6\">コピー</span><code id=\"code-6\" class=\"css\">@media screen and (max-width: 1179px) {\r\n\t.item {\r\n\t\tmargin-right: 30px;\r\n\t\twidth: calc(33.3333333% - 60px / 3);\r\n\t}\r\n}</code></pre>\n<p>幅に応じで余白が変わっているのが分かるかと思います（アイテムは3等分）<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/01/calc2.gif\" alt=\"\" class=\"alignnone size-full wp-image-12250\" /></p>\n<h3><span id=\"nth-child\">５、表示する列数を変える場合は<code>nth-child</code>の場所も変える</span></h3>\n<p>今はずっと3列にしていますが、表示する列の数を変えたい場合は、<code>nth-child()</code>の値を変えないと、余白の間隔がおかしくなります。</p>\n<p>1179px以下では2列にする場合は以下のような感じになります。※ 最低限のプロパティしか書いていません。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-7\">コピー</span><code id=\"code-7\" class=\"css\">.item {\r\n\tmargin: 0 50px 50px 0;\r\n\twidth: calc(33.3333333% - 100px / 3);\r\n}\r\n\r\n.item:nth-child(3n) {\r\n\tmargin-right: 0;\r\n}\r\n\r\n@media screen and (max-width: 1179px) {\r\n\t.item {\r\n\t\twidth: calc(50% - 50px / 2);\r\n\t}\r\n\r\n\t.item:nth-child(3n) {\r\n\t\tmargin-right: 50px;\r\n\t}\r\n\r\n\t.item:nth-child(2n) {\r\n\t\tmargin-right: 0;\r\n\t}\r\n}</code></pre>\n<p>3カラムと2カラムがスムーズに違和感なく移り変わっているのが分かるかと思います。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/01/calc3.gif\" alt=\"\" class=\"alignnone size-full wp-image-12249\" /></p>\n<p>こんな感じで、カラム数とレスポンス時の対応によって<code>nth-child</code>と<code>width</code>の値を余白のとり方によって変動させていくといい感じになるかと思います。</p>\n<h2><span id=\"i-2\">おわり</span></h2><div class=\"matome\"><div class=\"matome-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"></div><div class=\"matome-twitter\"><a href=\"https://twitter.com/haniwa008?ref_src=twsrc%5Etfw\" class=\"twitter-follow-button\" data-show-screen-name=\"false\" data-size=\"large\" data-lang=\"ja\" data-show-count=\"true\">Follow @haniwa008</a><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></div></div><!-- /matome -->\n<p><code>width</code>と<code>nth-child</code>を活用して<strong class=\"marker\">余白を意識した横並び</strong>の方法でした。ここまで厳密に計算する必要があるかどうかは案件次第かもしれませんが、デザインカンプからちゃんと再現しようと思ったときに、この書き方が自分の中で一番しっくり来たので今のところ採用しています。</p>\n<p>（他にいい感じのやり方があったら教えてください＞＜）</p>\n","date":"January 08, 2019","categories":[{"name":"CSS","slug":"css"}],"tags":null,"author":{"name":"はにわまん","slug":"haniwaman"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"0571b495-f986-5bd7-9840-ee6bb8d5f99d"}}}