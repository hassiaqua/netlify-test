{"componentChunkName":"component---src-templates-post-js","path":"/prettier-wordpress/","result":{"data":{"wordpressPost":{"id":"7b0876bb-2bcc-5a07-9748-dd1ba0b0625b","title":"VSCodeでPrettierを使ってWordPressのコーディング規約に沿った自動フォーマットする方法","slug":"prettier-wordpress","content":"<p>Prettierは、<strong>JavaScript</strong>と<strong>CSS</strong>のコードをフォーマットしてくれるツールのことです。</p>\n<p>何がすごいって、ESLintであったりstylelintのようなコード検証ツールの設定を指定すれば、その設定に沿ったフォーマットで整形してくれるところ！ESLintなどの検証で出現したエラー箇所を<strong class=\"marker\">手で直す必要はなく<span class=\"font-l\">自動で</span>フォーマットしてくれる</strong>のです。</p>\n<p>実際の動き↓<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/08/prettier-wordpress.gif\" alt=\"\" class=\"alignnone size-full wp-image-8194\" /></p>\n<p>こんな便利なPrettierを使わない理由はありません！VSCodeに導入してコード保存時にフォーマットされるような環境を作っていきましょう。</p>\n<div class=\"chat\"><figure class=\"chat-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"><figcaption>はにわまん</figcaption></figure><div class=\"chat-content\">自動フォーマットとの出会いは衝撃的でした。楽すぎます～(´；ω；｀)</div></div>\n<div id=\"toc_container\" class=\"no_bullets\"><p class=\"toc_title\">目次</p><ul class=\"toc_list\"><li><a href=\"#npm\"><span class=\"toc_number toc_depth_1\">1</span> npmで色々インストール</a></li><li><a href=\"#lint\"><span class=\"toc_number toc_depth_1\">2</span> プロジェクト内にlintを制御するファイルを設置</a></li><li><a href=\"#VSCodePrettier\"><span class=\"toc_number toc_depth_1\">3</span> VSCodeにPrettierの拡張機能を追加</a><ul><li><a href=\"#i\"><span class=\"toc_number toc_depth_2\">3.1</span> 保存時に自動整形（フォーマット）されるように設定</a></li><li><a href=\"#PrettierESlintstylelint\"><span class=\"toc_number toc_depth_2\">3.2</span> Prettierで設定したESlintとstylelintを使うように設定</a></li><li><a href=\"#lint-2\"><span class=\"toc_number toc_depth_2\">3.3</span> エラーが出てるか確認するために各種lint拡張を追加</a></li><li><a href=\"#VSCode\"><span class=\"toc_number toc_depth_2\">3.4</span> 各種導入が終わったらVSCodeを「再起動」</a></li></ul></li><li><a href=\"#i-2\"><span class=\"toc_number toc_depth_1\">4</span> 保存時の自動フォーマットを確認</a></li><li><a href=\"#i-3\"><span class=\"toc_number toc_depth_1\">5</span> おわり</a></li></ul></div>\n<h2><span id=\"npm\">npmで色々インストール</span></h2>\n<p>いきなりコマンドの話で申し訳ございません&#8230;。</p>\n<p>npmコマンドを使って各種ツールをプロジェクト内にインストールしていきます。npmコマンドを使う方法は下記ページの「3 npmのインストール」までを参考にしてください。<br />\n→ <a href=\"https://haniwaman.com/gulp-windows/\">5分で終わる！WindowsでGulpを使えるようになるまでの手順</a></p>\n<p>プロジェクト内というのは、検証対象とするフォルダみたいな感覚でいいかと思います。<br />\n<code>cd /hoge/hoge/</code>でチェック対象（フォーマット対象）とするフォルダへ移動しておいてください。</p>\n<p>必要なパッケージは、以下の3つ。</p>\n<ul>\n<li>stylelint</li>\n<li>stylelint-config-wordpress（<a href=\"https://github.com/WordPress-Coding-Standards/stylelint-config-wordpress\" rel=\"noopener noreferrer\" target=\"_blank\">WordPressのCSS規約</a>）</li>\n<li>eslint</li>\n<li>eslint-config-wordpress（<a href=\"https://github.com/WordPress-Coding-Standards/eslint-config-wordpress\" rel=\"noopener noreferrer\" target=\"_blank\">WordPressのJavaScript規約</a>）</li>\n</ul>\n<p>Sassをお使いの方は以下も導入しておくといい感じです！<br />\n※ stylelintの導入が必須です。</p>\n<ul>\n<li>stylelint-scss</li>\n<li>stylelint-config-recommended-scss</li>\n</ul>\n<p>コピペしやすいように上記のパッケージ時を<code>npm install</code>する際の記述を羅列します。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-0\">コピー</span><code id=\"code-0\" class=\"cli nohighlight hljs\">npm install --save-dev stylelint\r\n</code></pre>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-1\">コピー</span><code id=\"code-1\" class=\"cli nohighlight hljs\">npm install --save-dev stylelint-config-wordpress\r\n</code></pre>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-2\">コピー</span><code id=\"code-2\" class=\"cli nohighlight hljs\">npm install --save-dev eslint\r\n</code></pre>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-3\">コピー</span><code id=\"code-3\" class=\"cli nohighlight hljs\">npm install --save-dev eslint-config-wordpress\r\n</code></pre>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-4\">コピー</span><code id=\"code-4\" class=\"cli nohighlight hljs\">npm install --save-dev stylelint-scss\r\n</code></pre>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-5\">コピー</span><code id=\"code-5\" class=\"cli nohighlight hljs\">npm install --save-dev stylelint-config-recommended-scss\r\n</code></pre>\n<p>※ もし<code>--save-dev</code>でインストールできない場合は<code>-g</code>でもいいです（自分だけで使う前提にはなりますが、、）たしかeslintがなぜか<code>--save-dev</code>でインストールできなかった記憶が&#8230;。</p>\n<h2><span id=\"lint\">プロジェクト内にlintを制御するファイルを設置</span></h2>\n<p>プロジェクト内に<span class=\"filename\">.eslintrc</span>と<span class=\"filename\">.stylelintrc</span>を設置します。これは、ESlintとstylelintのルールを記述するためのファイルです。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/08/prettier-wordpress.png\" alt=\"\" class=\"alignnone size-full wp-image-8173\" /></p>\n<p>今回はWordPressのコーディング規約のルールを適応されたいので、以下のような記述になります。<br />\n<code>extends</code>でルールを拡張（上書き？）しているようなイメージです。</p>\n<pre><span class=\"filename\">.eslintrc</span><span class=\"code-copy\" data-clipboard-target=\"#code-6\">コピー</span><code id=\"code-6\" class=\"json\">{\r\n\t\"extends\": \"wordpress\"\r\n}</code></pre>\n<pre><span class=\"filename\">.stylelintrc</span><span class=\"code-copy\" data-clipboard-target=\"#code-7\">コピー</span><code id=\"code-7\" class=\"json\">{\r\n  \"extends\": \"stylelint-config-wordpress\"\r\n}</code></pre>\n<p>Sassのパッケージをインストールした方は以下になります。</p>\n<pre><span class=\"filename\">.stylelintrc</span><span class=\"code-copy\" data-clipboard-target=\"#code-8\">コピー</span><code id=\"code-8\" class=\"json\">{\r\n\t\"extends\": [\"stylelint-config-wordpress/scss\"]\r\n}\r\n</code></pre>\n<h2><span id=\"VSCodePrettier\">VSCodeにPrettierの拡張機能を追加</span></h2>\n<p>VSCodeに「Prettier &#8211; Code formatter」を追加します。<br />\n→ <a href=\"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode\" rel=\"noopener noreferrer\" target=\"_blank\">「Prettier &#8211; Code formatter」の公式ページ</a><br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/08/prettier-wordpress2.png\" alt=\"\" class=\"alignnone size-full wp-image-8179\" width=\"520\" srcset=\"https://haniwaman.com/wp-content/uploads/2018/08/prettier-wordpress2.png 932w, https://haniwaman.com/wp-content/uploads/2018/08/prettier-wordpress2-700x170.png 700w, https://haniwaman.com/wp-content/uploads/2018/08/prettier-wordpress2-768x186.png 768w\" sizes=\"(max-width: 932px) 100vw, 932px\" /></p>\n<h3><span id=\"i\">保存時に自動整形（フォーマット）されるように設定</span></h3>\n<p>VScodeの設定（<span class=\"key\">Ctrl</span> + <span class=\"key\">,</span>）から、<code>\"editor.formatOnSave\": true</code>に変更。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/08/prettier-wordpress3.png\" alt=\"\" class=\"alignnone size-full wp-image-8181\" /></p>\n<h3><span id=\"PrettierESlintstylelint\">Prettierで設定したESlintとstylelintを使うように設定</span></h3>\n<p><code>\"prettier.stylelintIntegration\": true</code>と<code>\"prettier.eslintIntegration\": true</code>を両方ともtrueにしてください。</p>\n<p>また、VSCode標準のJavaScriptフォーマッターとPrettierでのESlintの整形がぶつかりあうみたいで、もともとのVSCodeの方のJavaScriptフォーマッターは<code>\"javascript.format.enable\": false</code>で無効化させておきます。</p>\n<h3><span id=\"lint-2\">エラーが出てるか確認するために各種lint拡張を追加</span></h3>\n<p>たぶん、エラーがたくさん出ている状況から保存したら整形されてパッとエラーが消える光景が見れたほうが気持ちいいと思うので、エラーを可視化させるための各種lintのVSCode拡張を入れておきましょう。</p>\n<p>※ また、<code>\"eslint.autoFixOnSave\": true</code>の設定が必要なので、少なくともESlintは必須。</p>\n<p><strong>■ ESLint</strong><br />\n→ <a href=\"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint\" rel=\"noopener noreferrer\" target=\"_blank\">「ESLint」の公式ページ</a><br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/08/prettier-wordpress5.png\" alt=\"\" class=\"alignnone size-full wp-image-8186\" width=\"520\" srcset=\"https://haniwaman.com/wp-content/uploads/2018/08/prettier-wordpress5.png 1074w, https://haniwaman.com/wp-content/uploads/2018/08/prettier-wordpress5-700x166.png 700w, https://haniwaman.com/wp-content/uploads/2018/08/prettier-wordpress5-768x182.png 768w\" sizes=\"(max-width: 1074px) 100vw, 1074px\" /></p>\n<p>導入したら設定に以下を追加していてください。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-9\">コピー</span><code id=\"code-9\" class=\"json\">\"eslint.autoFixOnSave\": true\r\n</code></pre>\n<p><strong>■ stylelint</strong><br />\n→ <a href=\"https://marketplace.visualstudio.com/items?itemName=shinnn.stylelint\" rel=\"noopener noreferrer\" target=\"_blank\">「stylelint」の公式ページ</a><br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/08/prettier-wordpress7.png\" alt=\"\" class=\"alignnone size-full wp-image-8188\" width=\"520\" srcset=\"https://haniwaman.com/wp-content/uploads/2018/08/prettier-wordpress7.png 1001w, https://haniwaman.com/wp-content/uploads/2018/08/prettier-wordpress7-700x169.png 700w, https://haniwaman.com/wp-content/uploads/2018/08/prettier-wordpress7-768x185.png 768w\" sizes=\"(max-width: 1001px) 100vw, 1001px\" /></p>\n<p><strong>■ Sass Lint</strong><br />\n→ <a href=\"https://marketplace.visualstudio.com/items?itemName=glen-84.sass-lint\" rel=\"noopener noreferrer\" target=\"_blank\">「Sass Lint」の公式ページ</a><br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/08/prettier-wordpress6.png\" alt=\"\" class=\"alignnone size-full wp-image-8187\" width=\"520\" srcset=\"https://haniwaman.com/wp-content/uploads/2018/08/prettier-wordpress6.png 830w, https://haniwaman.com/wp-content/uploads/2018/08/prettier-wordpress6-700x187.png 700w, https://haniwaman.com/wp-content/uploads/2018/08/prettier-wordpress6-768x205.png 768w\" sizes=\"(max-width: 830px) 100vw, 830px\" /></p>\n<h3><span id=\"VSCode\">各種導入が終わったらVSCodeを「再起動」</span></h3>\n<p>一応、再起動しておくと無難です。<br />\n（閉じて開き直すだけ）</p>\n<h2><span id=\"i-2\">保存時の自動フォーマットを確認</span></h2>\n<p>準備は整いました！<br />\nそれでは、サンプルで用意した以下のJavaScriptを保存してみます。<br />\n（冒頭でネタバレしてしまっていますが&#8230;。）</p>\n<p>いやぁ、、真っ赤ですね。。（赤の波々は「規約からズレているから直せよ！」ってESlintが怒っている部分です）<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/08/prettier-wordpress8.png\" alt=\"\" class=\"alignnone size-full wp-image-8191\" srcset=\"https://haniwaman.com/wp-content/uploads/2018/08/prettier-wordpress8.png 890w, https://haniwaman.com/wp-content/uploads/2018/08/prettier-wordpress8-700x253.png 700w, https://haniwaman.com/wp-content/uploads/2018/08/prettier-wordpress8-768x278.png 768w\" sizes=\"(max-width: 890px) 100vw, 890px\" /></p>\n<p>保存してみましょう。<span class=\"key\">Ctrl</span> + <span class=\"key\">S</span></p>\n<p><span class=\"font-l\">なんとういうことでしょう！</span><br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/08/prettier-wordpress9.png\" alt=\"\" class=\"alignnone size-full wp-image-8193\" /></p>\n<p>動画だとこんな感じ。保存と同時に一瞬でWordPressの規約に沿った整形をしてくれます！<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/08/prettier-wordpress.gif\" alt=\"\" class=\"alignnone size-full wp-image-8194\" /></p>\n<h2><span id=\"i-3\">おわり</span></h2><div class=\"matome\"><div class=\"matome-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"></div><div class=\"matome-twitter\"><a href=\"https://twitter.com/haniwa008?ref_src=twsrc%5Etfw\" class=\"twitter-follow-button\" data-show-screen-name=\"false\" data-size=\"large\" data-lang=\"ja\" data-show-count=\"true\">Follow @haniwa008</a><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></div></div><!-- /matome -->\n<p>VSCodeでPrettierを使ってWordPressのコーディング規約に沿った自動フォーマットする方法でした。</p>\n<p>ルールが決まっているものは、どんどん自動化していける時代です。コーディング規約があるならば、その規約に適応されるような形に自動で変換してもらいましょう！</p>\n","date":"August 25, 2018","categories":[{"name":"環境","slug":"setting"}],"tags":[{"name":"VSCode","slug":"vscode"}],"author":{"name":"はにわまん","slug":"haniwaman"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"7b0876bb-2bcc-5a07-9748-dd1ba0b0625b"}}}