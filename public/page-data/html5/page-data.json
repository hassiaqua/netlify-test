{"componentChunkName":"component---src-templates-post-js","path":"/html5/","result":{"data":{"wordpressPost":{"id":"b4a84eb6-cbbb-5d84-9ff5-8007234555cc","title":"HTML4とHTML5の違い！修正箇所を理解してHTML5に移行しよう","slug":"html5","content":"<p><strong class=\"marker\">HTML4からHTML5に書き換える時に具体的にどこの項目を直せばいいか</strong>をまとめました。</p>\n<p>個人的にはHTML5の記述方法はとても好きです。無駄なく意味がハッキリしているので納得してコーディングできます。特徴としては以下のような感じですね。</p>\n<ul class=\"check\">\n<li>記述がシンプルになって</li>\n<li>構造と見栄えの役割はっきり分かれて</li>\n<li>タグの意味もよりハッキリして（セマンティック）</li>\n</ul>\n<p>Webサイトは運用しないと価値がどんどん下がっていきます。HTML4からHTML5、レスポンシブ化などなど、時代に応じてどんどんアップデートしていきましょう！</p>\n<div class=\"chat\"><figure class=\"chat-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"><figcaption>はにわまん</figcaption></figure><div class=\"chat-content\">HTML4に比べてHTML5の無駄のない感じがとても好きです。</div></div>\n<div id=\"toc_container\" class=\"no_bullets\"><p class=\"toc_title\">目次</p><ul class=\"toc_list\"><li><a href=\"#HTML4HTML5\"><span class=\"toc_number toc_depth_1\">1</span> HTML4とかHTML5はどう違う？</a></li><li><a href=\"#i\"><span class=\"toc_number toc_depth_1\">2</span> どこを変換するか知ろう</a><ul><li><a href=\"#DOCTYPE\"><span class=\"toc_number toc_depth_2\">2.1</span> DOCTYPE宣言はシンプルに</a></li><li><a href=\"#i-2\"><span class=\"toc_number toc_depth_2\">2.2</span> 文字コード指定もシンプルに</a></li><li><a href=\"#type\"><span class=\"toc_number toc_depth_2\">2.3</span> スタイルとスクリプトのtypeは不要</a></li><li><a href=\"#i-3\"><span class=\"toc_number toc_depth_2\">2.4</span> 閉じタグは不要</a></li><li><a href=\"#i-4\"><span class=\"toc_number toc_depth_2\">2.5</span> 排除される属性</a></li><li><a href=\"#i-5\"><span class=\"toc_number toc_depth_2\">2.6</span> 太文字の意味</a></li><li><a href=\"#i-6\"><span class=\"toc_number toc_depth_2\">2.7</span> 新しく追加された要素</a></li><li><a href=\"#h1OK\"><span class=\"toc_number toc_depth_2\">2.8</span> h1見出しは複数OK</a></li></ul></li><li><a href=\"#HTML5Emmet\"><span class=\"toc_number toc_depth_1\">3</span> HTML5の書き始めはEmmetに任せる</a></li><li><a href=\"#i-7\"><span class=\"toc_number toc_depth_1\">4</span> おわり</a></li></ul></div>\n<h2><span id=\"HTML4HTML5\">HTML4とかHTML5はどう違う？</span></h2>\n<p>一言で言うと<strong class=\"marker\">バージョンの違い</strong>になります。HTML4がバージョン４でHTML5がバージョン5って感じですね。HTML4が1997年〜で、HTML5が2014年〜です。</p>\n<p>そのバージョンはどこが管理しているかというと、orld Wide Web Consortium（通称、<a href=\"https://www.w3.org/\" rel=\"noopener nofollow\" target=\"_blank\">W3C</a>）という団体です。</p>\n<p>中身をどう違うかについては、次の「<a href=\"#change\">どこを変換するか知ろう</a>」のセクションで詳しく紹介していきます。時代に合わせてHTMLの仕様を新しくしているというイメージでいいかと思います。</p>\n<p>内容について詳しくは下記の公式サイトで説明されているので参考にしてもらえたらと思います。<br />\n→ <a href=\"https://momdo.github.io/html5-diff/\" rel=\"noopener nofollow\" target=\"_blank\">HTML5 Differences from HTML4（HTML4からのHTML5の差分</a></p>\n<h2 id=\"change\"><span id=\"i\">どこを変換するか知ろう</span></h2>\n<p>具体的にHTML5にする上でどこを変換するかをまとめました。慣れてくると、<strong class=\"marker\">HTML4で記述されたHTMLファイルを見た時に違和感を感じるような体質になる</strong>と思います。</p>\n<h3><span id=\"DOCTYPE\"><code>DOCTYPE</code>宣言はシンプルに</span></h3>\n<p><code>DOCTYPE</code>はめちゃくちゃシンプルになりました。謎のURLを書かなくてもよくなります。</p>\n<p>BEFORE（HTML4）</p>\n<pre style=\"margin-top: 0;\"><code class=\"html\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\r\n</code></pre>\n<p>↓</p>\n<p>AFTER（HTML5）</p>\n<pre style=\"margin-top: 0;\"><code class=\"html\">&lt;!DOCTYPE html&gt;\r\n</code></pre>\n<p>めちゃくちゃシンプルになりましたね。</p>\n<h3><span id=\"i-2\">文字コード指定もシンプルに</span></h3>\n<p><code>charset</code>の指定もシンプルになります。</p>\n<p>BEFORE（HTML4）</p>\n<pre style=\"margin-top: 0;\"><code class=\"html\">&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt;\r\n</code></pre>\n<p>↓</p>\n<p>AFTER（HTML5）</p>\n<pre style=\"margin-top: 0;\"><code class=\"html\">&lt;meta charset=\"utf-8\"&gt;\r\n</code></pre>\n<h3><span id=\"type\">スタイルとスクリプトのtypeは不要</span></h3>\n<p>スタイルとスクリプトを読み込む時に指定していた、<code>type='text/css'</code>と<code>type='text/javascript'</code>は不要になります。どんどんシンプルになってありがたい限りですね&#8230;</p>\n<h4>スタイルの場合</h4>\n<p>BEFORE（HTML4）</p>\n<pre style=\"margin-top: 0;\"><code class=\"html\">&lt;link rel='stylesheet' type='text/css' href='style.css'&gt;\r\n</code></pre>\n<p>↓</p>\n<p>AFTER（HTML5）</p>\n<pre style=\"margin-top: 0;\"><code class=\"html\">&lt;link rel='stylesheet' href='style.css'&gt;\r\n</code></pre>\n<h4>スクリプトの場合</h4>\n<p>BEFORE（HTML4）</p>\n<pre style=\"margin-top: 0;\"><code class=\"html\">&lt;script type='text/javascript' src='script.js'&gt;&lt;/script&gt;\r\n</code></pre>\n<p>↓</p>\n<p>AFTER（HTML5）</p>\n<pre style=\"margin-top: 0;\"><code class=\"html\">&lt;script src='script.js'&gt;&lt;/script&gt;\r\n</code></pre>\n<h3><span id=\"i-3\">閉じタグは不要</span></h3>\n<p>かつては<code>&lt;br /&gt;</code>のように書いていたと思いますが、HTML5からは閉じタグが不要になって<code>&lt;br&gt;</code>という書き方ができます。</p>\n<p>具体的には以下のようなHTMLタグの閉じタグが不要になって、行末の<code>/&gt;</code>のスラッシュを見つけたら<code>&gt;</code>削除してあげてください。</p>\n<ul>\n<li><code>br</code></li>\n<li><code>img</code></li>\n<li><code>meta</code></li>\n<li><code>link</code></li>\n<li><code>input</code></li>\n<li><code>hr</code></li>\n</ul>\n<h3><span id=\"i-4\">排除される属性</span></h3>\n<p>HTMLで定義されていた見栄えに関する属性が非推奨となりました。よく見る代表的なHTML4の属性としては、<code>align</code>、<code>font</code>、<code>color</code>、<code>border</code>があります。</p>\n<p>こういったHTMLタグを見つけたらそれぞれ、CSSとして定義しあおしてあげてください。</p>\n<ul>\n<li><code>align=\"right\"</code> → <code>text-align:right;</code></li>\n<li><code>font=\"3\"</code> → <code>font-size:1em;</code></li>\n<li><code>color=\"#333\"</code> → <code>color:#333</code></li>\n<li><code>border=\"0\"</code> → <code>border:none</code></li>\n</ul>\n<h3><span id=\"i-5\">太文字の意味</span></h3>\n<p>太文字の意味が明確になりました。<code>b</code>と<code>strong</code>の2つがあります。</p>\n<ul>\n<li><code>b</code>・・・文字としての強調</li>\n<li><code>strong</code>・・・意味としての重要度</li>\n</ul>\n<p>SEO的にはどちらも違いはないとされていますが、どちらか使うとするなら基本的には<code>strong</code>を使っておけばいいかと思います。</p>\n<h3><span id=\"i-6\">新しく追加された要素</span></h3>\n<p>HTML5から新しく追加された要素です。構造化タグなどHTML5では、より<strong class=\"marker\">セマンティックに機械にタグの意味を伝えられる</strong>ようになっていきます。<br />\n（※ セマンティックとは、<strong>タグに意味をもたせる</strong>というものです。）</p>\n<h4>構造化タグ</h4>\n<p>これまでは<code>div id=\"header\"</code>としてヘッダーを表示させるためのマークアップをしてきたかと思いますが、HTML5ではそれぞれのセクションに応じてタグが用意されるようになりました。</p>\n<p>HTML4までほとんどが<code>div</code>で作れてきたので、この辺の変化で混乱する人が多いかもしれません。</p>\n<p>構造化タグ<code>section</code>、<code>article</code>、<code>main</code>、<code>aside</code>、<code>header</code>、<code>footer</code>、<code>nav</code>があります。</p>\n<p>ざっくりしたイメージとしては以下のような感じになります。<br />\n（※ この表現がすべてではないのであくまでも一例として捉えていただければと思います）<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/06/html5-2-700x487.png\" alt=\"\" width=\"700\" class=\"alignnone size-medium wp-image-15902\" srcset=\"https://haniwaman.com/wp-content/uploads/2019/06/html5-2-700x487.png 700w, https://haniwaman.com/wp-content/uploads/2019/06/html5-2-768x534.png 768w, https://haniwaman.com/wp-content/uploads/2019/06/html5-2-1200x835.png 1200w, https://haniwaman.com/wp-content/uploads/2019/06/html5-2.png 1368w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<p>細かく分けすぎると図が見にくくなるので割愛している部分もありますが、例えば、カテゴリーのメニューの塊も<code>nav</code>で囲ってしまってOKです。構造化タグはいくつでも使えるので、<code>article</code>の中のタイトルから日付までを<code>header</code>で囲んでマークアップしているサイトもよく見ます。</p>\n<h5>「article」と「section」の違い</h5>\n<p><code>article</code>と<code>section</code>は似ていて迷うかもしれません。見出しとコンテンツがセットになっているやつに使われがちですね。</p>\n<p>分け方のイメージとしては、<code>article</code>は翻訳すると記事（見出しの有無は問わない）ですね。なので<strong class=\"marker\">基本的には記事部分に使うイメージ</strong>です。それ以外を<code>section</code>って感じでいいかと思います。</p>\n<p>あとは<code>section</code>は、<strong class=\"marker\">その塊を表現するための見出しが最低1つ必要になってきます</strong>。記事でなくなにか見出しのあるひと塊のパーツが出てきたら<code>section</code>を検討してみてください。</p>\n<blockquote class=\"twitter-tweet\" data-partner=\"tweetdeck\">\n<p lang=\"ja\" dir=\"ltr\">&#x1f4dd; HTMLのsectionタグの使い所</p>\n<p>&#x2705; 意味のあるまとまり<br />&#x2705; まとまりに対して1つの「見出し」を付けられる</p>\n<p>LPをコーディングする際は、まとまりごとに見出しが付けられることが多いので、基本的にはsectionで囲っています。</p>\n<p>見出しが含まれないまとまりはdivにします。</p>\n<p>&mdash; はにわまん (@haniwa008) <a href=\"https://twitter.com/haniwa008/status/1053821566591455232?ref_src=twsrc%5Etfw\">October 21, 2018</a></p></blockquote>\n<p><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p>\n<h4>図、表</h4>\n<p><code>figure</code>と<code>figcaption</code>のセット。図とその説明を表すために使われます。以下のような使い方をします。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-0\">コピー</span><code id=\"code-0\" class=\"html\">&lt;figure&gt;\r\n&lt;img src=\"img/hoge.png\" alt=\"\"&gt;\r\n&lt;figcaption&gt;hogeの説明&lt;/figcaption&gt;\r\n&lt;/figure&gt;</code></pre>\n<h4>日付</h4>\n<ul>\n<li><code>time</code>・・・日付部分を明示的にマークアップします。</li>\n<li><code>datetime</code>・・・日付を検索エンジンに伝えるための属性。日付はハイフンで区切らないとエラーになります。</li>\n</ul>\n<p>以下のような感じでマークアップします。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-1\">コピー</span><code id=\"code-1\" class=\"html\">&lt;time datetime=\"2019-07-02\"&gt;2019年7月2日&lt;/time&gt;\r\n</code></pre>\n<h4>フォームのタイプ</h4>\n<ul>\n<li><code>type=\"tel\"</code>・・・電話番号</li>\n<li><code>type=\"search\"</code>・・・検索</li>\n<li><code>type=\"url\"</code>・・・URL</li>\n<li><code>type=\"email\"</code>・・・メールアドレス</li>\n<li><code>type=\"date\"</code>・・・日付</li>\n<li><code>type=\"time\"</code>・・・時刻</li>\n<li><code>type=\"number\"</code>・・・数字</li>\n<li><code>type=\"range\"</code>・・・範囲</li>\n<li><code>type=\"color\"</code>・・・色</li>\n</ul>\n<p>また、<code>input</code>と<code>textarea</code>に<code>placeholder</code>属性を指定可能になりました。<br />\n<input style=\"margin-top:1em;\" type=\"text\" placeholder=\"こんな感じで薄く文字を指定できる\"></p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-2\">コピー</span><code id=\"code-2\" class=\"html\">&lt;input type=\"text\" placeholder=\"こんな感じで薄く文字を指定できる\"&gt;\r\n</code></pre>\n<h4>グラフィック</h4>\n<p><code>&lt;canvas&gt;</code>・・・Illustratorっぽいベクター的な絵を作ったりできます。</p>\n<p>具体的にどういったことができるかは、ドットインストールで少し勉強しながら少し触ってみてください。ハマる人はハマる気がします。<br />\n→ <a href=\"https://dotinstall.com/lessons/basic_canvas_v2\" rel=\"noopener nofollow\" target=\"_blank\">HTML5 Canvas入門 (全33回) &#8211; プログラミングならドットインストール</a></p>\n<h3><span id=\"h1OK\"><code>h1</code>見出しは複数OK</span></h3>\n<p>古くからHTMLを触ってきたり、SEOを意識してコーディングしてきた方だと馴染みにくいのが<strong class=\"marker\"><code>h1</code>タグを1ページ内に複数指定できる</strong>という仕様かもしれません。</p>\n<p>これは、<code>section</code>、<code>article</code>などの構造化タグが生まれたことによって生まれた概念だとわたしは思っています。例えば以下のような書き方は全然OKということです。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-3\">コピー</span><code id=\"code-3\" class=\"html\">&lt;body&gt;\r\n\r\n&lt;section class=\"section1\"&gt;\r\n&lt;h1&gt;SECTION1の見出し&lt;/h1&gt;\r\n&lt;/section&gt;\r\n\r\n&lt;article class=\"article1\"&gt;\r\n&lt;h1&gt;ARTICLE1の見出し&lt;/h1&gt;\r\n&lt;/article&gt;\r\n\r\n&lt;/body&gt;</code></pre>\n<p><code>section</code>や<code>article</code>の最初の見出しは<code>h1</code>でもいいし、ページ全体で考えて<code>h2</code>や<code>h3</code>を選択してもいいって感じになっています。</p>\n<p>もはやSEO的に考えた時に見出しでマークアップすることの重要度は高くないんですよね。極端に言えば全部を<code>h2</code>でマークアップしたサイトであってもコンテンツが優れていて読者から支持されているサイトであれば順位は上がります。</p>\n<p>という感じで少し脱線しましたが、、HTML5では<code>h1</code>見出しは複数使ってもOKです。</p>\n<h2><span id=\"HTML5Emmet\">HTML5の書き始めはEmmetに任せる</span></h2>\n<p>これからサイトを作る場合は最初の書き出しはEmmetに任せておけば無難かと思います。VSCodeなどのEmmetが使えるテキストエディタで<code>!</code>と入力して<span class=\"key\">Enter</span>を押せばHTML5の記述で「型」を用意してくれます。<code>&lt;head&gt;</code>タグの中身とかはひとまずはこのまま使っていけばいいはずです。</p>\n<p>動きとしはこんな感じ（Gif動画）<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/12/zero-coding.gif\" alt=\"\" width=\"700\"  class=\"alignnone size-medium wp-image-11422\"></p>\n<p>Emmetって何？って方は以下の記事を参考にしていただければと思います！</p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"9zBs0WqAKV\"><p><a href=\"https://haniwaman.com/emmet/\">「はじめて」でも簡単！Emmetの使い方とよく使うパターン集</a></p></blockquote>\n<p><iframe title=\"&#8220;「はじめて」でも簡単！Emmetの使い方とよく使うパターン集&#8221; &#8212; HPcode\" class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" src=\"https://haniwaman.com/emmet/embed/#?secret=9zBs0WqAKV\" data-secret=\"9zBs0WqAKV\" width=\"500\" height=\"282\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></p>\n<h2><span id=\"i-7\">おわり</span></h2><div class=\"matome\"><div class=\"matome-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"></div><div class=\"matome-twitter\"><a href=\"https://twitter.com/haniwa008?ref_src=twsrc%5Etfw\" class=\"twitter-follow-button\" data-show-screen-name=\"false\" data-size=\"large\" data-lang=\"ja\" data-show-count=\"true\">Follow @haniwa008</a><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></div></div><!-- /matome -->\n<p>HTML4からHTML5への変換ポイントをまとめました。</p>\n<ul class=\"check\">\n<li>記述がシンプルになって</li>\n<li>構造と見栄えの役割はっきり分かれて</li>\n<li>タグの意味もよりハッキリして（セマンティック）</li>\n</ul>\n<p>になっていい事だらけだと思っています。HTML4の時代にコーディングをバリバリしていないわたしとしては、HTML5の時代にコーディングできているありがたみを感じますね。</p>\n<p>Webサイトは運用してなんぼだと思います。古いWebサイトは時代に合わせてアップデートしていきませんか？</p>\n","date":"July 05, 2019","categories":[{"name":"HTML","slug":"html"}],"tags":null,"author":{"name":"はにわまん","slug":"haniwaman"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"b4a84eb6-cbbb-5d84-9ff5-8007234555cc"}}}