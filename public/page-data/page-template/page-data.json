{"componentChunkName":"component---src-templates-post-js","path":"/page-template/","result":{"data":{"wordpressPost":{"id":"0f232f6e-419f-5550-850a-f07990b0f88d","title":"WordPressの固定ページをテンプレートで指定する書き方","slug":"page-template","content":"<p>複雑っぽい構成のデザインの場合は管理画面の固定ページから編集できるエディタじゃ限界があったりします。</p>\n<p>そこで、<strong class=\"marker\">固定ページ専用のテンプレートを作れる</strong>機能がWordPressに存在していて、「固定テンプレート」と呼ばれていたりします。</p>\n<p>以下のようなメリットがあり、作る側としてはめちゃくちゃ楽になります。</p>\n<ul class=\"check\">\n<li>複雑なHTMLタグでも再現できる</li>\n<li>記事中にPHPコードも使える</li>\n</ul>\n<p>作り方はめっちゃ簡単なので、サクッと覚えて案件に応じて柔軟に使えるようにしていきましょう！</p>\n<div id=\"toc_container\" class=\"no_bullets\"><p class=\"toc_title\">目次</p><ul class=\"toc_list\"><li><a href=\"#i\"><span class=\"toc_number toc_depth_1\">1</span> 固定ページをテンプレートで指定する書き方</a><ul><li><a href=\"#pagephp\"><span class=\"toc_number toc_depth_2\">1.1</span> 中身はとりあえずpage.phpをコピー</a></li></ul></li><li><a href=\"#i-2\"><span class=\"toc_number toc_depth_1\">2</span> 固定テンプレートの使い所</a><ul><li><a href=\"#HTML\"><span class=\"toc_number toc_depth_2\">2.1</span> 複雑なHTML構造になる場合</a></li><li><a href=\"#PHP\"><span class=\"toc_number toc_depth_2\">2.2</span> 記事中にPHP処理が必要になる場合</a></li><li><a href=\"#i-3\"><span class=\"toc_number toc_depth_2\">2.3</span> カスタムフィールドでゴリゴリ</a></li></ul></li><li><a href=\"#i-4\"><span class=\"toc_number toc_depth_1\">3</span> 事前の検討事項：お客様がどこを編集したいか？</a></li><li><a href=\"#i-5\"><span class=\"toc_number toc_depth_1\">4</span> おわり</a></li></ul></div>\n<h2><span id=\"i\">固定ページをテンプレートで指定する書き方</span></h2>\n<p>現在のテーマフォルダに適当なファイル名（<a href=\"https://wpdocs.osdn.jp/%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E9%9A%8E%E5%B1%A4\" rel=\"noopener\" target=\"_blank\">WordPressが予め定めているもの</a>を除外して）でphpファイルを作ります。例として<span class=\"filename\">test.php</span>で作ってみます。</p>\n<p><img src=\"https://haniwaman.com/wp-content/uploads/2018/12/page-template2.png\" width=\"300\" alt=\"\" class=\"alignnone size-full wp-image-11336\" /></p>\n<p>ファイルを作ったら、<strong class=\"marker\">「これは固定テンプレートですよ！」って宣言</strong>をファイルの中に書いてあげましょう。これだけで管理画面に反映されるようになります。<br />\n（このコードをメモ用に残しておきたいために記事にしたようなものです笑）</p>\n<pre><span class=\"filename\">test.php</span><span class=\"code-copy\" data-clipboard-target=\"#code-0\">コピー</span><code id=\"code-0\" class=\"php\">&lt;?php\r\n/*\r\n * Template Name: テスト\r\n */</code></pre>\n<p>固定ページを見てみると、、、「テスト」のテンプレート追加されていますね！<br />\n（固定ページの属性のメタボックスの「テンプレート」から選択できます）<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/12/page-template3.png\" width=\"320\" alt=\"\" class=\"alignnone size-full wp-image-11342\" /></p>\n<h3><span id=\"pagephp\">中身はとりあえず<span class=\"filename\">page.php</span>をコピー</span></h3>\n<p>中身ですが、基本的に編集したい部分はコンテンツ部分だと思います。ヘッダーとかフッターとかその他の共通パーツなどは<span class=\"filename\">page.php</span>からそのまま持ってこればいいでしょう。</p>\n<p>メインで直す必要がある箇所だけ、固定テンプレートにゴリゴリ書いていく感じでいいかと思います。</p>\n<h2><span id=\"i-2\">固定テンプレートの使い所</span></h2>\n<p>固定テンプレートはどういった場面で活用するかについて簡単に紹介していきます。</p>\n<h3><span id=\"HTML\">複雑なHTML構造になる場合</span></h3>\n<p>WordPressの投稿エディタって、そもそもHTMLタグでゴリゴリ書くように作っていないと思います。「誰でも簡単にブログが書ける」が信条だったはずなので。</p>\n<p>あとは、<strong class=\"marker\">複雑なHTML構造を管理画面上に残しておくのはデメリットのほうが多くて</strong>、HTML分かってないユーザーがちょっと編集して、めっちゃ崩れるみたいな自体になりかねません。</p>\n<p>個人的にWordPressの管理画面から投稿編集できる内容は極力シンプルなものに留めておくべきという考えでして、ちょっと触って崩れるリスクがあるようなHTML構造になる場合は、ユーザーの手の届かない「固定テンプレート」として裏側に作っておくのがいいのかなと思っています。</p>\n<h3><span id=\"PHP\">記事中にPHP処理が必要になる場合</span></h3>\n<p>記事中にPHPが書けるようなプラグインはありますが、セキュリティ的にあまり推奨されていません。「<strong class=\"marker\">PHPを書くならテンプレートに</strong>」というのが鉄則でして、固定ページでPHPの処理が必要になりそうな場合は、固定テンプレート化した方がいいのかなと思います。</p>\n<h3><span id=\"i-3\">カスタムフィールドでゴリゴリ</span></h3>\n<p>「Advanced Custom Fields」などのカスタムフィールド系のプラグインを使ってゴリゴリ作っていく場合も、固定テンプレート化することが多いです。</p>\n<p>例えば以下の記事のようなテンプレートを作るときなど。</p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"4TUkmFNW3E\"><p><a href=\"https://haniwaman.com/template-page/\">Advanced Custom FieldsとCustom Post Type UIで「管理しやすい」編集画面を作ろう！</a></p></blockquote>\n<p><iframe title=\"&#8220;Advanced Custom FieldsとCustom Post Type UIで「管理しやすい」編集画面を作ろう！&#8221; &#8212; HPcode\" class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" src=\"https://haniwaman.com/template-page/embed/#?secret=4TUkmFNW3E\" data-secret=\"4TUkmFNW3E\" width=\"500\" height=\"282\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></p>\n<p>先ほどのPHP処理と同じで、カスタムフィールドの内容を表示させるのもPHPの処理になるので、テンプレートでの何かしらの処理は必須になります。</p>\n<h2><span id=\"i-4\">事前の検討事項：お客様がどこを編集したいか？</span></h2>\n<p>固定テンプレート化するデメリットとして、<strong class=\"marker\">お客様が自由に編集できない</strong>という点があります。</p>\n<p><strong class=\"marker\">どこを管理画面から必須で編集するか</strong>という部分は、WordPressサイトにおいてはデリケートな部分になります。事前にユーザーと相談して設計するようにしましょう。</p>\n<h2><span id=\"i-5\">おわり</span></h2><div class=\"matome\"><div class=\"matome-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"></div><div class=\"matome-twitter\"><a href=\"https://twitter.com/haniwa008?ref_src=twsrc%5Etfw\" class=\"twitter-follow-button\" data-show-screen-name=\"false\" data-size=\"large\" data-lang=\"ja\" data-show-count=\"true\">Follow @haniwa008</a><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></div></div><!-- /matome -->\n<p>固定テンプレートの作り方でした。「<code>Template Name</code>」という書き方を何回見ても覚えられずいつも検索していたので、もう自分で記事にしちゃいました。</p>\n<p>とにかく覚えるべきは、以下の書き方です。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-1\">コピー</span><code id=\"code-1\" class=\"php\">&lt;?php\r\n/*\r\n * Template Name: テスト\r\n */</code></pre>\n<p>実際に書いてみて、管理画面から選択できる感動を味わってもらえたらと思います！</p>\n","date":"December 13, 2018","categories":[{"name":"WordPress","slug":"wordpress"}],"tags":null,"author":{"name":"はにわまん","slug":"haniwaman"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"0f232f6e-419f-5550-850a-f07990b0f88d"}}}