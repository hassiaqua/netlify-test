{"componentChunkName":"component---src-templates-post-js","path":"/page-link-position/","result":{"data":{"wordpressPost":{"id":"7d9c7158-a82c-527c-a0ae-38e5ff0c209a","title":"ヘッダー固定でページ内リンクをページ遷移で指定した時のズレを解消するJavaScript","slug":"page-link-position","content":"<p>ヘッダー固定にしていると頻発する問題として、「<strong class=\"marker\">ページ内リンク先の位置がズレる！</strong>」があると思います。ズレるというか、ほとんどの場合は固定したヘッダーに隠れますね。</p>\n<p>同じページ内でのページ内リンクだったらズレの解消も簡単だったりしますが、違うページに遷移した時のズレの解消がまあ面倒くさい。気づかなかったフリしてしれっと提出しようと何回思ったことか・・・笑</p>\n<p>自分の中での暫定的に決まっている1つの書き方を紹介します。同じような問題に直面している方は参考にしていただければと思います！</p>\n<div class=\"chat\"><figure class=\"chat-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"><figcaption>はにわまん</figcaption></figure><div class=\"chat-content\">コーディングしているとこういう細かい対応に意外と時間がかかったりします...泣</div></div>\n<div id=\"toc_container\" class=\"no_bullets\"><p class=\"toc_title\">目次</p><ul class=\"toc_list\"><li><a href=\"#i\"><span class=\"toc_number toc_depth_1\">1</span> ページ遷移時のページ内リンクでズレを解消する</a><ul><li><a href=\"#i-2\"><span class=\"toc_number toc_depth_2\">1.1</span> ローディグ画面を加える</a></li></ul></li><li><a href=\"#i-3\"><span class=\"toc_number toc_depth_1\">2</span> おわり</a></li></ul></div>\n<h2><span id=\"i\">ページ遷移時のページ内リンクでズレを解消する</span></h2>\n<p>ザックリ処理を説明すると、ページ読み込みが終わったらURLの<code>#hoge</code>を取得して、ヘッダー分の高さだけ移動（アニメーション）するという動きになります。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-0\">コピー</span><code id=\"code-0\" class=\"js\">/* ページ内リンク（別ページ） */\r\njQuery( window ).on( 'load', function() {\r\n\tid    = location.hash;\r\n\tspeed = 0;\r\n\theaderHight = 128; // 固定ヘッダーの高さ\r\n\tif ( '' != id ) {\r\n\t\tpos = jQuery( id ).offset().top - headerHight;\r\n\t\tjQuery( 'html' ).animate({ scrollTop: pos }, speed );\r\n\t}\r\n});</code></pre>\n<p>それぞれの処理は以下のような動きをしています。</p>\n<ul>\n<li>jQuery( window ).on( &#8216;load&#8217; ) → ページの読み込みが終ったら</li>\n<li>location.hash; → URLの<code>#hoge</code>の値を取得</li>\n<li>speed → 移動のスピードを指定（ページ遷移時は0でいいかと）</li>\n<li>headerHight → 固定ヘッダーの高さを指定</li>\n</ul>\n<p>headerHightの高さは、固定値ではなく<code>jQuery( '#header' ).height();</code>など固定ヘッダーの要素から高さを動的に取得した方がスマートかもしれません。</p>\n<p>各種の値を取得したら、<code>if</code>文の中で高さの調整をしています。スクロールを制御しているのは<code>&lt;html&gt;</code>要素らしくanimateさせる要素はhtmlにしないと上手く動かないので注意してください。</p>\n<p>これを実装すると動きとしては以下のようになります。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/11/page-link-position.gif\" alt=\"\" class=\"alignnone size-medium wp-image-11090\" /></p>\n<p>読み込みが終わってからの処理になるので、調整のための「<strong>ズズズッ</strong>」って動きが見えるのがちょっと気になりますね&#8230;</p>\n<p>ここを改善する方法がネット上にはないので自分なりの暫定的な方法ですが、真っ白なローディング画面を入れて非表示にすることで対応したりしています。</p>\n<h3><span id=\"i-2\">ローディグ画面を加える</span></h3>\n<p>ローディング画面の実装方法はこの記事は詳しく解説しませんので、下記の記事を参考にしていただければと思います。</p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"TVUpslf4yZ\"><p><a href=\"https://haniwaman.com/loading/\">ページ読み込み中のローディング画面を表示するJavaScript</a></p></blockquote>\n<p><iframe title=\"&#8220;ページ読み込み中のローディング画面を表示するJavaScript&#8221; &#8212; HPcode\" class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" src=\"https://haniwaman.com/loading/embed/#?secret=TVUpslf4yZ\" data-secret=\"TVUpslf4yZ\" width=\"500\" height=\"282\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></p>\n<p>処理の流れとしては単純でして、先程のズズズって動く処理が終わるまで画面を真っ白にしてわたしたちに裏の処理を見せないという感じです。そして処理が終わったタイミングで覆っていた真っ白の画面を消しています。</p>\n<p>動きとしては、以下のようになります（最初の動きと見比べていただければと思います）<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2018/11/page-link-position2.gif\" alt=\"\" class=\"alignnone size-medium wp-image-11091\" /></p>\n<p>HTML、CSS、JavaScriptにそれぞれ追加しましょう。HTMLとCSSは基本的にどこに追加してもOKです。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-1\">コピー</span><code id=\"code-1\" class=\"html\">&lt;div id=\"loader-bg\"&gt;&lt;/div&gt;\r\n</code></pre>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-2\">コピー</span><code id=\"code-2\" class=\"css\">#loader-bg {\r\n\tbackground: #fff;\r\n\theight: 100%;\r\n\tleft: 0;\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\twidth: 100%;\r\n\tz-index: 15;\r\n}</code></pre>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-3\">コピー</span><code id=\"code-3\" class=\"js\">/* ページ内リンク（別ページ） */\r\njQuery( window ).on( 'load', function() {\r\n\tid    = location.hash;\r\n\tspeed = 0;\r\n\theaderHight = 128 // 固定ヘッダーの高さ\r\n\tif ( '' != id ) {\r\n\t\tpos = jQuery( id ).offset().top - headerHight;\r\n\t\tjQuery( 'html' ).animate({ scrollTop: pos }, speed );\r\n\t}\r\n\tjQuery( '#loader-bg' ).hide();\r\n});</code></pre>\n<p>処理を見せずに画面全体を覆うためのHTML（<code>#loader-bg</code>）とCSSを用意して、ページの読み込みが終わるまで表示させます。JavaScriptでanimationのズズズの後に<code>jQuery( '#loader-bg' ).hide();</code>を追加して、ページ内リンクのポジションの調整が終わってから、画面を覆っていた<code>#loader-bg</code>を消すという流れです。</p>\n<h4>固定ヘッダーは常に表示</h4>\n<p>固定ヘッダーと画面全体を覆う<code>#loader-bg</code>は、重なりの順番を指定できます。個人的には全く真っ白の状態だと不安になるユーザーも多いと思うので、固定ヘッダーは常に表示させていてもいいかと思います。</p>\n<p>重なりを制御しているのは<code>z-index</code>のプロパティです。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-4\">コピー</span><code id=\"code-4\" class=\"css\">#header {\r\n\tz-index: 40;\r\n}\r\n#loader-bg {\r\n\tz-index: 15;\r\n}</code></pre>\n<p>上記のようにしておくと、<code>#header</code>部分は、<code>#loader-bg</code>より上に表示されるようになります。</p>\n<h2><span id=\"i-3\">おわり</span></h2><div class=\"matome\"><div class=\"matome-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"></div><div class=\"matome-twitter\"><a href=\"https://twitter.com/haniwa008?ref_src=twsrc%5Etfw\" class=\"twitter-follow-button\" data-show-screen-name=\"false\" data-size=\"large\" data-lang=\"ja\" data-show-count=\"true\">Follow @haniwa008</a><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></div></div><!-- /matome -->\n<p>ヘッダー固定でページ内リンクをページ遷移で指定した時のズレを解消するJavaScriptの紹介でした。こういう地味なところが意外と時間かかったりするので、コーディングは筋縄ではいかないなぁって感じですね&#8230;</p>\n<p>この記事のソースで分からないところがあれば、<code>console.log();</code>などで値を確認しながら使うとより理解も深まるかもしれません。ページ内リンクのズレでお困りの方は参考にしていただければ嬉しいです。</p>\n","date":"December 05, 2018","categories":[{"name":"JavaScript","slug":"javascript"}],"tags":null,"author":{"name":"はにわまん","slug":"haniwaman"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"7d9c7158-a82c-527c-a0ae-38e5ff0c209a"}}}