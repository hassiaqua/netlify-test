{"componentChunkName":"component---src-templates-post-js","path":"/wordpress-php/","result":{"data":{"wordpressPost":{"id":"a4e6106f-3884-5ec8-a9c4-af86ba45e8de","title":"WordPressのPHPで勉強すべきは値の確認方法！","slug":"wordpress-php","content":"<p>WordPressはPHPとDBからHTMLを作成して表示させるというシステマチックな作りなので、最低限のPHPが使える必要があります。ただ、PHPのエンジニアのようにゴリゴリで書ける必要はなく、WordPressで困らない程度の最低限の知識で大丈夫なはずです。</p>\n<p>WordPressでPHPが使えるとはどういうことかと考えた時に、<strong class=\"marker\">WordPressの関数から出力される値を自在に使えるようになること</strong>かなと思いました。</p>\n<p>この記事では、PHPの基礎をどこまで勉強すればいいかと、WordPressからの値の取得部分を集中的に紹介していけたらと思っています。</p>\n<div class=\"chat\"><figure class=\"chat-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"><figcaption>はにわまん</figcaption></figure><div class=\"chat-content\">WordPressはPHPで動いているので、テーマファイルを触るにはPHPの知識が少なからず必要です＞＜</div></div>\n<div id=\"toc_container\" class=\"no_bullets\"><p class=\"toc_title\">目次</p><ul class=\"toc_list\"><li><a href=\"#WordPressPHP\"><span class=\"toc_number toc_depth_1\">1</span> WordPressのために勉強しておくべきPHP</a><ul><li><a href=\"#No4_No15\"><span class=\"toc_number toc_depth_2\">1.1</span> 基礎は、ドットインストールのNo.4 ～ No.15</a></li><li><a href=\"#PHPXAMPPMAMP\"><span class=\"toc_number toc_depth_2\">1.2</span> PHPの動作環境はXAMPPやMAMPが手軽</a></li></ul></li><li><a href=\"#WordPress\"><span class=\"toc_number toc_depth_1\">2</span> WordPressの関数から値を自在に使えること</a><ul><li><a href=\"#i\"><span class=\"toc_number toc_depth_2\">2.1</span> ページ番号を確認してみる</a></li><li><a href=\"#i-2\"><span class=\"toc_number toc_depth_2\">2.2</span> 配列とオブジェクトが絡むと複雑</a></li><li><a href=\"#WordPress_Codex\"><span class=\"toc_number toc_depth_2\">2.3</span> WordPress Codexで関数を確認</a></li></ul></li><li><a href=\"#i-3\"><span class=\"toc_number toc_depth_1\">3</span> おわり</a></li></ul></div>\n<h2><span id=\"WordPressPHP\">WordPressのために勉強しておくべきPHP</span></h2>\n<p>PHPを覚えるというよりは、<strong class=\"marker\">ほとんどのプログラミング言語で共通する基礎的な部分</strong>になります。PHP以外の言語を触ったことのある方なら特に困ることなくWordPressを触れるはずです。</p>\n<h3><span id=\"No4_No15\">基礎は、ドットインストールのNo.4 ～ No.15</span></h3>\n<p>基礎はプログラミング動画学習の元祖ドットインストールの「<a href=\"https://dotinstall.com/lessons/basic_php_v2\" rel=\"noopener\" target=\"_blank\">PHP入門</a>」を理解するだけで十分かと思います。</p>\n<p>ゴリゴリに設計したWebアプリケーションを構築するのとは違い、<strong class=\"marker\">WordPressのテーマやプラグインに書いてあるコードを理解できるスキル</strong>を目的として勉強すると効率的に学べるかもしれません。</p>\n<p>具体的には、トッドインストールのPHP入門のNo.4 ～ No.15で、以下のような概念を（ある程度で大丈夫なので）理解しておくことですね。</p>\n<ul class=\"check\">\n<li>変数</li>\n<li>演算</li>\n<li>条件分岐</li>\n<li>繰返し</li>\n<li>関数</li>\n<li>配列</li>\n<li>オブジェクト</li>\n</ul>\n<blockquote class=\"twitter-tweet\" data-lang=\"ja\">\n<p lang=\"ja\" dir=\"ltr\">&#x1f4dd; WordPressのためのPHPの勉強範囲</p>\n<p>WordPressのためにPHPをどこまで勉強するか考えてたのですが、</p>\n<p>&#x2705; 変数<br />&#x2705; 演算<br />&#x2705; 条件分岐<br />&#x2705; 繰返し<br />&#x2705; 関数</p>\n<p>の概念が理解できれば大丈夫かと。</p>\n<p>具体的には、<a href=\"https://t.co/kacdiyjnBq\">https://t.co/kacdiyjnBq</a><br />のNo.4 ～ No.15まで！</p>\n<p>&mdash; はにわまん (@haniwa008) <a href=\"https://twitter.com/haniwa008/status/1068371631062450178?ref_src=twsrc%5Etfw\">2018年11月30日</a></p></blockquote>\n<p><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p>\n<div class=\"cstmreba\">\n<div class=\"kaerebalink-box\">\n<div class=\"kaerebalink-image\"><a href=\"\" target=\"_blank\" ><img src=\"https://thumbnail.image.rakuten.co.jp/ran/img/2001/0009/784/844/366/584/20010009784844366584_1.jpg?_ex=320x320\" style=\"border: none;\" /></a></div>\n<div class=\"kaerebalink-info\">\n<div class=\"kaerebalink-name\"><a href=\"\" target=\"_blank\" >ＷｏｒｄＰｒｅｓｓユーザーのためのＰＨＰ入門   第２版/エムディエヌコ-ポレ-ション/水野史土</a></p>\n<div class=\"kaerebalink-powered-date\">posted with <a href=\"https://kaereba.com\" rel=\"nofollow\" target=\"_blank\">カエレバ</a></div>\n</div>\n<div class=\"kaerebalink-detail\"></div>\n<div class=\"kaerebalink-link1\">\n<div class=\"shoplinkrakuten\"><a href=\"https://hb.afl.rakuten.co.jp/hgc/117225c0.b43e75d1.117225c1.f4ba597a/kaereba_main_201901142019566918?pc=https%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2FWordPress%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEPHP%25E5%2585%25A5%25E9%2596%2580%2520%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2581%258B%25E3%2582%2589%25E3%2580%2581%25E3%2581%25A6%25E3%2581%2584%25E3%2581%25AD%25E3%2581%2584%2F-%2Ff.1-p.1-s.1-sf.0-st.A-v.2%3Fx%3D0%26scid%3Daf_ich_link_urltxt%26m%3Dhttp%3A%2F%2Fm.rakuten.co.jp%2F\" target=\"_blank\" >楽天市場</a></div>\n<div class=\"shoplinkamazon\"><a href=\"https://www.amazon.co.jp/gp/search?keywords=WordPress%E3%83%A6%E3%83%BC%E3%82%B6%E3%83%BC%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AEPHP%E5%85%A5%E9%96%80%20%E3%81%AF%E3%81%98%E3%82%81%E3%81%8B%E3%82%89%E3%80%81%E3%81%A6%E3%81%84%E3%81%AD%E3%81%84&#038;__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&#038;tag=haniwaman-22\" target=\"_blank\" >Amazon</a></div>\n</div>\n</div>\n<div class=\"booklink-footer\"></div>\n</div>\n</div>\n<h3><span id=\"PHPXAMPPMAMP\">PHPの動作環境はXAMPPやMAMPが手軽</span></h3>\n<p>ドットインストールだと、コマンドプロンプトでPHPを実行していますが、馴染みがないしWordPressで使う時のイメージが持ちづらい気がします。</p>\n<p>XAMPPやMAMPというアプリケーションをインストールすれば、<strong class=\"marker\">ローカルの自分の環境でPHPを動かしてブラウザ上に表示させることができる</strong>ようになります。</p>\n<p>わたしはWindowsなので、XAMPPを導入してPHPを動かしてテストしたり練習していました。XAMPP導入の方法は以下でまとめていますので、参考にしていただければと思います。</p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"4XvVrmxbt2\"><p><a href=\"https://haniwaman.com/local-wordpress/\">XAMPPを使ってWordPressをローカル開発環境にインストールしよう！</a></p></blockquote>\n<p><iframe title=\"&#8220;XAMPPを使ってWordPressをローカル開発環境にインストールしよう！&#8221; &#8212; HPcode\" class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" src=\"https://haniwaman.com/local-wordpress/embed/#?secret=4XvVrmxbt2\" data-secret=\"4XvVrmxbt2\" width=\"500\" height=\"282\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></p>\n<h2><span id=\"WordPress\">WordPressの関数から値を自在に使えること</span></h2>\n<p>WordPressでPHPが使えるとはどういうことかと考えた時に、1つは、<strong class=\"marker\">WordPressの関数から出力される値を自在に使えるようになること</strong>なのかなと思いました。</p>\n<p>PHPの基礎はドットインストールで何周も聞きながら書いていけば、なんなとなく理解できてくるかと思います。続いては、こちらのより実践的な方法を紹介していけたらと思います。</p>\n<p>そこで覚えておくべき、PHPの関数が<code>var_dump();</code>です。</p>\n<p>WordPressから出力される値を確認するために確実に覚えておきましょう！！！</p>\n<h3><span id=\"i\">ページ番号を確認してみる</span></h3>\n<p>例えば、サブループを作る時によく出てくる<code>get_query_var( 'paged' )</code>という書き方があります。以下のように使わられることが多いです。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-0\">コピー</span><code id=\"code-0\" class=\"php\">$paged = ( get_query_var( 'paged' ) ) ? get_query_var( 'paged' ) : 1;\r\n</code></pre>\n<p>この<code>$paged</code>の値が実際にどういう値が入っているかを確認したい時は以下のように記載して確認することが可能です。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-1\">コピー</span><code id=\"code-1\" class=\"php\">$paged = ( get_query_var( 'paged' ) ) ? get_query_var( 'paged' ) : 1;\r\nvar_dump( $paged );</code></pre>\n<p>すると、記述した箇所に値が表示されるようになります。intというのは整数のことですね（分からなかったらPHP入門を復習してください）そして、1というのが<code>$paged</code>に格納されている値ということです。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/01/wordpress-php-2-700x383.png\" alt=\"\" class=\"alignnone size-medium wp-image-12674\" srcset=\"https://haniwaman.com/wp-content/uploads/2019/01/wordpress-php-2-700x383.png 700w, https://haniwaman.com/wp-content/uploads/2019/01/wordpress-php-2-768x420.png 768w, https://haniwaman.com/wp-content/uploads/2019/01/wordpress-php-2.png 1196w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<p>つまり、現在のページの該当のコードでは、<code>$paged</code>は整数型の「1」として使われているということが分かるわけです。</p>\n<p>このように、何が入っているか分からない変数があったら、積極的に<code>var_dump();</code>で確認していきましょう。わたしはめちゃくちゃ使います笑</p>\n<h3><span id=\"i-2\">配列とオブジェクトが絡むと複雑</span></h3>\n<p>int（整数）やstring（文字）など、単一の決まった値が返ってくれば簡単ですが、オブジェクトや配列だとちょっと複雑になります。どういう風に返ってくるかと、値の使い方について簡単に紹介していきます。</p>\n<p><code>get_the_tags()</code>でタグの一覧を取得した時の中身を見てみます。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-2\">コピー</span><code id=\"code-2\" class=\"php\">$tags = get_the_tags();\r\nvar_dump( $tags );</code></pre>\n<p>とりあえず、めっちゃ返ってきます&#8230;。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/01/wordpress-ph2p-700x667.png\" alt=\"\" class=\"alignnone size-medium wp-image-12661\" srcset=\"https://haniwaman.com/wp-content/uploads/2019/01/wordpress-ph2p-700x667.png 700w, https://haniwaman.com/wp-content/uploads/2019/01/wordpress-ph2p-768x731.png 768w, https://haniwaman.com/wp-content/uploads/2019/01/wordpress-ph2p.png 1175w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<p>文字で書き起こすと以下のようになります。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-3\">コピー</span><code id=\"code-3\" class=\"txt\">array (size=2)\r\n  0 =&gt; \r\n    object(WP_Term)[8689]\r\n      public 'term_id' =&gt; int 44\r\n      public 'name' =&gt; string 'WordPress' (length=9)\r\n      public 'slug' =&gt; string 'wordpress' (length=9)\r\n      public 'term_group' =&gt; int 0\r\n      public 'term_taxonomy_id' =&gt; int 44\r\n      public 'taxonomy' =&gt; string 'post_tag' (length=8)\r\n      public 'description' =&gt; string '' (length=0)\r\n      public 'parent' =&gt; int 0\r\n      public 'count' =&gt; int 1\r\n      public 'filter' =&gt; string 'raw' (length=3)\r\n  1 =&gt; \r\n    object(WP_Term)[8690]\r\n      public 'term_id' =&gt; int 31\r\n      public 'name' =&gt; string 'プラグイン' (length=15)\r\n      public 'slug' =&gt; string 'plugin' (length=6)\r\n      public 'term_group' =&gt; int 0\r\n      public 'term_taxonomy_id' =&gt; int 31\r\n      public 'taxonomy' =&gt; string 'post_tag' (length=8)\r\n      public 'description' =&gt; string '' (length=0)\r\n      public 'parent' =&gt; int 0\r\n      public 'count' =&gt; int 4\r\n      public 'filter' =&gt; string 'raw' (length=3)</code></pre>\n<h4>値を取り出す</h4>\n<p>では、上記の結果から値を取得してみましょう。<strong>arrayの「1」「2」でまとめらていている部分</strong>と、<strong>objectのいろんな単語（nameやslugなど）ででまとめられている部分</strong>の2つのエリアがあることが分かります。</p>\n<p>構造的にはarrayが先でobjectが後です。言葉だけでは意味が分からないと思うので、実際にterm_idの「31」という数字を取り出してみようと思います。</p>\n<pre><span class=\"code-copy\" data-clipboard-target=\"#code-4\">コピー</span><code id=\"code-4\" class=\"php\">echo $tags[1]-&gt;term_id;\r\n</code></pre>\n<p>これで「31」という値が表示されます。</p>\n<p>これは配列の<strong class=\"marker\">1番目の中のオブジェクト「term_id」を指し示す</strong>書き方になります。図で表すと以下のような配置ですよね。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/01/wordpress-php2-1-700x672.png\" alt=\"\" class=\"alignnone size-medium wp-image-12658\" srcset=\"https://haniwaman.com/wp-content/uploads/2019/01/wordpress-php2-1-700x672.png 700w, https://haniwaman.com/wp-content/uploads/2019/01/wordpress-php2-1-768x737.png 768w, https://haniwaman.com/wp-content/uploads/2019/01/wordpress-php2-1.png 993w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<p>配列の値を取得するときは<code>[]</code>で、オブジェクトの値を取得するときは、<code>-&gt;</code>を使います。<strong class=\"marker\">ここだけ覚えて</strong>おけば、後は<code>var_dump();</code>で確認すれば、どんな変数でも値を取ってこれるようになります。</p>\n<p>あとは、慣れなのでとにかくWordPressのテーマ内で<code>var_dump();</code>しまくりましょう！笑</p>\n<h3><span id=\"WordPress_Codex\">WordPress Codexで関数を確認</span></h3>\n<p>戻り値の確認方法として、<code>var_dump();</code>を押しまくってますが、<a href=\"https://wpdocs.osdn.jp/%E9%96%A2%E6%95%B0%E3%83%AA%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9\" rel=\"noopener\" target=\"_blank\">関数リファレンス &#8211; WordPress Codex 日本語版</a>を見れば、<strong class=\"marker\">おおよそどういう値が返ってくるかが分かります</strong>。</p>\n<p>例えば、先ほどの<code>get_the_tags()</code>であれば、<a href=\"https://wpdocs.osdn.jp/%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E3%82%BF%E3%82%B0/get_the_tags\" rel=\"noopener\" target=\"_blank\">テンプレートタグ/get the tags</a>が該当のページですね。</p>\n<p>戻り値の項目を見ると、「配列」でメンバー変数がなになにで、、、ということが書かれていました。メンバー変数がちょっと分かりませんが、、なんなとく配列で返ってきて、「term_id」とかの値が使えるんだろうなと、いうことが分かります。<br />\n<img src=\"https://haniwaman.com/wp-content/uploads/2019/01/wordpress-php3-1.png\" alt=\"\" class=\"alignnone size-full wp-image-12671\" /></p>\n<p>関数名でGoogle検索すると、WordPress Codexの日本語版がほぼ確実に出てきます。理解できていない関数が出てきたら、とりあえずGoogleで検索して意味だけでも覚えていうとWordPressの理解が深まっていくと思います。</p>\n<h2><span id=\"i-3\">おわり</span></h2><div class=\"matome\"><div class=\"matome-img\"><img src=\"https://haniwaman.com/wp-content/themes/hpcode/img/haniwa.png\" alt=\"\"></div><div class=\"matome-twitter\"><a href=\"https://twitter.com/haniwa008?ref_src=twsrc%5Etfw\" class=\"twitter-follow-button\" data-show-screen-name=\"false\" data-size=\"large\" data-lang=\"ja\" data-show-count=\"true\">Follow @haniwa008</a><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></div></div><!-- /matome -->\n<p>PHPの基本的は部分はドットインストールや体系的な書籍で勉強するとして、WordPress上では<code>var_dump();</code>を使いまくりましょう！というお話でした。</p>\n<p>PHPの基礎が理解できたら、あとはWordPressのお作法を覚える割合の方が圧倒的に多くなると思います。その時に、<a href=\"https://wpdocs.osdn.jp/%E9%96%A2%E6%95%B0%E3%83%AA%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9\" rel=\"noopener\" target=\"_blank\">WordPress Codex日本語版</a>や、テーマ内で<code>var_dump();</code>を使いまくって、覚えていくのが早そうと思って、こういう記事となりました。</p>\n<p>とにかく<code>var_dump();</code>を使いまくりましょう！</p>\n","date":"January 18, 2019","categories":[{"name":"WordPress","slug":"wordpress"}],"tags":null,"author":{"name":"はにわまん","slug":"haniwaman"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"a4e6106f-3884-5ec8-a9c4-af86ba45e8de"}}}